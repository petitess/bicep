[
  {
    "description": "Allow Azure services and resources to access this server must be set to  yes",
    "displayName": "DB-SQL-12: Allow Azure services and resources to access this server must be set to yes",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T16:14:22.986991Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:53:52.7257414Z"
    },
    "mode": "All",
    "name": "DB-SQL-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Sql/servers/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "equals": "0.0.0.0",
                "field": "Microsoft.Sql/servers/firewallRules/startIpAddress"
              },
              {
                "equals": "0.0.0.0",
                "field": "Microsoft.Sql/servers/firewallRules/endIpAddress"
              }
            ]
          },
          "type": "Microsoft.Sql/servers/firewallRules"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T16:14:22.901333+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:53:52.686823+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "'sg_Resource_ControlTower_Profile' : 'APPI - Single deployment', 'APPI - Elastic pool deployment'",
    "displayName": "DB-SQL-TAG-02: 'sg_Resource_ControlTower_Profile' : 'APPI - Single deployment', 'APPI - Elastic pool deployment'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-TAG-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-24T15:31:13.5737023Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:24:28.3149923Z"
    },
    "mode": "All",
    "name": "DB-SQL-TAG-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "APPI"
        ],
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagValue": {
        "allowedValues": [
          "APPI - Single deployment",
          "APPI - Elastic pool deployment"
        ],
        "defaultValue": [
          "APPI - Single deployment",
          "APPI - Elastic pool deployment"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "in": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-24T15:31:13.479477+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:24:28.276014+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "App Service Basic, Standard, PremiumV2, and PremiumV3 are the only tiers authorized ",
    "displayName": "WEBA-25-ENFORCE: App Service Basic, Standard, PremiumV2, and PremiumV3 are the only tiers authorized",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-25-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:06.6078238Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-02T12:12:02.5719726Z"
    },
    "mode": "All",
    "name": "WEBA-25-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfAllowedSKUs": {
        "allowedValues": [
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P0V3",
          "P1V3",
          "P2V3",
          "P3V3",
          "P1mv3",
          "P2mv3",
          "P3mv3",
          "P4mv3",
          "P5mv3",
          "P1v2",
          "P2v2",
          "P3v2",
          "EP1",
          "EP2",
          "EP3",
          "WS1",
          "WS2",
          "WS3"
        ],
        "defaultValue": [
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P0V3",
          "P1V3",
          "P2V3",
          "P3V3",
          "P1mv3",
          "P2mv3",
          "P3mv3",
          "P4mv3",
          "P5mv3",
          "P1v2",
          "P2v2",
          "P3v2",
          "EP1",
          "EP2",
          "EP3",
          "WS1",
          "WS2",
          "WS3"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed SKU types",
          "displayName": "listOfAllowedSKUs",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/serverFarms",
            "field": "type"
          },
          {
            "field": "Microsoft.Web/serverfarms/sku.name",
            "notIn": "[parameters('listOfAllowedSKUs')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.519228+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-02T12:12:02.557117+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": ": The sg_Resource_ControlTower_Confidentiality tag must be set : 'C0', 'C1', 'C2'",
    "displayName": "WEBA-21: The sg_Resource_ControlTower_Confidentiality tag must be set : 'C0', 'C1', 'C2'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-21-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:06.8203999Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.4514916Z"
    },
    "mode": "All",
    "name": "WEBA-21-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "C0",
          "C1",
          "C2"
        ],
        "defaultValue": [
          "C0",
          "C1",
          "C2"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.722358+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.421161+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Defender must be enabled for C2 handling App Service",
    "displayName": "WEBA-20: Azure Defender must be enabled for C2 handling App Service",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-20-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:06.8843348Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:41:31.1986018Z"
    },
    "mode": "All",
    "name": "WEBA-20-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          },
          {
            "equals": "[parameters('tagValue')]",
            "field": "[concat('tags[', parameters('tagName'), ']')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Standard",
            "field": "Microsoft.Security/pricings/pricingTier"
          },
          "existenceScope": "subscription",
          "name": "AppServices",
          "type": "Microsoft.Security/pricings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.816102+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:41:31.161223+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For availability needs A3, zone redundant App Service Plan must be enabled ",
    "displayName": "WEBA-26-ENFORCE: For availability needs A3, zone redundant App Service Plan must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-26-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:06.9315938Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:16:46.9748628Z"
    },
    "mode": "All",
    "name": "WEBA-26-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/serverFarms",
            "field": "type"
          },
          {
            "in": [
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          },
          {
            "equals": "false",
            "field": "Microsoft.Web/serverFarms/zoneRedundant"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.831729+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:16:46.885443+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The 'sg_Resource_ControlTower_Profile' name tag must be set, 2 values are allowed : 'public' or 'private'",
    "displayName": "WEBA-15: The 'sg_Resource_ControlTower_Profile' name tag must be set",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:06.9686519Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:18:18.9670839Z"
    },
    "mode": "All",
    "name": "WEBA-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "public",
          "private"
        ],
        "defaultValue": [
          "public",
          "private"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.878607+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:18:18.938472+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SCM network firewall must allow only access from : Saint-Gobain bluecoat Public IP Address and Cloud Factorys Providers (Claranet, others) Jump Host IP Ranges",
    "displayName": "WEBA-03: SCM network firewall must allow only access from authorized IP adresses",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:07.0246351Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-16T08:46:00.7656765Z"
    },
    "mode": "All",
    "name": "WEBA-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "whiteListSCMIPs": {
        "allowedValues": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.96.0/20",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "24.206.115.32",
          "24.206.115.33",
          "24.239.140.32",
          "24.239.140.33",
          "24.239.166.30",
          "24.239.166.31",
          "24.206.114.30",
          "24.206.114.31",
          "24.239.134.32",
          "24.239.134.33",
          "24.239.164.28",
          "24.239.164.29",
          "24.239.135.28",
          "24.239.135.29",
          "24.206.76.50",
          "24.206.76.51",
          "24.206.89.94",
          "24.206.89.95",
          "24.206.99.30",
          "24.206.99.31",
          "24.206.97.44",
          "24.206.97.45",
          "24.239.131.32",
          "24.239.131.33",
          "24.239.141.40",
          "24.239.141.41",
          "24.206.82.53",
          "24.206.82.54",
          "24.206.78.46",
          "24.206.78.47",
          "24.206.98.12",
          "24.206.98.13",
          "24.206.110.32",
          "24.206.110.33",
          "24.206.123.34",
          "24.206.123.35",
          "24.239.160.32",
          "24.239.160.33",
          "24.239.129.30",
          "24.239.129.31",
          "24.239.144.30",
          "24.239.144.31"
        ],
        "defaultValue": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.96.0/20",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "24.206.115.32",
          "24.206.115.33",
          "24.239.140.32",
          "24.239.140.33",
          "24.239.166.30",
          "24.239.166.31",
          "24.206.114.30",
          "24.206.114.31",
          "24.239.134.32",
          "24.239.134.33",
          "24.239.164.28",
          "24.239.164.29",
          "24.239.135.28",
          "24.239.135.29",
          "24.206.76.50",
          "24.206.76.51",
          "24.206.89.94",
          "24.206.89.95",
          "24.206.99.30",
          "24.206.99.31",
          "24.206.97.44",
          "24.206.97.45",
          "24.239.131.32",
          "24.239.131.33",
          "24.239.141.40",
          "24.239.141.41",
          "24.206.82.53",
          "24.206.82.54",
          "24.206.78.46",
          "24.206.78.47",
          "24.206.98.12",
          "24.206.98.13",
          "24.206.110.32",
          "24.206.110.33",
          "24.206.123.34",
          "24.206.123.35",
          "24.239.160.32",
          "24.239.160.33",
          "24.239.129.30",
          "24.239.129.31",
          "24.239.144.30",
          "24.239.144.31"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of whitelisted IPs addresses",
          "displayName": "whitelisted IPs addresses",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress",
                        "notIn": "[parameters('whiteListSCMIPs')]"
                      },
                      {
                        "equals": "Allow",
                        "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 0
              },
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "Any",
                        "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress"
                      },
                      {
                        "equals": "Deny",
                        "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.941113+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-16T08:46:00.745578+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Cross-Origin Resource Sharing (CORS) should not allow all domains to access your APPS. Allow only required domains to interact with your APPS",
    "displayName": "WEBA-08-ENFORCE: CORS should not allow every resource to access your APPS",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-08-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:06.8670856Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:04:50.3607152Z"
    },
    "mode": "All",
    "name": "WEBA-08-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "DeployIfNotExists",
          "Deny"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "forbiddenOrigins": {
        "allowedValues": [
          "*"
        ],
        "defaultValue": [
          "*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of urls forbidden for CORS",
          "displayName": "Forbidden CORS origins",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "webAppName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "webAppName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('webAppName'), '/web')]",
                    "properties": {
                      "cors": {
                        "allowedOrigins": []
                      }
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "evaluationDelay": "PT5M",
          "existenceCondition": {
            "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
            "notIn": "[parameters('forbiddenOrigins')]"
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.769240+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:04:50.330182+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For availability needs A3, zone redundant App Service Plan must be enabled ",
    "displayName": "WEBA-26: For availability needs A3, zone redundant App Service Plan must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-26-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:07.1708621Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:49:14.9875182Z"
    },
    "mode": "All",
    "name": "WEBA-26-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/serverFarms",
            "field": "type"
          },
          {
            "in": [
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          },
          {
            "equals": "false",
            "field": "Microsoft.Web/serverFarms/zoneRedundant"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:07.050488+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:49:14.962367+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " The app must use a certificate stored in a Key Vault",
    "displayName": "WEBA-06a: The app must use a certificate stored in a Key Vault",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-06a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:25:39.5587528Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.7123324Z"
    },
    "mode": "All",
    "name": "WEBA-06a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "exists": "true",
            "field": "Microsoft.Web/certificates/keyVaultId"
          },
          "type": "Microsoft.Web/certificates"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:25:39.444152+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.655551+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics logs are exported to a dedicated storage account or Logs Analytics (Dependency with SIEM Project) ",
    "displayName": "WEBA-14: Diagnostics logs must enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:25:39.5426286Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:35:15.7927327Z"
    },
    "mode": "All",
    "name": "WEBA-14-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "True",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "AppServiceHTTPLogs",
                          "AppServiceAuditLogs",
                          "AppServiceIPSecAuditLogs"
                        ]
                      }
                    ]
                  }
                },
                "greater": 0
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:25:39.428530+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:35:15.760316+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SCM network firewall must allow only access from : Saint-Gobain bluecoat Public IP Address and Cloud Factorys Providers (Claranet, others) Jump Host IP Ranges",
    "displayName": "WEBA-03-ENFORCE: SCM network firewall must allow only access from authorized IP adresses",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:25:39.6240086Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-16T08:46:00.8520815Z"
    },
    "mode": "All",
    "name": "WEBA-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "whiteListSCMIPs": {
        "allowedValues": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.96.0/20",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "24.206.115.32",
          "24.206.115.33",
          "24.239.140.32",
          "24.239.140.33",
          "24.239.166.30",
          "24.239.166.31",
          "24.206.114.30",
          "24.206.114.31",
          "24.239.134.32",
          "24.239.134.33",
          "24.239.164.28",
          "24.239.164.29",
          "24.239.135.28",
          "24.239.135.29",
          "24.206.76.50",
          "24.206.76.51",
          "24.206.89.94",
          "24.206.89.95",
          "24.206.99.30",
          "24.206.99.31",
          "24.206.97.44",
          "24.206.97.45",
          "24.239.131.32",
          "24.239.131.33",
          "24.239.141.40",
          "24.239.141.41",
          "24.206.82.53",
          "24.206.82.54",
          "24.206.78.46",
          "24.206.78.47",
          "24.206.98.12",
          "24.206.98.13",
          "24.206.110.32",
          "24.206.110.33",
          "24.206.123.34",
          "24.206.123.35",
          "24.239.160.32",
          "24.239.160.33",
          "24.239.129.30",
          "24.239.129.31",
          "24.239.144.30",
          "24.239.144.31"
        ],
        "defaultValue": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.96.0/20",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "24.206.115.32",
          "24.206.115.33",
          "24.239.140.32",
          "24.239.140.33",
          "24.239.166.30",
          "24.239.166.31",
          "24.206.114.30",
          "24.206.114.31",
          "24.239.134.32",
          "24.239.134.33",
          "24.239.164.28",
          "24.239.164.29",
          "24.239.135.28",
          "24.239.135.29",
          "24.206.76.50",
          "24.206.76.51",
          "24.206.89.94",
          "24.206.89.95",
          "24.206.99.30",
          "24.206.99.31",
          "24.206.97.44",
          "24.206.97.45",
          "24.239.131.32",
          "24.239.131.33",
          "24.239.141.40",
          "24.239.141.41",
          "24.206.82.53",
          "24.206.82.54",
          "24.206.78.46",
          "24.206.78.47",
          "24.206.98.12",
          "24.206.98.13",
          "24.206.110.32",
          "24.206.110.33",
          "24.206.123.34",
          "24.206.123.35",
          "24.239.160.32",
          "24.239.160.33",
          "24.239.129.30",
          "24.239.129.31",
          "24.239.144.30",
          "24.239.144.31"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of whitelisted IPs addresses",
          "displayName": "whitelisted IPs addresses",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/web')]",
                    "properties": {
                      "scmIpSecurityRestrictions": [
                        {
                          "action": "Allow",
                          "description": "Allow from WAF Imperva Ips",
                          "ipAddress": "192.109.140.0/24",
                          "name": "Allow from BlueCoat IP 1",
                          "priority": 120
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from WAF Imperva Ips",
                          "ipAddress": "192.109.141.0/24",
                          "name": "Allow from BlueCoat IP 2",
                          "priority": 200
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from WAF Imperva Ips",
                          "ipAddress": "192.109.143.0/24",
                          "name": "Allow from BlueCoat IP 3",
                          "priority": 300
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from WAF Imperva Ips",
                          "ipAddress": "192.109.144.0/24",
                          "name": "Allow from BlueCoat IP 4",
                          "priority": 400
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from WAF Imperva Ips",
                          "ipAddress": "192.109.145.0/24",
                          "name": "Allow from BlueCoat IP 5",
                          "priority": 500
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from WAF Imperva Ips",
                          "ipAddress": "192.109.146.0/24",
                          "name": "Allow from BlueCoat IP 6",
                          "priority": 600
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from WAF Imperva Ips",
                          "ipAddress": "192.109.147.0/24",
                          "name": "Allow from BlueCoat IP 7",
                          "priority": 700
                        },
                        {
                          "action": "Deny",
                          "description": "Deny all access",
                          "ipAddress": "Any",
                          "name": "Deny all",
                          "priority": 2147483647
                        }
                      ]
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "not": {
              "anyOf": [
                {
                  "count": {
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                    "where": {
                      "allOf": [
                        {
                          "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress",
                          "notIn": "[parameters('whiteListSCMIPs')]"
                        },
                        {
                          "equals": "Allow",
                          "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                        }
                      ]
                    }
                  },
                  "notEquals": 0
                },
                {
                  "count": {
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                    "where": {
                      "allOf": [
                        {
                          "equals": "Any",
                          "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress"
                        },
                        {
                          "equals": "Deny",
                          "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                        }
                      ]
                    }
                  },
                  "notEquals": 1
                }
              ]
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:25:39.537909+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-16T08:46:00.791684+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "App Service Basic, Standard, PremiumV2, and PremiumV3 are the only tiers authorized ",
    "displayName": "WEBA-25: App Service Basic, Standard, PremiumV2, and PremiumV3 are the only tiers authorized",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-25-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:25:39.7374769Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-02T12:12:02.5394816Z"
    },
    "mode": "All",
    "name": "WEBA-25-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfAllowedSKUs": {
        "allowedValues": [
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P0V3",
          "P1V3",
          "P2V3",
          "P3V3",
          "P1mv3",
          "P2mv3",
          "P3mv3",
          "P4mv3",
          "P5mv3",
          "P1v2",
          "P2v2",
          "P3v2",
          "EP1",
          "EP2",
          "EP3",
          "WS1",
          "WS2",
          "WS3"
        ],
        "defaultValue": [
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P0V3",
          "P1V3",
          "P2V3",
          "P3V3",
          "P1mv3",
          "P2mv3",
          "P3mv3",
          "P4mv3",
          "P5mv3",
          "P1v2",
          "P2v2",
          "P3v2",
          "EP1",
          "EP2",
          "EP3",
          "WS1",
          "WS2",
          "WS3"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed SKU types",
          "displayName": "listOfAllowedSKUs",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/serverFarms",
            "field": "type"
          },
          {
            "field": "Microsoft.Web/serverfarms/sku.name",
            "notIn": "[parameters('listOfAllowedSKUs')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:25:39.662910+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-02T12:12:02.521331+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "WebApp Firewall must only allow access from WAF Imperva",
    "displayName": "WEBA-04-ENFORCE: WebApp Firewall must only allow access from WAF Imperva",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:25:39.7696535Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:38:20.769516Z"
    },
    "mode": "All",
    "name": "WEBA-04-ENFORCE-sgct",
    "parameters": {
      "WAFIPs": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF IPs addresses",
          "displayName": "WAF IPs",
          "strongType": null
        },
        "type": "array"
      },
      "appProfileValues": {
        "allowedValues": [
          "public"
        ],
        "defaultValue": "public",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "string"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagAppProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "App profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          },
          {
            "equals": "[toUpper(parameters('appProfileValues'))]",
            "value": "[toUpper(field(concat('tags[', parameters('tagAppProfile'), ']')))]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/web')]",
                    "properties": {
                      "ipSecurityRestrictions": [
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "198.143.32.0/19",
                          "name": "Imperva IP",
                          "priority": 100
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "149.126.72.0/21",
                          "name": "Imperva IP",
                          "priority": 101
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "103.28.248.0/22",
                          "name": "Imperva IP",
                          "priority": 102
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "192.230.64.0/18",
                          "name": "Imperva IP",
                          "priority": 102
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "45.64.64.0/22",
                          "name": "Imperva IP",
                          "priority": 103
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "107.154.0.0/16",
                          "name": "Imperva IP",
                          "priority": 104
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "45.60.0.0/16",
                          "name": "Imperva IP",
                          "priority": 105
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "45.223.0.0/16",
                          "name": "Imperva IP",
                          "priority": 106
                        },
                        {
                          "action": "Deny",
                          "description": "Deny all access",
                          "ipAddress": "Any",
                          "name": "Deny all",
                          "priority": 2147483647
                        }
                      ]
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "not": {
              "anyOf": [
                {
                  "count": {
                    "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                    "where": {
                      "allOf": [
                        {
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress",
                          "notIn": "[parameters('WAFIPs')]"
                        },
                        {
                          "equals": "Allow",
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                        }
                      ]
                    }
                  },
                  "notEquals": 0
                },
                {
                  "count": {
                    "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                    "where": {
                      "allOf": [
                        {
                          "equals": "Any",
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress"
                        },
                        {
                          "equals": "Deny",
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                        }
                      ]
                    }
                  },
                  "notEquals": 1
                }
              ]
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:25:39.584787+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:38:20.726900+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The App must not have an embedded mysql DB ",
    "displayName": "WEBA-05: The App must not have an embedded mysql DB",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:25:39.7660517Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:06:28.6398723Z"
    },
    "mode": "All",
    "name": "WEBA-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "false",
            "field": "Microsoft.Web/sites/config/localMySqlEnabled"
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:25:39.631660+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:06:28.540519+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "App Service Private endpoint must be configured ",
    "displayName": "WEBA-23: App Service Private endpoint must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-23-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:25:39.8803934Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.4339676Z"
    },
    "mode": "All",
    "name": "WEBA-23-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Approved",
            "field": "Microsoft.Web/sites/privateEndpointConnections/privateLinkServiceConnectionState.status"
          },
          "type": "Microsoft.Web/sites/privateEndpointConnections"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:25:39.695090+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.411936+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Websocket must be disabled (except for specific use case i.e SignalR use case with Websocket name tag set to : SignalR) ",
    "displayName": "WEBA-17: Websocket must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-17-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:27:11.9484804Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:01:42.6761693Z"
    },
    "mode": "All",
    "name": "WEBA-17-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "websocket_profile"
        ],
        "defaultValue": "websocket_profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "websocket_profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "SignalR"
        ],
        "defaultValue": "SignalR",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notEquals": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "false",
            "field": "Microsoft.Web/sites/config/webSocketsEnabled"
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:27:11.837829+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:01:42.644507+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "WebApp Firewall must only allow access from WAF Imperva",
    "displayName": "WEBA-04: WebApp Firewall must only allow access from WAF Imperva",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:27:12.1373169Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:55:28.7957149Z"
    },
    "mode": "All",
    "name": "WEBA-04-sgct",
    "parameters": {
      "WAFIPs": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF IPs addresses",
          "displayName": "WAF IPs",
          "strongType": null
        },
        "type": "array"
      },
      "appProfileValues": {
        "allowedValues": [
          "public"
        ],
        "defaultValue": "public",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "string"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagAppProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "App profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          },
          {
            "equals": "[parameters('appProfileValues')]",
            "field": "[concat('tags[', parameters('tagAppProfile'), ']')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress",
                        "notIn": "[parameters('WAFIPs')]"
                      },
                      {
                        "equals": "Allow",
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 0
              },
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "Any",
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress"
                      },
                      {
                        "equals": "Deny",
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:27:11.994121+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:55:28.772148+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Production ressources must be locked against deletion",
    "displayName": "LCK-01: Production ressources must be locked against deletion",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/LCK-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T10:58:03.6874182Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-25T09:19:35.4899158Z"
    },
    "mode": "All",
    "name": "LCK-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "excludedResourceGroups": {
        "allowedValues": [
          "rg-dl-sgdbf-aks-*",
          "rg-dl-sgdbf-databricks-*",
          "rg-dp-abr-*-syws-prd-frc",
          "syws-rg-dp-abr-*-prd-frc",
          "rg-dp-sgdbf-vnet-*-frc"
        ],
        "defaultValue": [
          "rg-dl-sgdbf-aks-*",
          "rg-dl-sgdbf-databricks-*",
          "rg-dp-abr-*-syws-prd-frc",
          "syws-rg-dp-abr-*-prd-frc",
          "rg-dp-sgdbf-vnet-*-frc"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of excluded RSG used on aks or databricks",
          "displayName": null,
          "strongType": null
        },
        "type": "array"
      },
      "listOfResources": {
        "allowedValues": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.Devices/provisioningServices",
          "Microsoft.Kusto/clusters",
          "Microsoft.Network/applicationGateways",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.Network/privateEndpoints",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.Automation/automationAccounts",
          "Microsoft.CDN/profiles",
          "Microsoft.Cache/Redis",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Devices/IotHubs",
          "Microsoft.Sql/servers",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/domains",
          "Microsoft.EventGrid/namespaces",
          "Microsoft.EventGrid/systemTopics",
          "Microsoft.EventGrid/topics",
          "Microsoft.EventHub/namespaces",
          "Microsoft.Network/frontDoors",
          "Microsoft.Web/sites",
          "Microsoft.Network/loadBalancers",
          "Microsoft.Logic/workflows",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Network/natGateways",
          "Microsoft.Purview/accounts",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.SignalRService/SignalR",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.KeyVault/vaults",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines",
          "Microsoft.DigitalTwins/digitalTwinsInstances",
          "Microsoft.DBforPostgreSQL/serverGroupsv2",
          "Microsoft.AnalysisServices/servers",
          "Microsoft.Kusto/clusters",
          "Microsoft.Purview/Accounts",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.HybridCompute/machines",
          "microsoft.Dashboard/grafana",
          "Microsoft.Insights/components"
        ],
        "defaultValue": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.Devices/provisioningServices",
          "Microsoft.Kusto/clusters",
          "Microsoft.Network/applicationGateways",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.Network/privateEndpoints",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.Automation/automationAccounts",
          "Microsoft.CDN/profiles",
          "Microsoft.Cache/Redis",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Devices/IotHubs",
          "Microsoft.Sql/servers",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/domains",
          "Microsoft.EventGrid/namespaces",
          "Microsoft.EventGrid/systemTopics",
          "Microsoft.EventGrid/topics",
          "Microsoft.EventHub/namespaces",
          "Microsoft.Network/frontDoors",
          "Microsoft.Web/sites",
          "Microsoft.Network/loadBalancers",
          "Microsoft.Logic/workflows",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Network/natGateways",
          "Microsoft.Purview/accounts",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.SignalRService/SignalR",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.KeyVault/vaults",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines",
          "Microsoft.DigitalTwins/digitalTwinsInstances",
          "Microsoft.DBforPostgreSQL/serverGroupsv2",
          "Microsoft.AnalysisServices/servers",
          "Microsoft.Kusto/clusters",
          "Microsoft.Purview/Accounts",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.HybridCompute/machines",
          "microsoft.Dashboard/grafana",
          "Microsoft.Insights/components"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of all resources who needs to have lock",
          "displayName": null,
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          },
          {
            "field": "type",
            "in": "[parameters('listOfResources')]"
          },
          {
            "allOf": [
              {
                "notContains": "-core",
                "value": "[split(field('id'), '/')[4]]"
              },
              {
                "field": "name",
                "notContains": "-core"
              }
            ]
          },
          {
            "count": {
              "name": "allowedRSG",
              "value": "[parameters('excludedResourceGroups')]",
              "where": {
                "like": "[current('allowedRSG')]",
                "value": "[resourceGroup().name]"
              }
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "CanNotDelete",
            "field": "Microsoft.Authorization/locks/level"
          },
          "type": "Microsoft.Authorization/locks"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T10:58:03.598957+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-25T09:19:35.496791+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Detect resources deployed outside of allowed regions.",
    "displayName": "RegionLogs-01-sgct - Detect resources deployed outside of allowed regions.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RegionLogs-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-12T13:45:37.9031034Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:47:38.4491905Z"
    },
    "mode": "All",
    "name": "RegionLogs-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "resourceLocationList": {
        "allowedValues": [
          "westeurope",
          "eastus",
          "brazilsouth",
          "centralindia",
          "southeastasia",
          "francecentral",
          "westeurope",
          "global"
        ],
        "defaultValue": [
          "westeurope",
          "eastus",
          "brazilsouth",
          "centralindia",
          "southeastasia",
          "francecentral",
          "westeurope",
          "global"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of regions to exclude",
          "displayName": "The list of regions to exclude",
          "strongType": null
        },
        "type": "array"
      },
      "resourceType": {
        "allowedValues": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.Sql/servers",
          "Microsoft.EventGrid/systemTopics",
          "Microsoft.Storage/storageAccounts/blobServices",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Web/sites"
        ],
        "defaultValue": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.Sql/servers",
          "Microsoft.EventGrid/systemTopics",
          "Microsoft.Storage/storageAccounts/blobServices",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Web/sites"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types to monitor",
          "displayName": "The list of resource types to monitor",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "notIn": "[parameters('resourceLocationList')]"
          },
          {
            "field": "type",
            "in": "[parameters('resourceType')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-12T13:45:37.732812+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:47:38.345767+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Configure Linux Machines to be associated with a Data Collection Rule or a Data Collection Endpoint. Adaptation of 2ea82cdd-f2e8-4500-af75-67a2e084ca74.",
    "displayName": "AMA-07: Regional Scope - Configure Linux Machines to be associated with a Data Collection Rule or a Data Collection Endpoint",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-03T13:02:24.3185316Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:44:36.4488564Z"
    },
    "mode": "All",
    "name": "AMA-07-sgct",
    "parameters": {
      "dcrResourceId": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourceGroups/rg-security-governance-prd-XXXX/providers/Microsoft.Insights/dataCollectionRules/dcr-security-governance-prd-XXXX",
        "metadata": {
          "assignPermissions": null,
          "description": "Resource Id of the Data Collection Rule or the Data Collection Endpoint to be applied on the Linux machines in scope.",
          "displayName": "Data Collection Rule Resource Id or Data Collection Endpoint Resource Id",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy.",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfLinuxImageIdToInclude": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of machine images that have supported Linux OS to add to scope. Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'",
          "displayName": "Additional Linux Machine Images",
          "strongType": null
        },
        "type": "Array"
      },
      "resourceType": {
        "allowedValues": [
          "Microsoft.Insights/dataCollectionRules",
          "Microsoft.Insights/dataCollectionEndpoints"
        ],
        "defaultValue": "Microsoft.Insights/dataCollectionRules",
        "metadata": {
          "assignPermissions": null,
          "description": "Either a Data Collection Rule (DCR) or a Data Collection Endpoint (DCE)",
          "displayName": "Resource Type",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "in": [
              "australiacentral",
              "australiacentral2",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "brazilsoutheast",
              "canadacentral",
              "canadaeast",
              "centralindia",
              "centralus",
              "eastasia",
              "eastus",
              "eastus2",
              "eastus2euap",
              "francecentral",
              "francesouth",
              "germanywestcentral",
              "japaneast",
              "japanwest",
              "jioindiawest",
              "koreacentral",
              "koreasouth",
              "northcentralus",
              "northeurope",
              "norwayeast",
              "norwaywest",
              "southafricanorth",
              "southcentralus",
              "southeastasia",
              "southindia",
              "swedencentral",
              "switzerlandnorth",
              "switzerlandwest",
              "uaenorth",
              "uksouth",
              "ukwest",
              "westcentralus",
              "westeurope",
              "westindia",
              "westus",
              "westus2",
              "westus3"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "Microsoft.HybridCompute/machines",
                    "field": "type"
                  },
                  {
                    "equals": "linux",
                    "field": "Microsoft.HybridCompute/machines/osName"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "equals": "Microsoft.Compute/virtualMachines",
                        "field": "type"
                      },
                      {
                        "equals": "Microsoft.Compute/virtualMachineScaleSets",
                        "field": "type"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageId",
                        "in": "[parameters('listOfLinuxImageIdToInclude')]"
                      },
                      {
                        "allOf": [
                          {
                            "equals": "RedHat",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "RHEL",
                              "RHEL-ARM64",
                              "RHEL-BYOS",
                              "RHEL-HA",
                              "RHEL-SAP",
                              "RHEL-SAP-APPS",
                              "RHEL-SAP-HA"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "8*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "rhel-lvm7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "rhel-lvm8*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "SUSE",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "anyOf": [
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "in": [
                                      "SLES",
                                      "SLES-HPC",
                                      "SLES-HPC-Priority",
                                      "SLES-SAP",
                                      "SLES-SAP-BYOS",
                                      "SLES-Priority",
                                      "SLES-BYOS",
                                      "SLES-SAPCAL",
                                      "SLES-Standard"
                                    ]
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "field": "Microsoft.Compute/imageSku",
                                        "like": "12*"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageSku",
                                        "like": "15*"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "sles-12*"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "sles-15*"
                                      }
                                    ]
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSku",
                                    "in": [
                                      "gen1",
                                      "gen2"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "Canonical",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "anyOf": [
                              {
                                "equals": "UbuntuServer",
                                "field": "Microsoft.Compute/imageOffer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "0001-com-ubuntu-server-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "0001-com-ubuntu-pro-*"
                              }
                            ]
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "in": [
                              "14.04.0-lts",
                              "14.04.1-lts",
                              "14.04.2-lts",
                              "14.04.3-lts",
                              "14.04.4-lts",
                              "14.04.5-lts",
                              "16_04_0-lts-gen2",
                              "16_04-lts-gen2",
                              "16.04-lts",
                              "16.04.0-lts",
                              "18_04-lts-arm64",
                              "18_04-lts-gen2",
                              "18.04-lts",
                              "20_04-lts-arm64",
                              "20_04-lts-gen2",
                              "20_04-lts",
                              "22_04-lts-gen2",
                              "22_04-lts",
                              "pro-16_04-lts-gen2",
                              "pro-16_04-lts",
                              "pro-18_04-lts-gen2",
                              "pro-18_04-lts",
                              "pro-20_04-lts-gen2",
                              "pro-20_04-lts",
                              "pro-22_04-lts-gen2",
                              "pro-22_04-lts"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "Oracle",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "Oracle-Linux",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "8*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "OpenLogic",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "CentOS",
                              "Centos-LVM",
                              "CentOS-SRIOV"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "6*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "8*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "cloudera",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "cloudera-centos-os",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "like": "7*"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "almalinux",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "almalinux",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "like": "8*"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "ctrliqinc1648673227698",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "like": "rocky-8*"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "like": "rocky-8*"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "credativ",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "Debian"
                            ]
                          },
                          {
                            "equals": "9",
                            "field": "Microsoft.Compute/imageSku"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "Debian",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "debian-10",
                              "debian-11"
                            ]
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "in": [
                              "10",
                              "10-gen2",
                              "11",
                              "11-gen2"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "microsoftcblmariner",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "cbl-mariner",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "in": [
                              "1-gen2",
                              "cbl-mariner-1",
                              "cbl-mariner-2",
                              "cbl-mariner-2-arm64",
                              "cbl-mariner-2-gen2"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "dcrResourceId": {
                  "value": "[parameters('dcrResourceId')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                },
                "resourceType": {
                  "value": "[parameters('resourceType')]"
                },
                "type": {
                  "value": "[field('type')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "dcrResourceId": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  },
                  "resourceType": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  }
                ],
                "variables": {
                  "dceAssociationName": "configurationAccessEndpoint",
                  "dceResourceType": "Microsoft.Insights/dataCollectionEndpoints",
                  "dcrAssociationName": "[concat('assoc-', uniqueString(concat(parameters('resourceName'), replace(parameters('dcrResourceId'), 'XXXX', parameters('location')))))]",
                  "dcrResourceType": "Microsoft.Insights/dataCollectionRules"
                }
              }
            }
          },
          "evaluationDelay": "AfterProvisioning",
          "existenceCondition": {
            "anyOf": [
              {
                "contains": "[substring(parameters('dcrResourceId'),0,93)]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionRuleId"
              },
              {
                "contains": "[substring(parameters('dcrResourceId'),0,93)]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionEndpointId"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "type": "Microsoft.Insights/dataCollectionRuleAssociations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-03T13:02:24.235272+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:44:36.394119+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Default Backup should not be used. A Backup plan is to be defined for the data based on the PSAT score",
    "displayName": "AAS-08: Default Backup should not be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.6075008Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AAS-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "exists": true,
            "field": "Microsoft.AnalysisServices/servers/backupBlobContainerUri"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.520791+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-22T10:12:43.520791+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The Firewall must whitelist Saint-Gobain IPs for users connecting through the Public Endpoint",
    "displayName": "AAS-04: The Firewall must whitelist Saint-Gobain IPs for users connecting through the Public Endpoint",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.7532234Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-05T11:14:15.5155071Z"
    },
    "mode": "All",
    "name": "AAS-04-sgct",
    "parameters": {
      "ZScalerIP": {
        "allowedValues": [
          "27.251.211.238/32",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "216.52.207.64/26",
          "209.51.184.0/26",
          "72.52.96.0/26",
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "213.52.102.0/24",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "197.98.201.0/24",
          "70.39.159.0/24",
          "194.9.116.0/24",
          "185.46.212.0/22",
          "199.168.148.0/22",
          "194.9.112.0/22",
          "104.129.192.0/20",
          "194.9.96.0/20",
          "165.225.192.0/18",
          "137.83.128.0/18",
          "147.161.128.0/17",
          "165.225.0.0/17",
          "136.226.0.0/16",
          "167.103.0.0/16",
          "170.85.0.0/16"
        ],
        "defaultValue": [
          "27.251.211.238/32",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "216.52.207.64/26",
          "209.51.184.0/26",
          "72.52.96.0/26",
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "213.52.102.0/24",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "197.98.201.0/24",
          "70.39.159.0/24",
          "194.9.116.0/24",
          "185.46.212.0/22",
          "199.168.148.0/22",
          "194.9.112.0/22",
          "104.129.192.0/20",
          "194.9.96.0/20",
          "165.225.192.0/18",
          "137.83.128.0/18",
          "147.161.128.0/17",
          "165.225.0.0/17",
          "136.226.0.0/16",
          "167.103.0.0/16",
          "170.85.0.0/16"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of ZScaler IP addresses ranges",
          "displayName": "ZScaler IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.AnalysisServices/servers/ipV4FirewallSettings.firewallRules[*]"
            },
            "notEquals": 0
          },
          {
            "count": {
              "field": "Microsoft.AnalysisServices/servers/ipV4FirewallSettings.firewallRules[*]",
              "where": {
                "count": {
                  "name": "ZScalerIPs",
                  "value": "[parameters('ZScalerIP')]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "value": "[ipRangeContains(current('ZScalerIPs'), first(field('Microsoft.AnalysisServices/servers/ipV4FirewallSettings.firewallRules[*].rangeStart')))]"
                      },
                      {
                        "equals": true,
                        "value": "[ipRangeContains(current('ZScalerIPs'), first(field('Microsoft.AnalysisServices/servers/ipV4FirewallSettings.firewallRules[*].rangeEnd')))]"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            },
            "notEquals": "[length(field('Microsoft.AnalysisServices/servers/ipV4FirewallSettings.firewallRules[*]'))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.661430+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-05T11:14:15.494702+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Data confidentiality tag must be set to C0, C1 or C2",
    "displayName": "AAS-TAG-02: Data confidentiality tag must be set to C0, C1 or C2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-TAG-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.7404555Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AAS-TAG-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "C0",
          "C1",
          "C2"
        ],
        "defaultValue": [
          "C0",
          "C1",
          "C2"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.645841+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-22T10:12:43.645841+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Developer tier must not be used in production environment",
    "displayName": "AAS-07: Developer tier must not be used in production environment",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.7609933Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AAS-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          },
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "equals": "Development",
            "field": "Microsoft.AnalysisServices/servers/sku.tier"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.677044+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-22T10:12:43.677044+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostic settings must be enabled",
    "displayName": "AAS-09: Diagnostic settings must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.7704389Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AAS-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.AnalysisServices/servers",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.661430+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-22T10:12:43.661430+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The 'sg_Resource_ControlTower_Profile' name tag must be set to 'Public'",
    "displayName": "AAS-TAG-01: The 'sg_Resource_ControlTower_Profile' name tag must be set",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-TAG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.7763403Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AAS-TAG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "Public"
        ],
        "defaultValue": [
          "Public"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.661430+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-22T10:12:43.661430+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The Firewall of the service must be enabled",
    "displayName": "AAS-03: The Firewall of the service must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.8355649Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AAS-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.AnalysisServices/servers/ipV4FirewallSettings"
              },
              {
                "equals": true,
                "value": "[empty(field('Microsoft.AnalysisServices/servers/ipV4FirewallSettings'))]"
              },
              {
                "equals": 0,
                "value": "[length(field('Microsoft.AnalysisServices/servers/ipV4FirewallSettings'))]"
              },
              {
                "exists": false,
                "field": "Microsoft.AnalysisServices/servers/ipV4FirewallSettings.firewallRules"
              },
              {
                "exists": false,
                "field": "Microsoft.AnalysisServices/servers/ipV4FirewallSettings.enablePowerBIService"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.708294+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-22T10:12:43.708294+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If the client is using PowerBI, the Firewall rules must be configured to allow all PowerBI IPs",
    "displayName": "AAS-05: If the client is using PowerBI, the Firewall rules must be configured to allow all PowerBI IPs",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-22T10:12:43.8357997Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AAS-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.AnalysisServices/servers/ipV4FirewallSettings"
              },
              {
                "field": "Microsoft.AnalysisServices/servers/ipV4FirewallSettings.enablePowerBIService",
                "notEquals": true
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-22T10:12:43.723919+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-22T10:12:43.723919+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The users with Grafana Admin and Grafana Editor built-in roles must uses their A95 accounts for LZV1 Essentials offer to access Azure Managed Grafana instance",
    "displayName": "GFNA-11: Azure Grafana managed instance must be deployed using the Standard Plan",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:03:18.0770719Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "GFNA-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "field": "Microsoft.Dashboard/grafana/sku.name",
            "notEquals": "Standard"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:03:17.991182+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-06T14:03:17.991182+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Role assignment must be done through an Azure AD group (no direct user assignment).",
    "displayName": "ID-07-GLOBAL-sgct: Role assignment must be done through an Azure AD group (no direct user assignment).",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ID-07-GLOBAL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-19T15:26:29.7786584Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ID-07-GLOBAL-sgct",
    "parameters": {
      "denyType": {
        "allowedValues": [
          "user"
        ],
        "defaultValue": [
          "user"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to deny assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Authorization/roleAssignments",
            "field": "type"
          },
          {
            "field": "Microsoft.Authorization/roleAssignments/principalType",
            "in": "[parameters('denyType')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-19T15:26:29.695360+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-19T15:26:29.695360+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "WebApp Firewall must only allow access from WAF Imperva (APPIO)",
    "displayName": "WEBA-24b-ENFORCE: WebApp Firewall must only allow access from WAF Imperva (APPIO)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-24b-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-22T13:03:28.2220308Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "WEBA-24b-ENFORCE-sgct",
    "parameters": {
      "WAFIPs": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF IPs addresses",
          "displayName": "WAF IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/web')]",
                    "properties": {
                      "ipSecurityRestrictions": [
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "198.143.32.0/19",
                          "name": "Imperva IP",
                          "priority": 100
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "149.126.72.0/21",
                          "name": "Imperva IP",
                          "priority": 101
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "103.28.248.0/22",
                          "name": "Imperva IP",
                          "priority": 102
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "192.230.64.0/18",
                          "name": "Imperva IP",
                          "priority": 102
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "45.64.64.0/22",
                          "name": "Imperva IP",
                          "priority": 103
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "107.154.0.0/16",
                          "name": "Imperva IP",
                          "priority": 104
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "45.60.0.0/16",
                          "name": "Imperva IP",
                          "priority": 105
                        },
                        {
                          "action": "Allow",
                          "description": "Deny all access",
                          "ipAddress": "45.223.0.0/16",
                          "name": "Imperva IP",
                          "priority": 106
                        },
                        {
                          "action": "Deny",
                          "description": "Deny all access",
                          "ipAddress": "Any",
                          "name": "Deny all",
                          "priority": 2147483647
                        }
                      ]
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "not": {
              "anyOf": [
                {
                  "count": {
                    "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                    "where": {
                      "allOf": [
                        {
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress",
                          "notIn": "[parameters('WAFIPs')]"
                        },
                        {
                          "equals": "Allow",
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                        }
                      ]
                    }
                  },
                  "notEquals": 0
                },
                {
                  "count": {
                    "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                    "where": {
                      "allOf": [
                        {
                          "equals": "Any",
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress"
                        },
                        {
                          "equals": "Deny",
                          "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                        }
                      ]
                    }
                  },
                  "notEquals": 1
                }
              ]
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-22T13:03:28.130833+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-22T13:03:28.130833+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "WebApp Firewall must only allow access from WAF Imperva (APPIO)",
    "displayName": "WEBA-24b: WebApp Firewall must only allow access from WAF Imperva (APPIO)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-24b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-22T13:03:28.2221838Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "WEBA-24b-sgct",
    "parameters": {
      "WAFIPs": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF IPs addresses",
          "displayName": "WAF IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress",
                        "notIn": "[parameters('WAFIPs')]"
                      },
                      {
                        "equals": "Allow",
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 0
              },
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "Any",
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress"
                      },
                      {
                        "equals": "Deny",
                        "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-22T13:03:28.127683+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-22T13:03:28.127683+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled for Internal Load Balancer",
    "displayName": "DIAG-ILB: Diagnostics settings must be enabled for ILB",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ILB-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-15T13:54:56.2503604Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-09T15:44:17.4226988Z"
    },
    "mode": "All",
    "name": "DIAG-ILB-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/loadBalancers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "LoadBalancerHealthEvent",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Network/loadBalancers/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "LoadBalancerHealthEvent",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-15T13:54:56.149756+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-09T15:44:17.434863+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled for DB-FLEX-PGSQL",
    "displayName": "DIAG-DB-FLEX-PGSQL: Diagnostics settings must be enabled for DB-FLEX-PGSQL",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-DB-FLEX-PGSQL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-15T13:58:00.908289Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-12T12:52:10.6796525Z"
    },
    "mode": "All",
    "name": "DIAG-DB-FLEX-PGSQL-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "PostgreSQLLogs",
                          "enabled": true
                        },
                        {
                          "category": "PostgreSQLFlexSessions",
                          "enabled": true
                        },
                        {
                          "category": "PostgreSQLFlexQueryStoreRuntime",
                          "enabled": true
                        },
                        {
                          "category": "PostgreSQLFlexQueryStoreWaitStats",
                          "enabled": true
                        },
                        {
                          "category": "PostgreSQLFlexTableStats",
                          "enabled": true
                        },
                        {
                          "category": "PostgreSQLFlexDatabaseXacts",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.DBforPostgreSQL/flexibleServers/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category",
                        "in": [
                          "PostgreSQLLogs",
                          "PostgreSQLFlexSessions",
                          "PostgreSQLFlexQueryStoreRuntime",
                          "PostgreSQLFlexQueryStoreWaitStats",
                          "PostgreSQLFlexTableStats",
                          "PostgreSQLFlexDatabaseXacts"
                        ]
                      }
                    ]
                  }
                },
                "equals": 6
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-15T13:58:00.789510+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-12T12:52:10.662293+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Managed private endpoints must be used to setup a private connection between Azure Grafana and private supported Azure data sources",
    "displayName": "GFNA-07: Managed private endpoints must be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-13T15:56:36.5192209Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "GFNA-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "notIn": [
              "Microsoft.DocumentDB/databaseAccounts",
              "Microsoft.DBforPostgreSQL/serverGroupsv2",
              "Microsoft.Kusto/Clusters",
              "microsoft.insights/privatelinkscopes",
              "Microsoft.monitor/accounts",
              "Microsoft.Sql/managedInstances",
              "Microsoft.Sql/servers",
              "Microsoft.Network/privateLinkServices",
              "Microsoft.Databricks/workspaces",
              "Microsoft.DBforPostgreSQL/flexibleServers"
            ],
            "value": "[concat(split(field('Microsoft.Dashboard/grafana/managedPrivateEndpoints/privateLinkResourceId'),'/')[6],'/',split(field('Microsoft.Dashboard/grafana/managedPrivateEndpoints/privateLinkResourceId'),'/')[7])]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-13T15:56:36.394305+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-13T15:56:36.394305+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Web App Minimum_tls_version must be 1.2 or 1.3",
    "displayName": "WEBA-11: Web App Minimum_tls_version must be 1.2 or 1.3",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/WEBA-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-20T15:47:51.645918Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "WEBA-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "notContains": "functionapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "siteName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                  "siteName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "name": "[concat(parameters('siteName'), '/web')]",
                    "properties": {
                      "minTlsVersion": "1.2"
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "field": "Microsoft.Web/sites/config/minTlsVersion",
            "greaterOrEquals": "1.2"
          },
          "name": "web",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-20T15:47:51.563784+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-20T15:47:51.563784+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public blob access is not authorized",
    "displayName": "FOUNDATIONS-04 - Public blob access is not authorized",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FOUNDATIONS-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-16T15:11:02.4668723Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "Indexed",
    "name": "FOUNDATIONS-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "publicBlob"
        ],
        "defaultValue": [
          "publicBlob"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags not involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
            "notIn": "[parameters('networkProfileValues')]"
          },
          {
            "notIn": [
              "APPIO"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "id",
            "notContains": "/resourceGroups/databricks-rg-"
          },
          {
            "not": {
              "equals": "false",
              "field": "Microsoft.Storage/storageAccounts/allowBlobPublicAccess"
            }
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-16T15:11:02.363110+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T15:11:02.363110+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "FTPS / git accounts must be disabled",
    "displayName": "FUNC-21 - FTPS / git accounts must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-21-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:15.0292693Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-23T14:41:33.2174671Z"
    },
    "mode": "All",
    "name": "FUNC-21-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "webAppName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "webAppName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('webAppName'), '/web')]",
                    "properties": {
                      "ftpsState": "Disabled"
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "equals": "disabled",
            "field": "Microsoft.Web/sites/config/ftpsState"
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:14.975555+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-23T14:41:33.216838+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In use case 1, tag 'sg_Resource_ControlTower_Profile' == 'Internet', for data < C2, VNet rules on resource must allow traffic only from vNets of the same subscription",
    "displayName": "VAULT-19 - VNet rules must allow flow only from vNets of the same subscription",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-19-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:15.399429Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:53:55.7174527Z"
    },
    "mode": "All",
    "name": "VAULT-19-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C0",
          "C1",
          "C2"
        ],
        "defaultValue": [
          "C0",
          "C1",
          "C2"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "Internet"
        ],
        "defaultValue": "Internet",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "string"
      },
      "tagConf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "equals": "[parameters('networkProfileValues')]",
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('confValue')]"
          },
          {
            "count": {
              "field": "Microsoft.KeyVault/vaults/networkAcls.virtualNetworkRules[*]"
            },
            "greater": 0
          },
          {
            "field": "Microsoft.KeyVault/vaults/networkAcls.virtualNetworkRules[*].id",
            "notcontains": "[subscription().id]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:15.350599+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:53:55.702661+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Verify that event grid subscription handlers belong to the same azure subscription",
    "displayName": "EVT-GRD-01 - event grid subscription handlers belong to the same azure subscription",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/EVT-GRD-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:15.6444177Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:42.6234318Z"
    },
    "mode": "All",
    "name": "EVT-GRD-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.EventGrid/systemTopics",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "contains": "[subscription().id]",
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.AzureFunction.resourceId"
              },
              {
                "contains": "[subscription().id]",
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.ServiceBusTopic.resourceId"
              },
              {
                "contains": "[subscription().id]",
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.ServiceBusQueue.resourceId"
              },
              {
                "contains": "[subscription().id]",
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.HybridConnection.resourceId"
              },
              {
                "contains": "[subscription().id]",
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.StorageQueue.resourceId"
              },
              {
                "contains": "[subscription().id]",
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.EventHub.resourceId"
              }
            ]
          },
          "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:15.553740+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:42.596177+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The configuration must contain a CORS block (Global API level)",
    "displayName": "APIM-04a: The configuration must contain a CORS block (Global API level)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/APIM-04a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:15.9480789Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:58:35.0293043Z"
    },
    "mode": "All",
    "name": "APIM-04a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/policies",
            "field": "type"
          },
          {
            "contains": "<origin>*</origin>",
            "field": "Microsoft.ApiManagement/service/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:15.881897+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:58:35.005454+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public IP card are not allowed",
    "displayName": "VM-01 - Public IP card are not allowed",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:16.0280637Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-28T11:02:29.1045239Z"
    },
    "mode": "All",
    "name": "VM-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkInterfaces",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*]",
              "where": {
                "allOf": [
                  {
                    "exists": true,
                    "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].publicIpAddress"
                  },
                  {
                    "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].publicIpAddress.id",
                    "notEquals": ""
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:15.960080+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-28T11:02:29.055759+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, specify the current use case (sg_Resource_ControlTower_Profile=INTERNET or SGNET)",
    "displayName": "ASA-01: specify the current use case (sg_Resource_ControlTower_Profile=INTERNET or SGNET)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ASA-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:16:49.4302965Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:49:11.7247157Z"
    },
    "mode": "All",
    "name": "ASA-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "INTERNET",
          "SGNET"
        ],
        "defaultValue": [
          "INTERNET",
          "SGNET"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Synapse/workspaces",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:16:49.375789+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:49:11.696336+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable source control on development data factories by using a Git repository (versioning, tracking capabilities)",
    "displayName": "ADF-13: Enable source control on development data factories by using a Git repository",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:16:50.2253666Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:32:09.8608653Z"
    },
    "mode": "All",
    "name": "ADF-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "environment",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "prd",
          "ppr"
        ],
        "defaultValue": [
          "prd",
          "ppr"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.DataFactory/factories/repoConfiguration.repositoryName"
              },
              {
                "equals": "",
                "field": "Microsoft.DataFactory/factories/repoConfiguration.repositoryName"
              },
              {
                "field": "Microsoft.DataFactory/factories/repoConfiguration.type",
                "notEquals": "FactoryVSTSConfiguration"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:16:50.157036+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:32:09.778026+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "On all use case, by reviewing monitoring and logging: Diagnostic logs for user-driven events (pull/push etc) in your registry must be logged within Azure Monitor",
    "displayName": "ACR-08: Diagnostic logs for user-driven events (pull/push etc) in your registry must be logged within Azure Monitor",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACR-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:18:23.6535489Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:16:46.8514491Z"
    },
    "mode": "All",
    "name": "ACR-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ContainerRegistry/registries",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:18:23.447531+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:16:46.822936+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If sg_Resource_ControlTower_Profile=SGNET / use case 3, Private endpoint must be enabled and assigned  & No vnet rule must be configured.",
    "displayName": "COS-DB-12 - For SGNET, Private endpoint must be enabled and assigned",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:18:25.1304488Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:44:36.6254918Z"
    },
    "mode": "All",
    "name": "COS-DB-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource_profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfileValue": {
        "allowedValues": null,
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "equals": "[parameters('tagResourceProfileValue')]",
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections"
              },
              {
                "count": {
                  "field": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections[*]"
                },
                "equals": 0
              },
              {
                "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled",
                "notEquals": "true"
              },
              {
                "exists": "true",
                "field": "Microsoft.DocumentDB/databaseAccounts/virtualNetworkRules[*].id"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:18:25.010245+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:44:36.597259+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "On all use case, by reviewing Registry Security policies: Retention policy must be activated [Azure preview]",
    "displayName": "ACR-04: Retention policy must be activated",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACR-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:19:58.7098758Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:00:09.1065222Z"
    },
    "mode": "All",
    "name": "ACR-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "equals": "disabled",
            "field": "Microsoft.ContainerRegistry/registries/policies.retentionPolicy.status"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:19:58.613132+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:00:09.059374+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IP rules must be set to allow traffic only from WAF Imperva",
    "displayName": "STO-39 - IP rules must be set to allow traffic only from WAF Imperva",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-39-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:19:58.9998212Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:29:05.5989439Z"
    },
    "mode": "All",
    "name": "STO-39-sgct",
    "parameters": {
      "WAFImpervaIP": {
        "allowedValues": null,
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "authenticatedPublicBlob"
        ],
        "defaultValue": [
          "authenticatedPublicBlob"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "exists": true,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                "in": "[parameters('networkProfileValues')]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value",
                "notIn": "[parameters('WAFImpervaIP')]"
              },
              {
                "equals": "Allow",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:19:58.925597+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:29:05.420892+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Publicly HTTPS exposed Functions must use the WAF",
    "displayName": "FUNC-15 - Publicly HTTPS exposed Functions must use the WAF",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:21:33.0725316Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-23T14:41:33.1468474Z"
    },
    "mode": "All",
    "name": "FUNC-15-sgct",
    "parameters": {
      "WAFIPs": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF IPs addresses",
          "displayName": "WAF IPs",
          "strongType": null
        },
        "type": "array"
      },
      "appProfileValues": {
        "allowedValues": [
          "public"
        ],
        "defaultValue": "public",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "string"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagAppProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          },
          {
            "equals": "[parameters('appProfileValues')]",
            "field": "[concat('tags[', parameters('tagAppProfile'), ']')]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/publicNetworkAccess"
              },
              {
                "field": "Microsoft.Web/sites/publicNetworkAccess",
                "notEquals": "Disabled"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress",
                        "notEquals": "Any"
                      },
                      {
                        "Equals": 0,
                        "count": {
                          "name": "WAFIPs",
                          "value": "[parameters('WAFIPs')]",
                          "where": {
                            "Equals": true,
                            "value": "[ipRangeContains(current('WAFIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                          }
                        }
                      },
                      {
                        "equals": "Allow",
                        "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 0
              },
              {
                "equals": "Deny",
                "field": "Microsoft.Web/sites/config/IpSecurityRestrictionsDefaultAction"
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:21:32.965930+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-23T14:41:33.146631+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, specify the Data confidentiality level in the current use case (sg_Resource_ControlTower_Confidentiality=C0,C1,C2 )",
    "displayName": "ASA-02: specify the Data confidentiality level with tag sg_Resource_ControlTower_Confidentiality",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ASA-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:21:33.7181078Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:38:26.1524882Z"
    },
    "mode": "All",
    "name": "ASA-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "C0",
          "C1",
          "C2"
        ],
        "defaultValue": [
          "C0",
          "C1",
          "C2"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Synapse/workspaces",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:21:33.622238+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:38:26.115999+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The configuration must contain a CORS block (API level)",
    "displayName": "APIM-04c: The configuration must contain a CORS block (API level)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/APIM-04c-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:21:34.017711Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:35:15.7742295Z"
    },
    "mode": "All",
    "name": "APIM-04c-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/apis/policies",
            "field": "type"
          },
          {
            "contains": "<origin>*</origin>",
            "field": "Microsoft.ApiManagement/service/apis/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:21:33.919140+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:35:15.744692+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IP forwarding must be disabled on NIC",
    "displayName": "VM-09 - IP forwarding must be disabled on NIC",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:23:07.7724764Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:03:16.4178619Z"
    },
    "mode": "All",
    "name": "VM-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkInterfaces",
            "field": "type"
          },
          {
            "equals": "true",
            "field": "Microsoft.Network/networkInterfaces/enableIpForwarding"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:23:07.709394+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:03:16.385771+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Market place images are not allowed",
    "displayName": "VM-06 - Market place images are not allowed",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:23:07.8967869Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-11T14:39:28.3493512Z"
    },
    "mode": "All",
    "name": "VM-06-sgct",
    "parameters": {
      "approvedImages": {
        "allowedValues": [
          "Saint Gobain"
        ],
        "defaultValue": "Saint Gobain",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Approved Images",
          "displayName": "Approved Images",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Compute/virtualMachines",
              "Microsoft.Compute/VirtualMachineScaleSets"
            ]
          },
          {
            "allOf": [
              {
                "not": {
                  "field": "Microsoft.Compute/imagePublisher",
                  "like": "[parameters('approvedImages')]"
                }
              },
              {
                "exists": true,
                "field": "Microsoft.Compute/imagePublisher"
              }
            ]
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "[concat('tags[', 'managed_databricks', ']')]"
              },
              {
                "field": "[concat('tags[', 'managed_databricks', ']')]",
                "notequals": "true"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:23:07.834416+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-11T14:39:28.336238+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Confidentiality', configure Network Access Control, Default Action 'Deny'. Public network must be on 'None' Private Endpoint configuration 'Client connection / REST API / Server connection'",
    "displayName": "SNLR-03 - If C2 data, Default Action 'Deny'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SNLR-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:24:43.9362948Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:06:28.7244512Z"
    },
    "mode": "All",
    "name": "SNLR-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "sg_Resource_ControlTower_Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "valueConf": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": [
          "C2"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of sg_Resource_ControlTower_Confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.SignalRService/SignalR",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('valueConf')]"
          },
          {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "equals": "Allow",
                    "field": "Microsoft.SignalRService/SignalR/networkACLs.defaultAction"
                  },
                  {
                    "exists": false,
                    "field": "Microsoft.SignalRService/SignalR/networkACLs.publicNetwork.allow"
                  },
                  {
                    "count": {
                      "field": "Microsoft.SignalRService/SignalR/networkACLs.publicNetwork.allow[*]"
                    },
                    "greater": 0
                  }
                ]
              },
              {
                "count": {
                  "field": "Microsoft.SignalRService/SignalR/networkACLs.privateEndpoints[*]",
                  "where": {
                    "contains": "Trace",
                    "field": "Microsoft.SignalRService/SignalR/networkACLs.privateEndpoints[*].allow[*]"
                  }
                },
                "greater": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:24:43.859207+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:06:28.618650+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IP rules must be set to Deny traffic from Internet",
    "displayName": "STO-11 - IP rules must be set to Deny traffic from Internet",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:24:44.108215Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:32:15.7068288Z"
    },
    "mode": "All",
    "name": "STO-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "publicBlob",
          "authenticatedPrivateBlob",
          "SGNETBlob",
          "SGNETADLS",
          "InternetFile",
          "InternetQueue"
        ],
        "defaultValue": [
          "publicBlob",
          "authenticatedPrivateBlob",
          "SGNETBlob",
          "SGNETADLS",
          "InternetFile",
          "InternetQueue"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "exists": true,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                "in": "[parameters('networkProfileValues')]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                "notEquals": "Deny"
              },
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
                },
                "notequals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:24:44.046718+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:32:15.650209+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Soft delete must be enabled on Key Vault",
    "displayName": "VAULT-07 - Soft delete must be enabled on Key Vault",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:26:19.7976333Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-12T16:00:32.2175157Z"
    },
    "mode": "All",
    "name": "VAULT-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.KeyVault/vaults/enableSoftDelete"
              },
              {
                "equals": "false",
                "field": "Microsoft.KeyVault/vaults/enableSoftDelete"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:26:19.727717+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-12T16:00:32.209124+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "min TLS version must be 1.2",
    "displayName": "DB-PGSQL-03 - min TLS version must be 1.2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-PGSQL-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:26:19.9415384Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:41:26.3180426Z"
    },
    "mode": "All",
    "name": "DB-PGSQL-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/servers",
            "field": "type"
          },
          {
            "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
            "notEquals": "TLS1_2"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:26:19.040138+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:41:26.256061+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Authentications to the service must use System Managed Identities",
    "displayName": "ACOS-02: Authentications to the service must use System Managed Identities ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACOS-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:26:20.8292335Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:44:32.1047312Z"
    },
    "mode": "All",
    "name": "ACOS-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.CognitiveServices/accounts",
            "field": "type"
          },
          {
            "field": "kind",
            "notEquals": "OpenAI"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:26:20.274630+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:44:32.066523+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS must not allow all origins",
    "displayName": "STO-05 - CORS must not allow all origins (Queue Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:27:54.917808Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.4492939Z"
    },
    "mode": "All",
    "name": "STO-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists",
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/queueServices/cors.corsRules[*]",
              "where": {
                "contains": "*",
                "field": "Microsoft.Storage/storageAccounts/queueServices/cors.corsRules[*].allowedOrigins[*]"
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:27:54.862675+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.422963+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Firewall rules do not allow all network",
    "displayName": "VAULT-01 - Firewall rules do not allow all network ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:29:29.5695232Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-19T14:33:01.165982Z"
    },
    "mode": "All",
    "name": "VAULT-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "allof": [
                  {
                    "field": "Microsoft.KeyVault/vaults/publicNetworkAccess",
                    "notEquals": "Disabled"
                  },
                  {
                    "Exists": "False",
                    "field": "Microsoft.KeyVault/vaults/networkAcls"
                  }
                ]
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.KeyVault/vaults/publicNetworkAccess",
                    "notEquals": "Disabled"
                  },
                  {
                    "equals": "Allow",
                    "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:29:29.498348+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-19T14:33:01.130703+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Weak cipher suite should be disabled",
    "displayName": "AGW-09: Weak cipher suite should be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:29:30.4872236Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.6861636Z"
    },
    "mode": "All",
    "name": "AGW-09-sgct",
    "parameters": {
      "cipherAllowed": {
        "allowedValues": [
          "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
          "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
        ],
        "defaultValue": [
          "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
          "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of allowed cipher suites",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/applicationGateways",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/applicationGateways/sslProfiles[*].sslPolicy.cipherSuites[*]",
              "where": {
                "field": "Microsoft.Network/applicationGateways/sslProfiles[*].sslPolicy.cipherSuites[*]",
                "notIn": "[parameters('cipherAllowed')]"
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:29:30.404632+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.639931+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS must not allow all origins",
    "displayName": "STO-29 - CORS must not allow all origins (Table Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-29-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:31:07.1093703Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:50:47.3933149Z"
    },
    "mode": "All",
    "name": "STO-29-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists",
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/tableServices/cors.corsRules[*]",
              "where": {
                "contains": "*",
                "field": "Microsoft.Storage/storageAccounts/tableServices/cors.corsRules[*].allowedOrigins[*]"
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:31:06.961801+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:50:47.360096+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable Diagnostic Settings and export logs to data sink for monitoring purposes",
    "displayName": "ACOS-04: Enable Diagnostic Settings and export logs to data sink for monitoring purposes",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACOS-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:32:44.6453982Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:01:42.7873226Z"
    },
    "mode": "All",
    "name": "ACOS-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "requiredRetentionDays": {
        "allowedValues": null,
        "defaultValue": 90,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Mandatory retention of diagnostics logs in days",
          "displayName": "Mandatory retention (days)",
          "strongType": null
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.CognitiveServices/accounts",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
                      },
                      {
                        "equals": "[parameters('requiredRetentionDays')]",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days"
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                            "notEquals": "true"
                          },
                          {
                            "exists": false,
                            "field": "Microsoft.Insights/diagnosticSettings/storageAccountId"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "greaterOrEquals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:32:44.565596+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:01:42.769474+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Anonymous access denied if tag sg_Resource_ControlTower_Profile NOT EQUALS publicBlob",
    "displayName": "STO-07 - Anonymous access denied if tag sg_Resource_ControlTower_Profile NOT EQUALS publicBlob",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:34:19.3000248Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-16T13:25:15.2948259Z"
    },
    "mode": "All",
    "name": "STO-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The effect determines what happens when the policy rule is evaluated to match",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "publicBlob"
        ],
        "defaultValue": [
          "publicBlob"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags not involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                "notIn": "[parameters('networkProfileValues')]"
              }
            ]
          },
          {
            "field": "id",
            "notContains": "/resourceGroups/databricks-rg-"
          },
          {
            "not": {
              "equals": "false",
              "field": "Microsoft.Storage/storageAccounts/allowBlobPublicAccess"
            }
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:34:19.231332+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-16T13:25:15.275011+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Check network filtering rules (allow only selected network)",
    "displayName": "SBUS-08 - Check network filtering rules (allow only selected network)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:34:20.1896637Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:24:28.2029199Z"
    },
    "mode": "All",
    "name": "SBUS-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Deny",
            "field": "Microsoft.ServiceBus/namespaces/networkrulesets/defaultAction"
          },
          "type": "Microsoft.ServiceBus/namespaces/networkrulesets"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:34:20.090795+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:24:28.119752+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "An IDP must be configured",
    "displayName": "APIM-06: An IDP must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/APIM-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:35:55.4251726Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T12:46:22.2454921Z"
    },
    "mode": "All",
    "name": "APIM-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "identityProviders": {
        "allowedValues": [
          "aad"
        ],
        "defaultValue": [
          "aad"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of allowed Identity Providers",
          "displayName": "Identity Providers",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ApiManagement/service",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.ApiManagement/service/identityProviders/clientId"
              },
              {
                "field": "Microsoft.ApiManagement/service/identityProviders/type",
                "in": "[parameters('identityProviders')]"
              },
              {
                "count": {
                  "field": "Microsoft.ApiManagement/service/identityProviders/allowedTenants[*]",
                  "where": {
                    "notIn": [
                      "e339bd4b-2e3b-4035-a452-2112d502f2ff"
                    ],
                    "value": "[current('Microsoft.ApiManagement/service/identityProviders/allowedTenants[*]')]"
                  }
                },
                "equals": 0
              },
              {
                "count": {
                  "field": "Microsoft.ApiManagement/service/identityProviders/allowedTenants[*]",
                  "where": {
                    "equals": "e339bd4b-2e3b-4035-a452-2112d502f2ff",
                    "value": "[current('Microsoft.ApiManagement/service/identityProviders/allowedTenants[*]')]"
                  }
                },
                "equals": 1
              }
            ]
          },
          "type": "Microsoft.ApiManagement/service/identityProviders"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:35:55.350175+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T12:46:22.227637+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Should only be updated via an Azure DevOps / GitHub pipeline or via a Resource Management template",
    "displayName": "ADF-14: Production factories must not have a Git repository associated with them",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:35:55.8331565Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.3680283Z"
    },
    "mode": "All",
    "name": "ADF-14-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "environment",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "prd",
          "ppr"
        ],
        "defaultValue": [
          "prd",
          "ppr"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          },
          {
            "exists": "true",
            "field": "Microsoft.DataFactory/factories/repoConfiguration.repositoryName"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:35:55.678429+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.344835+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing logging and monitoring, Auditing for Azure SQL Database must be activated and stored at least 90days",
    "displayName": "DB-SQL-06: Auditing for Azure SQL Database must be activated and stored at least 90days",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:32.2532562Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:35:20.9972767Z"
    },
    "mode": "All",
    "name": "DB-SQL-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "retentionDays": {
        "allowedValues": null,
        "defaultValue": 89,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Desired Auditing retention days",
          "strongType": null
        },
        "type": "Integer"
      },
      "state": {
        "allowedValues": [
          "enabled",
          "disabled"
        ],
        "defaultValue": "enabled",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Desired Auditing setting state",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allof": [
              {
                "equals": "[parameters('state')]",
                "field": "Microsoft.Sql/servers/AuditingSettings/default.state"
              },
              {
                "field": "Microsoft.Sql/servers/AuditingSettings/default.retentionDays",
                "greater": "[parameters('retentionDays')]"
              }
            ]
          },
          "name": "default",
          "type": "Microsoft.Sql/servers/AuditingSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:32.125217+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:35:20.976961+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System MSI must be enabled",
    "displayName": "APIM-07: System MSI must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/APIM-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:32.7907773Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T12:18:02.4727661Z"
    },
    "mode": "All",
    "name": "APIM-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:32.719031+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T12:18:02.444234+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In use case 2 and 3, tag sg_Resource_ControlTower_Profile == 'SGNet' or 'DMZ' or 'APPI', no vnet rules must be configured",
    "displayName": "VAULT-18 - If profile is 'SGNET' or 'DMZ' or 'APPI', no vnet rules must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:32.8525353Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:19:50.8840738Z"
    },
    "mode": "All",
    "name": "VAULT-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValuesAPPI": {
        "allowedValues": [
          "APPI"
        ],
        "defaultValue": "APPI",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value for DMZ",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValuesDMZ": {
        "allowedValues": [
          "DMZ"
        ],
        "defaultValue": "DMZ",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value for DMZ",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValuesSGNET": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value for SGNET",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "[toUpper(parameters('networkProfileValuesSGNET'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagResourceProfile'), ']')))]"
              },
              {
                "equals": "[toUpper(parameters('networkProfileValuesDMZ'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagResourceProfile'), ']')))]"
              },
              {
                "equals": "[toUpper(parameters('networkProfileValuesAPPI'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagResourceProfile'), ']')))]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                "notEquals": "Deny"
              },
              {
                "count": {
                  "field": "Microsoft.KeyVault/vaults/networkAcls.virtualNetworkRules[*]"
                },
                "notequals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:32.656521+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:19:50.850737+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Subnets must have a Network Security Group (NSG) attached.",
    "displayName": "NSG-01 - Subnets must have a Network Security Group (NSG) attached.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/NSG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:32.8710655Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.231233Z"
    },
    "mode": "All",
    "name": "NSG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks/subnets",
            "field": "type"
          },
          {
            "exists": "false",
            "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:32.797156+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.169373+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The public IP address must have a DNS name",
    "displayName": "AGW-01: The public IP address must have a DNS name",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:33.0697229Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.2808806Z"
    },
    "mode": "All",
    "name": "AGW-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Network/applicationGateways",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "exists": true,
            "field": "Microsoft.Network/publicIPAddresses/dnsSettings.fqdn"
          },
          "name": "[last(split(first(field('Microsoft.Network/applicationGateways/frontendIPConfigurations[*].publicIPAddress.id')),'/'))]",
          "type": "Microsoft.Network/publicIPAddresses"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:32.984677+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.247501+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "http listener and backends are forbidden",
    "displayName": "AGW-07: http listener and backends are forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:39:11.361817Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.5415767Z"
    },
    "mode": "All",
    "name": "AGW-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/applicationGateways",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "Http",
                "field": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection[*].protocol"
              },
              {
                "equals": "Http",
                "field": "Microsoft.Network/applicationGateways/httpListeners[*].protocol"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:39:11.230059+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.485472+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Allow only WAF IP addresses & No Internet access configured (any-to-any)",
    "displayName": "COS-DB-02 - Allow only WAF IP addresses & No Internet access configured (any-to-any)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:39:11.6524737Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:16:46.8407929Z"
    },
    "mode": "All",
    "name": "COS-DB-02-sgct",
    "parameters": {
      "BluecoatIP": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled"
              },
              {
                "field": "Microsoft.DocumentDB/databaseAccounts/ipRules[*].ipAddressOrRange",
                "notIn": "[parameters('BluecoatIP')]"
              },
              {
                "equals": "0.0.0.0",
                "field": "Microsoft.DocumentDB/databaseAccounts/ipRules[*].ipAddressOrRange"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:39:11.572306+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:16:46.807308+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "TLS minimum version must 1.2",
    "displayName": "CFR-03 - TLS minimum version must 1.2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/CFR-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:39:12.0413222Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:06:28.7037052Z"
    },
    "mode": "All",
    "name": "CFR-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Cache/redis",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "true",
                "field": "Microsoft.Cache/Redis/enableNonSslPort"
              },
              {
                "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                "notEquals": "1.2"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:39:11.869216+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:06:28.587401+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The 'sg_Resource_ControlTower_Profile' name tag must be set to 'private'",
    "displayName": "AAC-TAG-03: The 'sg_Resource_ControlTower_Profile' name tag must be set",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAC-TAG-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-26T13:01:11.0949836Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:44:36.3732385Z"
    },
    "mode": "All",
    "name": "AAC-TAG-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "private"
        ],
        "defaultValue": [
          "private"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AppConfiguration/configurationStores",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-26T13:01:10.999373+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:44:36.347238+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only Key-Vault reference must be used to manage secrets in App Configuration. ",
    "displayName": "AAC-03: Only Key-Vault reference must be used to manage secrets in App Configuration. ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAC-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-26T13:01:11.5137198Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-20T11:59:05.0930305Z"
    },
    "mode": "All",
    "name": "AAC-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AppConfiguration/configurationStores",
            "field": "type"
          },
          {
            "exists": false,
            "field": "Microsoft.AppConfiguration/configurationStores/encryption.keyVaultProperties"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-26T13:01:11.421262+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T11:59:05.059012+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For data availability >= A2 soft delete and purge protection must be enabled ",
    "displayName": "AAC-08: For data availability  >= A2 soft delete and purge protection must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAC-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-26T13:01:11.5916927Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.4980228Z"
    },
    "mode": "All",
    "name": "AAC-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AppConfiguration/configurationStores",
            "field": "type"
          },
          {
            "In": [
              "A2",
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.AppConfiguration/configurationStores/enablePurgeProtection",
                "notEquals": true
              },
              {
                "field": "Microsoft.AppConfiguration/configurationStores/softDeleteRetentionInDays",
                "lessOrEquals": 6
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-26T13:01:11.483757+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.454219+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "All Diagnostic logs must be enabled and sent to the Log Analytics Workspace in the HUB. ",
    "displayName": "AAC-10 : All Diagnostic logs must be enabled and sent to the Log Analytics Workspace in the HUB.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAC-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-26T13:01:11.7408562Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:41:26.3647126Z"
    },
    "mode": "All",
    "name": "AAC-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.AppConfiguration/configurationStores",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                        "greater": 7
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                            "notEquals": "true"
                          },
                          {
                            "exists": false,
                            "field": "Microsoft.Insights/diagnosticSettings/storageAccountId"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "greaterOrEquals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-26T13:01:11.608759+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:41:26.334195+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For data availability >= A4 use geo-replication to replicate your data to a different location ",
    "displayName": "AAC-09: For data availability >= A4 use geo-replication to replicate your data to a different location",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAC-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-26T13:01:11.8822317Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:22:55.545164Z"
    },
    "mode": "All",
    "name": "AAC-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AppConfiguration/configurationStores",
            "field": "type"
          },
          {
            "equals": "A4",
            "value": "[toUpper(subscription().tags['availability'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existencecondition": {
            "allOf": [
              {
                "exists": true,
                "field": "name"
              }
            ]
          },
          "type": "Microsoft.AppConfiguration/configurationStores/replicas"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-26T13:01:11.811888+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:22:55.472624+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Configure Linux virtual machines to run Azure Monitor Agent with user-assigned managed identity-based authentication. Adaptation of ae8a10e6-19d6-44a3-a02d-a2bdfc707742.",
    "displayName": "AMA-04bis: Configure Linux virtual machines to run Azure Monitor Agent with user-assigned managed identity-based authentication",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-04bis-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-10T15:09:22.0770884Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:22:55.5652922Z"
    },
    "mode": "All",
    "name": "AMA-04bis-sgct",
    "parameters": {
      "AmaSubscription": {
        "allowedValues": null,
        "defaultValue": "e45678c8-c0cf-4188-8d90-cebac8052b4d",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Subscription",
          "displayName": "AMA identity Subscription ",
          "strongType": null
        },
        "type": "String"
      },
      "bringYourOwnUserAssignedManagedIdentity": {
        "allowedValues": [
          false,
          true
        ],
        "defaultValue": true,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "If set to true, Azure Monitor Agent will use the user-assigned managed identity specified via the 'User-Assigned Managed Identity ...' parameters for authentication. Otherwise, Azure Monitor Agent will use the user-assigned managed identity /subscriptions/<subscription-id>/resourceGroups/built-in-identity-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/built-in-identity-<location> for authentication.",
          "displayName": "Bring Your Own User-Assigned Managed Identity",
          "strongType": null
        },
        "type": "Boolean"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy.",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfLinuxImageIdToInclude": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of virtual machine images that have supported Linux OS to add to scope. Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'",
          "displayName": "Additional Virtual Machine Images",
          "strongType": null
        },
        "type": "Array"
      },
      "scopeToSupportedImages": {
        "allowedValues": [
          true,
          false
        ],
        "defaultValue": true,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "If set to true, the policy will apply only to virtual machines with supported operating systems. Otherwise, the policy will apply to all virtual machine resources in the assignment scope. For supported operating systems, see https://aka.ms/AMAOverview.",
          "displayName": "Scope Policy to Azure Monitor Agent-Supported Operating Systems",
          "strongType": null
        },
        "type": "Boolean"
      },
      "userAssignedManagedIdentityName": {
        "allowedValues": null,
        "defaultValue": "AMAUserAssignedIdentity",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The name of the user-assigned managed identity which Azure Monitor Agent will use for authentication when 'Bring Your Own User-Assigned Managed Identity' is set to true.",
          "displayName": "User-Assigned Managed Identity Name",
          "strongType": null
        },
        "type": "String"
      },
      "userAssignedManagedIdentityResourceGroup": {
        "allowedValues": null,
        "defaultValue": "rg-001-853-prod-frc-sentinel",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The resource group of the user-assigned managed identity which Azure Monitor Agent will use for authentication when 'Bring Your Own User-Assigned Managed Identity' is set to true.",
          "displayName": "User-Assigned Managed Identity Resource Group",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "field": "location",
            "in": [
              "australiacentral",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "canadacentral",
              "canadaeast",
              "centralindia",
              "centralus",
              "centraluseuap",
              "eastasia",
              "eastus",
              "eastus2",
              "eastus2euap",
              "francecentral",
              "germanywestcentral",
              "japaneast",
              "japanwest",
              "jioindiawest",
              "koreacentral",
              "koreasouth",
              "northcentralus",
              "northeurope",
              "norwayeast",
              "qatarcentral",
              "southafricanorth",
              "southcentralus",
              "southeastasia",
              "southindia",
              "swedencentral",
              "switzerlandnorth",
              "uaenorth",
              "uksouth",
              "ukwest",
              "westcentralus",
              "westeurope",
              "westindia",
              "westus",
              "westus2",
              "westus3"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": false,
                    "value": "[parameters('scopeToSupportedImages')]"
                  },
                  {
                    "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                    "like": "Linux*"
                  }
                ]
              },
              {
                "field": "Microsoft.Compute/imageId",
                "in": "[parameters('listOfLinuxImageIdToInclude')]"
              },
              {
                "allOf": [
                  {
                    "equals": "RedHat",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "RHEL",
                      "RHEL-ARM64",
                      "RHEL-BYOS",
                      "RHEL-HA",
                      "RHEL-SAP",
                      "RHEL-SAP-APPS",
                      "RHEL-SAP-HA"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "7*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "8*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "rhel-lvm7*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "rhel-lvm8*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "SUSE",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "SLES",
                              "SLES-HPC",
                              "SLES-HPC-Priority",
                              "SLES-SAP",
                              "SLES-SAP-BYOS",
                              "SLES-Priority",
                              "SLES-BYOS",
                              "SLES-SAPCAL",
                              "SLES-Standard"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "12*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "15*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "sles-12*"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "sles-15*"
                              }
                            ]
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "in": [
                              "gen1",
                              "gen2"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Canonical",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "anyOf": [
                      {
                        "equals": "UbuntuServer",
                        "field": "Microsoft.Compute/imageOffer"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "0001-com-ubuntu-server-*"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "0001-com-ubuntu-pro-*"
                      }
                    ]
                  },
                  {
                    "field": "Microsoft.Compute/imageSku",
                    "in": [
                      "14.04.0-lts",
                      "14.04.1-lts",
                      "14.04.2-lts",
                      "14.04.3-lts",
                      "14.04.4-lts",
                      "14.04.5-lts",
                      "16_04_0-lts-gen2",
                      "16_04-lts-gen2",
                      "16.04-lts",
                      "16.04.0-lts",
                      "18_04-lts-arm64",
                      "18_04-lts-gen2",
                      "18.04-lts",
                      "20_04-lts-arm64",
                      "20_04-lts-gen2",
                      "20_04-lts",
                      "22_04-lts-gen2",
                      "22_04-lts",
                      "pro-16_04-lts-gen2",
                      "pro-16_04-lts",
                      "pro-18_04-lts-gen2",
                      "pro-18_04-lts",
                      "pro-20_04-lts-gen2",
                      "pro-20_04-lts",
                      "pro-22_04-lts-gen2",
                      "pro-22_04-lts"
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Oracle",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "Oracle-Linux",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "7*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "8*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "OpenLogic",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "CentOS",
                      "Centos-LVM",
                      "CentOS-SRIOV"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "6*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "7*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "8*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "cloudera",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "cloudera-centos-os",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSku",
                    "like": "7*"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "almalinux",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "almalinux",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSku",
                    "like": "8*"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "ctrliqinc1648673227698",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "like": "rocky-8*"
                  },
                  {
                    "field": "Microsoft.Compute/imageSku",
                    "like": "rocky-8*"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "credativ",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "Debian"
                    ]
                  },
                  {
                    "equals": "9",
                    "field": "Microsoft.Compute/imageSku"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Debian",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "debian-10",
                      "debian-11"
                    ]
                  },
                  {
                    "field": "Microsoft.Compute/imageSku",
                    "in": [
                      "10",
                      "10-gen2",
                      "11",
                      "11-gen2"
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "microsoftcblmariner",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "cbl-mariner",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSku",
                    "in": [
                      "1-gen2",
                      "cbl-mariner-1",
                      "cbl-mariner-2",
                      "cbl-mariner-2-arm64",
                      "cbl-mariner-2-gen2"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "userAssignedManagedIdentity": {
                  "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), concat('/subscriptions/', parameters('AmaSubscription'), '/resourceGroups/', parameters('userAssignedManagedIdentityResourceGroup'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('userAssignedManagedIdentityName')), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/built-in-identity-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/built-in-identity-', field('location')))]"
                },
                "vmName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "userAssignedManagedIdentity": {
                    "type": "string"
                  },
                  "vmName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('vmName'), '/', variables('extensionName'))]",
                    "properties": {
                      "autoUpgradeMinorVersion": true,
                      "enableAutomaticUpgrade": true,
                      "publisher": "[variables('extensionPublisher')]",
                      "settings": {
                        "authentication": {
                          "managedIdentity": {
                            "identifier-name": "mi_res_id",
                            "identifier-value": "[parameters('userAssignedManagedIdentity')]"
                          }
                        }
                      },
                      "type": "[variables('extensionType')]",
                      "typeHandlerVersion": "[variables('extensionTypeHandlerVersion')]"
                    },
                    "type": "Microsoft.Compute/virtualMachines/extensions"
                  }
                ],
                "variables": {
                  "extensionName": "AzureMonitorLinuxAgent",
                  "extensionPublisher": "Microsoft.Azure.Monitor",
                  "extensionType": "AzureMonitorLinuxAgent",
                  "extensionTypeHandlerVersion": "1.15"
                }
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "equals": "AzureMonitorLinuxAgent",
                "field": "Microsoft.Compute/virtualMachines/extensions/type"
              },
              {
                "equals": "Microsoft.Azure.Monitor",
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher"
              },
              {
                "equals": "Succeeded",
                "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-10T15:09:21.974086+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:22:55.519500+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The access control mode must be set to 'Use resource or workspace permissions'.",
    "displayName": "LAW-MGT-03: The access control mode must be set to 'Use resource or workspace permissions'.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/LAW-MGT-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-10T13:36:30.2844119Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LAW-MGT-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Deny, Audit or Disabled the execution of the Policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.OperationalInsights/workspaces",
            "field": "type"
          },
          {
            "equals": false,
            "field": "Microsoft.OperationalInsights/workspaces/features.enableLogAccessUsingOnlyResourcePermissions"
          },
          {
            "exists": true,
            "field": "Microsoft.OperationalInsights/workspaces/features.enableLogAccessUsingOnlyResourcePermissions"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-10T13:36:30.143201+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-10T13:36:30.143201+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed PaaS services, main focus is blocking Virtual Machines and VMSS",
    "displayName": "SGEC-APPIO-03: IaaS service deployment is forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPIO-03",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-19T13:44:08.0519597Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SGEC-APPIO-03",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "anyof": [
          {
            "equals": "Microsoft.Compute/virtualMachineScaleSets",
            "field": "type"
          },
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-19T13:44:07.929538+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-12-19T13:44:07.929538+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "APPIO is standalone (no resources connected with SGNET) checking virtual network Resources",
    "displayName": "SGEC-APPIO-02c: No resources must be deployed or attached to the SGNET Routable vNET, except private endpoint(s) ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPIO-02c",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-19T13:44:08.0709907Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-29T17:08:19.5074021Z"
    },
    "mode": "All",
    "name": "SGEC-APPIO-02c",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/virtualNetworks",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets[*]",
              "where": {
                "allOf": [
                  {
                    "equals": true,
                    "value": "[contains(split(split(first(field('Microsoft.Network/virtualNetworks/subnets[*].id')),'/')[8],'-'),'core')]"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/virtualNetworks/subnets[*].delegations[*]"
                    },
                    "notequals": 0
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-19T13:44:07.976412+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-29T17:08:19.445498+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "No peering between SGNET non-routable and routable vNETs or between SGNET non-routable and hub's vNET (connection from the resource in non-routable vNET is done through private endpoint)",
    "displayName": "SGEC-APPIO-01: SGNET Non-routable vNET must not be peered",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPIO-01",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-19T13:44:08.1117249Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SGEC-APPIO-01",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "field": "type"
          },
          {
            "field": "name",
            "notContains": "core"
          },
          {
            "anyof": [
              {
                "contains": "core",
                "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id"
              },
              {
                "contains": "hub",
                "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-19T13:44:08.023288+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-12-19T13:44:08.023288+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "APPIO is standalone (no resources connected with SGNET) checking Subnets Resources",
    "displayName": "SGEC-APPIO-02b: No resources must be deployed or attached to the SGNET Routable vNET, except private endpoint(s)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPIO-02b",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-19T13:44:08.2409868Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-01-17T15:59:20.0494791Z"
    },
    "mode": "All",
    "name": "SGEC-APPIO-02b",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/virtualNetworks/subnets",
            "field": "type"
          },
          {
            "equals": true,
            "value": "[contains(split(split(field('id'),'/')[8],'-'),'core')]"
          },
          {
            "equals": false,
            "value": "[empty(field('Microsoft.Network/virtualNetworks/subnets/delegations'))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-19T13:44:08.117041+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-17T15:59:19.995100+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "APPIO is standalone (no resources connected with SGNET) checking NIC Resources",
    "displayName": "SGEC-APPIO-02a: No resources must be deployed or attached to the SGNET Routable vNET, except private endpoint(s)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPIO-02a",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-19T13:44:08.3916928Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SGEC-APPIO-02a",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkInterfaces",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/networkInterfaces/ipConfigurations[*]",
              "where": {
                "allof": [
                  {
                    "equals": true,
                    "value": "[contains(last(split(split(first(field('Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id')),'/')[8],'-')),'core')]"
                  },
                  {
                    "exists": false,
                    "field": "Microsoft.Network/networkInterfaces/ipConfigurations[*].privateLinkConnectionProperties"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-19T13:44:08.163947+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-12-19T13:44:08.163947+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Terraform storage account must have an IP filtering rule whose range is 192.109.140.0/24",
    "displayName": "SGEC-APPIO-05: Only allow Github Runner access with public endpoint (tfstate)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPIO-05",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-19T13:44:08.4813668Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-30T07:59:12.061672Z"
    },
    "mode": "All",
    "name": "SGEC-APPIO-05",
    "parameters": {
      "allowedIps": {
        "allowedValues": null,
        "defaultValue": [
          "192.109.140.0/24",
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": null,
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Deny",
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Deny, Audit or Disabled the execution of the Policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Storage/storageAccounts/publicNetworkAccess"
          },
          {
            "exists": true,
            "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
          },
          {
            "anyof": [
              {
                "allof": [
                  {
                    "contains": "core",
                    "field": "name"
                  },
                  {
                    "field": "id",
                    "notcontains": "/subscriptions/6e14584d-8542-4404-8ef2-472ce1c15d3f"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]",
                      "where": {
                        "count": {
                          "name": "approvedPrefix",
                          "value": "[parameters('allowedIps')]",
                          "where": {
                            "equals": true,
                            "value": "[ipRangeContains(current('approvedPrefix'), current('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value'))]"
                          }
                        },
                        "notequals": 0
                      }
                    },
                    "notequals": "[length(field('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]'))]"
                  }
                ]
              },
              {
                "allof": [
                  {
                    "field": "name",
                    "notcontains": "core"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]",
                      "where": {
                        "count": {
                          "name": "approvedPrefix",
                          "value": "[parameters('allowedIps')]",
                          "where": {
                            "equals": true,
                            "value": "[ipRangeContains(current('approvedPrefix'), current('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value'))]"
                          }
                        },
                        "notequals": 0
                      }
                    },
                    "notequals": "[length(field('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]'))]"
                  }
                ]
              },
              {
                "allof": [
                  {
                    "contains": "core",
                    "field": "name"
                  },
                  {
                    "contains": "/subscriptions/6e14584d-8542-4404-8ef2-472ce1c15d3f",
                    "field": "id"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]",
                      "where": {
                        "count": {
                          "name": "approvedPrefix",
                          "value": "[parameters('allowedIps')]",
                          "where": {
                            "equals": true,
                            "value": "[ipRangeContains(current('approvedPrefix'), current('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value'))]"
                          }
                        },
                        "notequals": 0
                      }
                    },
                    "notequals": "[length(field('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]'))]"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-19T13:44:08.320168+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-30T07:59:12.029389+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service Bus Namespaces should disable public network access",
    "displayName": "SBUS-19 - Service Bus Namespaces should disable public network access",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-19-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-16T16:22:27.0732733Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SBUS-19-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "Microsoft.ServiceBus/namespaces/networkRuleSets",
                    "field": "type"
                  },
                  {
                    "field": "Microsoft.ServiceBus/namespaces/networkRuleSets/publicNetworkAccess",
                    "notEquals": "Disabled"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Microsoft.ServiceBus/namespaces",
                    "field": "type"
                  },
                  {
                    "field": "Microsoft.ServiceBus/namespaces/publicNetworkAccess",
                    "notEquals": "Disabled"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-16T16:22:26.986845+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-16T16:22:26.986845+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SAS tokens with 'Manage' permission must not be used",
    "displayName": "SBUS-03 - SAS tokens with 'Manage' permission must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-16T16:22:27.0998482Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-22T10:05:32.8295165Z"
    },
    "mode": "All",
    "name": "SBUS-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces/authorizationRules",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": true,
            "value": "[contains(field('Microsoft.ServiceBus/namespaces/authorizationRules/rights[*]'), 'Manage')]"
          },
          {
            "equals": false,
            "value": "[endsWith(field('name'), 'RootManageSharedAccessKey')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-16T16:22:27.003037+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-22T10:05:32.803089+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Service Bus namespaces should have local authentication methods disabled",
    "displayName": "SBUS-15 - Azure Service Bus namespaces should have local authentication methods disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-16T16:22:27.5006942Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SBUS-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.ServiceBus/namespaces/disableLocalAuth",
            "notEquals": true
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-16T16:22:27.396483+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-16T16:22:27.396483+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Microsoft-managed key must be selected for encryption of data at rest (by default)",
    "displayName": "SBUS-07 - Microsoft-managed key must be selected for encryption of data at rest (by default)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-16T16:22:27.7157222Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SBUS-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "equals": "Premium",
            "field": "Microsoft.ServiceBus/namespaces/sku.tier"
          },
          {
            "equals": "Microsoft.Keyvault",
            "field": "Microsoft.ServiceBus/namespaces/encryption.keySource"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-16T16:22:27.595346+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-16T16:22:27.595346+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Service Bus namespaces must disable access from all networks",
    "displayName": "SBUS-23 - Azure Service Bus namespaces must disable access from all networks",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-23-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-16T16:22:27.9009142Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SBUS-23-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Microsoft.ServiceBus/namespaces/networkRuleSets",
            "field": "type"
          },
          {
            "equals": "enabled",
            "field": "Microsoft.ServiceBus/namespaces/networkRuleSets/publicNetworkAccess"
          },
          {
            "field": "Microsoft.ServiceBus/namespaces/networkRuleSets/defaultAction",
            "notEquals": "Deny"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-16T16:22:27.798292+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-16T16:22:27.798292+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "FUNC-37 : For public inbound access, Function app Public Endpoint must be configured and IP filtering rules must be set to only allow traffic from WAF Imperva, Github runners or approved Service Endpoints",
    "displayName": "FUNC-37 : For public inbound access, Function app Public Endpoint configured and IP filtering rules set (see description)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-37-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-26T08:13:13.6345586Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T15:35:19.4563866Z"
    },
    "mode": "All",
    "name": "FUNC-37-sgct",
    "parameters": {
      "GitHubRunnersIP": {
        "allowedValues": [
          "192.109.140.0/24"
        ],
        "defaultValue": [
          "192.109.140.0/24"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of GitHub Runners IP addresses ranges",
          "displayName": "GitHub Runners IPs",
          "strongType": null
        },
        "type": "array"
      },
      "SGProxiesIP": {
        "allowedValues": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.206.107.32/32",
          "24.206.107.33/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.139.30/32",
          "24.239.139.31/32"
        ],
        "defaultValue": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.206.107.32/32",
          "24.206.107.33/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.139.30/32",
          "24.239.139.31/32"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of SG Proxies IP (ZScaler and NetScopeIP) addresses ranges",
          "displayName": "SG Proxies IPs",
          "strongType": null
        },
        "type": "array"
      },
      "WAFImpervaIP": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          },
          {
            "in": [
              "APPIO"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/publicNetworkAccess"
              },
              {
                "field": "Microsoft.Web/sites/publicNetworkAccess",
                "notEquals": "Disabled"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress",
                        "notEquals": "Any"
                      },
                      {
                        "Equals": 0,
                        "count": {
                          "name": "WAFIPs",
                          "value": "[parameters('WAFImpervaIP')]",
                          "where": {
                            "Equals": true,
                            "value": "[ipRangeContains(current('WAFIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                          }
                        }
                      },
                      {
                        "Equals": 0,
                        "count": {
                          "name": "GitHubRunnersIPs",
                          "value": "[parameters('GitHubRunnersIP')]",
                          "where": {
                            "Equals": true,
                            "value": "[ipRangeContains(current('GitHubRunnersIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                          }
                        }
                      },
                      {
                        "Equals": 0,
                        "count": {
                          "name": "SGProxiesIPs",
                          "value": "[parameters('SGProxiesIP')]",
                          "where": {
                            "Equals": true,
                            "value": "[ipRangeContains(current('SGProxiesIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                          }
                        }
                      },
                      {
                        "equals": "Allow",
                        "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].action"
                      },
                      {
                        "notEquals": "AzureEventGrid",
                        "value": "[current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress')]"
                      }
                    ]
                  }
                },
                "equals": 0
              },
              {
                "equals": "Deny",
                "field": "Microsoft.Web/sites/config/IpSecurityRestrictionsDefaultAction"
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-26T08:13:13.533895+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T15:35:19.404850+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure AD authentication with Kubernetes RBAC must be used",
    "displayName": "AKS-20-sgct - Azure AD authentication with Kubernetes RBAC must be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AKS-20-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-18T09:32:50.5769305Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:50:45.0949223Z"
    },
    "mode": "All",
    "name": "AKS-20-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "Container4SG in APPI or APPS"
        ],
        "defaultValue": [
          "Container4SG in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "allOf": [
              {
                "field": "[concat('tags[', parameters('tagName'), ']')]",
                "in": "[parameters('tagValue')]"
              },
              {
                "equals": "true",
                "field": "Microsoft.ContainerService/managedClusters/disableLocalAccounts"
              },
              {
                "anyOf": [
                  {
                    "equals": false,
                    "field": "Microsoft.ContainerService/managedClusters/enableRBAC"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-18T09:32:50.485240+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:50:45.078171+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Secret Store CSI driver must be enabled to integrate with Azure Key Vault",
    "displayName": "AKS-08-sgct - Secret Store CSI driver must be enabled to integrate with Azure Key Vault",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AKS-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-18T09:32:50.822334Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:43:03.9031144Z"
    },
    "mode": "All",
    "name": "AKS-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "AzureML in APPI or APPS"
        ],
        "defaultValue": [
          "AzureML in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "contains": "true",
                "value": "[split(string(field('Microsoft.ContainerService/managedClusters/addonProfiles')), ':')[2]]"
              }
            ]
          },
          "type": "Microsoft.ContainerService/managedClusters"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-18T09:32:50.735261+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:43:03.840212+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure AD authentication with Kubernetes RBAC must be used",
    "displayName": "AKS-20-sgct - Azure AD authentication with Kubernetes RBAC must be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AKS-20-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-18T09:32:50.8813593Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:38:26.0412695Z"
    },
    "mode": "All",
    "name": "AKS-20-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "Container4SG in APPI or APPS"
        ],
        "defaultValue": [
          "Container4SG in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "exists": "true",
                "field": "Microsoft.ContainerService/managedClusters/enableRBAC"
              },
              {
                "equals": "true",
                "field": "Microsoft.ContainerService/managedClusters/enableRBAC"
              },
              {
                "equals": "true",
                "field": "Microsoft.ContainerService/managedClusters/disableLocalAccounts"
              }
            ]
          },
          "type": "Microsoft.ContainerService/managedClusters"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-18T09:32:50.797765+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:38:26.006563+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " Assign Built-In User-Assigned Managed Identity to Virtual Machines. Adaptation of d367bd60-64ca-4364-98ea-276775bddd94.",
    "displayName": "AMA-01: Assign Built-In User-Assigned Managed Identity to Virtual Machines",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-09T14:23:16.1687726Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:22:55.4461637Z"
    },
    "mode": "All",
    "name": "AMA-01-sgct",
    "parameters": {
      "AmaLocations": {
        "allowedValues": null,
        "defaultValue": "francecentral",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Location",
          "displayName": "AMA identity Location ",
          "strongType": null
        },
        "type": "String"
      },
      "AmaSubscription": {
        "allowedValues": null,
        "defaultValue": "e45678c8-c0cf-4188-8d90-cebac8052b4d",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Subscription",
          "displayName": "AMA identity Subscription ",
          "strongType": null
        },
        "type": "String"
      },
      "bringYourOwnUserAssignedManagedIdentity": {
        "allowedValues": [
          true,
          false
        ],
        "defaultValue": true,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable this to use your pre-created user-assigned managed identity. The pre-created identity MUST exist within the subscription otherwise the policy deployment will fail. If enabled, ensure that the User-Assigned Identity Name and Identity Resource Group Name parameters match the pre-created identity. If not enabled, the policy will create per subscription, per resource user-assigned managed identities in a new resource group named 'Built-In-Identity-RG'.",
          "displayName": "Bring Your Own User-Assigned Identity",
          "strongType": null
        },
        "type": "Boolean"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The effect determines what happens when the policy rule is evaluated to match.",
          "displayName": "Policy Effect",
          "strongType": null
        },
        "type": "String"
      },
      "identityResourceGroup": {
        "allowedValues": null,
        "defaultValue": "rg-001-853-prod-frc-sentinel",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The resource group in which the pre-created user-assigned managed identity resides.",
          "displayName": "User-Assigned Managed Identity Resource Group Name",
          "strongType": null
        },
        "type": "String"
      },
      "userAssignedIdentityName": {
        "allowedValues": null,
        "defaultValue": "AMAUserAssignedIdentity",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The name of the pre-created user-assigned managed identity.",
          "displayName": "User-Assigned Managed Identity Name",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "greaterOrEquals": "2018-10-01",
            "value": "[requestContext().apiVersion]"
          },
          {
            "equals": "francecentral",
            "value": "[parameters('AmaLocations')]"
          },
          {
            "equals": "e45678c8-c0cf-4188-8d90-cebac8052b4d",
            "value": "[parameters('AmaSubscription')]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "location": "eastus",
            "properties": {
              "mode": "incremental",
              "parameters": {
                "AMAsub": {
                  "value": "[parameters('AmaSubscription')]"
                },
                "bringYourOwnUserAssignedManagedIdentity": {
                  "value": "[parameters('bringYourOwnUserAssignedManagedIdentity')]"
                },
                "identityResourceGroup": {
                  "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), parameters('identityResourceGroup') , 'Built-In-Identity-RG')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceId": {
                  "value": "[field('id')]"
                },
                "uaName": {
                  "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), parameters('userAssignedIdentityName'), 'Built-In-Identity')]"
                },
                "vmName": {
                  "value": "[field('name')]"
                },
                "vmResourceGroup": {
                  "value": "[resourceGroup().name]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                "contentVersion": "1.0.0.1",
                "parameters": {
                  "AMAsub": {
                    "type": "string"
                  },
                  "bringYourOwnUserAssignedManagedIdentity": {
                    "type": "bool"
                  },
                  "identityResourceGroup": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceId": {
                    "type": "string"
                  },
                  "uaName": {
                    "type": "string"
                  },
                  "vmName": {
                    "type": "string"
                  },
                  "vmResourceGroup": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2020-06-01",
                    "condition": "[not(parameters('bringYourOwnUserAssignedManagedIdentity'))]",
                    "location": "eastus",
                    "name": "[parameters('identityResourceGroup')]",
                    "type": "Microsoft.Resources/resourceGroups"
                  },
                  {
                    "apiVersion": "2020-06-01",
                    "condition": "[parameters('bringYourOwnUserAssignedManagedIdentity')]",
                    "name": "[variables('deployUALockName')]",
                    "properties": {
                      "expressionEvaluationOptions": {
                        "scope": "inner"
                      },
                      "mode": "Incremental",
                      "parameters": {
                        "uaName": {
                          "value": "[parameters('uaName')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "uaName": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "apiVersion": "2016-09-01",
                            "name": "[concat('CanNotDeleteLock-', parameters('uaName'))]",
                            "properties": {
                              "level": "CanNotDelete",
                              "notes": "Please do not delete this User-Assigned Identity since extensions enabled by Azure Policy are relying on their existence."
                            },
                            "scope": "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('uaName'))]",
                            "type": "Microsoft.Authorization/locks"
                          }
                        ],
                        "variables": {}
                      }
                    },
                    "resourceGroup": "[parameters('identityResourceGroup')]",
                    "type": "Microsoft.Resources/deployments"
                  },
                  {
                    "apiVersion": "2020-06-01",
                    "condition": "[not(parameters('bringYourOwnUserAssignedManagedIdentity'))]",
                    "dependsOn": [
                      "[resourceId('Microsoft.Resources/resourceGroups',parameters('identityResourceGroup'))]"
                    ],
                    "name": "[variables('deployUAName')]",
                    "properties": {
                      "expressionEvaluationOptions": {
                        "scope": "inner"
                      },
                      "mode": "Incremental",
                      "parameters": {
                        "location": {
                          "value": "[parameters('location')]"
                        },
                        "uaName": {
                          "value": "[variables('uaNameWithLocation')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "location": {
                            "type": "string"
                          },
                          "uaName": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "apiVersion": "2018-11-30",
                            "location": "[parameters('location')]",
                            "name": "[parameters('uaName')]",
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
                          },
                          {
                            "apiVersion": "2016-09-01",
                            "dependsOn": [
                              "[parameters('uaName')]"
                            ],
                            "name": "[concat(parameters('uaName'), '/Microsoft.Authorization/', 'CanNotDeleteLock-', parameters('uaName'))]",
                            "properties": {
                              "level": "CanNotDelete",
                              "notes": "Please do not delete this User-Assigned Identity since extensions enabled by Azure Policy are relying on their existence."
                            },
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities/providers/locks"
                          }
                        ],
                        "variables": {}
                      }
                    },
                    "resourceGroup": "[parameters('identityResourceGroup')]",
                    "type": "Microsoft.Resources/deployments"
                  },
                  {
                    "apiVersion": "2020-06-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.Resources/resourceGroups', parameters('identityResourceGroup'))]",
                      "[variables('deployUAName')]"
                    ],
                    "location": "eastus",
                    "name": "[variables('deployGetResourceProperties')]",
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "outputs": {
                          "resource": {
                            "type": "object",
                            "value": "[reference(parameters('resourceId'), '2019-07-01', 'Full')]"
                          }
                        },
                        "resources": []
                      }
                    },
                    "type": "Microsoft.Resources/deployments"
                  },
                  {
                    "apiVersion": "2020-06-01",
                    "dependsOn": [
                      "[resourceId('Microsoft.Resources/resourceGroups', parameters('identityResourceGroup'))]",
                      "[variables('deployUAName')]",
                      "[variables('deployGetResourceProperties')]"
                    ],
                    "name": "[concat(variables('deployAssignUAName'))]",
                    "properties": {
                      "expressionEvaluationOptions": {
                        "scope": "inner"
                      },
                      "mode": "Incremental",
                      "parameters": {
                        "identityType": {
                          "value": "[if(contains(reference(variables('deployGetResourceProperties')).outputs.resource.value, 'identity'), reference(variables('deployGetResourceProperties')).outputs.resource.value.identity.type, '')]"
                        },
                        "location": {
                          "value": "[parameters('location')]"
                        },
                        "uaId": {
                          "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), variables('precreatedUaId'), variables('autocreatedUaId'))]"
                        },
                        "userAssignedIdentities": {
                          "value": "[if(and(contains(reference(variables('deployGetResourceProperties')).outputs.resource.value, 'identity'), contains(reference(variables('deployGetResourceProperties')).outputs.resource.value.identity, 'userAssignedIdentities')), reference(variables('deployGetResourceProperties')).outputs.resource.value.identity.userAssignedIdentities, createObject())]"
                        },
                        "vmName": {
                          "value": "[parameters('vmName')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "identityType": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "uaId": {
                            "type": "string"
                          },
                          "userAssignedIdentities": {
                            "type": "object"
                          },
                          "vmName": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "apiVersion": "2019-07-01",
                            "condition": "[not(variables('resourceWithSingleUAI'))]",
                            "identity": {
                              "type": "[variables('identityTypeValue')]",
                              "userAssignedIdentities": "[variables('userAssignedIdentitiesValue')]"
                            },
                            "location": "[parameters('location')]",
                            "name": "[parameters('vmName')]",
                            "type": "Microsoft.Compute/virtualMachines"
                          }
                        ],
                        "variables": {
                          "identityTypeValue": "[if(contains(parameters('identityType'), 'SystemAssigned'), 'SystemAssigned,UserAssigned', 'UserAssigned')]",
                          "resourceWithSingleUAI": "[and(equals(parameters('identityType'), 'UserAssigned'), equals(string(length(parameters('userAssignedIdentities'))), '1'))]",
                          "userAssignedIdentitiesValue": "[union(parameters('userAssignedIdentities'), createObject(parameters('uaId'), createObject()))]"
                        }
                      }
                    },
                    "resourceGroup": "[parameters('vmResourceGroup')]",
                    "type": "Microsoft.Resources/deployments"
                  }
                ],
                "variables": {
                  "autocreatedUaId": "[concat('/subscriptions/',parameters('AMAsub'),'/resourceGroups/', trim(parameters('identityResourceGroup')), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', trim(parameters('uaName')), '-', parameters('location'))]",
                  "deployAssignUAName": "[concat('deployAssignUA-',uniqueString(deployment().name))]",
                  "deployGetResourceProperties": "[concat('deployGetResourceProperties-', uniqueString(deployment().name))]",
                  "deployUALockName": "[concat('deployUALock-',uniqueString(deployment().name))]",
                  "deployUAName": "[concat('deployUA-',uniqueString(deployment().name))]",
                  "precreatedUaId": "[concat('/subscriptions/',parameters('AMAsub'),'/resourceGroups/', trim(parameters('identityResourceGroup')), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', trim(parameters('uaName')))]",
                  "uaNameWithLocation": "[concat(parameters('uaName'),'-','francecentral')]"
                }
              }
            }
          },
          "deploymentScope": "subscription",
          "evaluationDelay": "AfterProvisioning",
          "existenceCondition": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "contains": "UserAssigned",
                    "field": "identity.type"
                  },
                  {
                    "containsKey": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), concat('/subscriptions/',trim(parameters('AmaSubscription')),'/resourceGroups/', trim(parameters('identityResourceGroup')), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', trim(parameters('userAssignedIdentityName'))), concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/Built-In-Identity-RG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/Built-In-Identity-',field('location')))]",
                    "field": "identity.userAssignedIdentities"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "UserAssigned",
                    "field": "identity.type"
                  },
                  {
                    "equals": "1",
                    "value": "[string(length(field('identity.userAssignedIdentities')))]"
                  }
                ]
              }
            ]
          },
          "name": "[field('name')]",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9"
          ],
          "type": "Microsoft.Compute/virtualMachines"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-09T14:23:16.001763+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:22:55.410122+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Configure Windows virtual machines to run Azure Monitor Agent with user-assigned managed identity-based authentication. Adaptation of 637125fd-7c39-4b94-bb0a-d331faf333a9.",
    "displayName": "AMA-05: Configure Windows virtual machines to run Azure Monitor Agent with user-assigned managed identity-based authentication",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-09T14:23:16.1825466Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:10:38.4405293Z"
    },
    "mode": "All",
    "name": "AMA-05-sgct",
    "parameters": {
      "AmaSubscription": {
        "allowedValues": null,
        "defaultValue": "e45678c8-c0cf-4188-8d90-cebac8052b4d",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Subscription",
          "displayName": "AMA identity Subscription ",
          "strongType": null
        },
        "type": "String"
      },
      "bringYourOwnUserAssignedManagedIdentity": {
        "allowedValues": [
          false,
          true
        ],
        "defaultValue": true,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "If set to true, Azure Monitor Agent will use the user-assigned managed identity specified via the 'User-Assigned Managed Identity ...' parameters for authentication. Otherwise, Azure Monitor Agent will use the user-assigned managed identity /subscriptions/<subscription-id>/resourceGroups/built-in-identity-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/built-in-identity-<location> for authentication.",
          "displayName": "Bring Your Own User-Assigned Managed Identity",
          "strongType": null
        },
        "type": "Boolean"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy.",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfWindowsImageIdToInclude": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of virtual machine images that have supported Windows OS to add to scope. Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'",
          "displayName": "Additional Virtual Machine Images",
          "strongType": null
        },
        "type": "Array"
      },
      "scopeToSupportedImages": {
        "allowedValues": [
          true,
          false
        ],
        "defaultValue": true,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "If set to true, the policy will apply only to virtual machines with supported operating systems. Otherwise, the policy will apply to all virtual machine resources in the assignment scope. For supported operating systems, see https://aka.ms/AMAOverview.",
          "displayName": "Scope Policy to Azure Monitor Agent-Supported Operating Systems",
          "strongType": null
        },
        "type": "Boolean"
      },
      "userAssignedManagedIdentityName": {
        "allowedValues": null,
        "defaultValue": "AMAUserAssignedIdentity",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The name of the user-assigned managed identity which Azure Monitor Agent will use for authentication when 'Bring Your Own User-Assigned Managed Identity' is set to true.",
          "displayName": "User-Assigned Managed Identity Name",
          "strongType": null
        },
        "type": "String"
      },
      "userAssignedManagedIdentityResourceGroup": {
        "allowedValues": null,
        "defaultValue": "rg-001-853-prod-frc-sentinel",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The resource group of the user-assigned managed identity which Azure Monitor Agent will use for authentication when 'Bring Your Own User-Assigned Managed Identity' is set to true.",
          "displayName": "User-Assigned Managed Identity Resource Group",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "field": "location",
            "in": [
              "australiacentral",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "canadacentral",
              "canadaeast",
              "centralindia",
              "centralus",
              "eastasia",
              "eastus2euap",
              "eastus",
              "eastus2",
              "francecentral",
              "germanywestcentral",
              "japaneast",
              "japanwest",
              "jioindiawest",
              "koreacentral",
              "koreasouth",
              "northcentralus",
              "northeurope",
              "norwayeast",
              "southafricanorth",
              "southcentralus",
              "southeastasia",
              "southindia",
              "switzerlandnorth",
              "uaenorth",
              "uksouth",
              "ukwest",
              "westcentralus",
              "westeurope",
              "westindia",
              "westus",
              "westus2",
              "chinaeast",
              "chinaeast2",
              "chinaeast3",
              "chinanorth",
              "chinanorth2",
              "chinanorth3",
              "usgovarizona",
              "usgovtexas",
              "usgovvirginia",
              "usdodeast",
              "usdodcentral"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": false,
                    "value": "[parameters('scopeToSupportedImages')]"
                  },
                  {
                    "field": "Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType",
                    "like": "Windows*"
                  }
                ]
              },
              {
                "field": "Microsoft.Compute/imageId",
                "in": "[parameters('listOfWindowsImageIdToInclude')]"
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "WindowsServer",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "2008-R2-SP1*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "2012-*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "2016-*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "2019-*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "like": "2022-*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "WindowsServerSemiAnnual",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSKU",
                    "in": [
                      "Datacenter-Core-1709-smalldisk",
                      "Datacenter-Core-1709-with-Containers-smalldisk",
                      "Datacenter-Core-1803-with-Containers-smalldisk"
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsServerHPCPack",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "WindowsServerHPCPack",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftSQLServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2022"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2022-BYOL"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2019"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2019-BYOL"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2016"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2016-BYOL"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2012R2"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2012R2-BYOL"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftRServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "MLServer-WS2016",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftVisualStudio",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "VisualStudio",
                      "Windows"
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftDynamicsAX",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "Dynamics",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "equals": "Pre-Req-AX7-Onebox-U8",
                    "field": "Microsoft.Compute/imageSKU"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "microsoft-ads",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "windows-data-science-vm",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsDesktop",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "Windows-1*",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "userAssignedManagedIdentity": {
                  "value": "[if(parameters('bringYourOwnUserAssignedManagedIdentity'), concat('/subscriptions/', parameters('AmaSubscription'), '/resourceGroups/', parameters('userAssignedManagedIdentityResourceGroup'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('userAssignedManagedIdentityName')), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/built-in-identity-rg/providers/Microsoft.ManagedIdentity/userAssignedIdentities/built-in-identity-', field('location')))]"
                },
                "vmName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "userAssignedManagedIdentity": {
                    "type": "string"
                  },
                  "vmName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2019-07-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('vmName'), '/', variables('extensionName'))]",
                    "properties": {
                      "autoUpgradeMinorVersion": true,
                      "enableAutomaticUpgrade": true,
                      "publisher": "[variables('extensionPublisher')]",
                      "settings": {
                        "authentication": {
                          "managedIdentity": {
                            "identifier-name": "mi_res_id",
                            "identifier-value": "[parameters('userAssignedManagedIdentity')]"
                          }
                        }
                      },
                      "type": "[variables('extensionType')]",
                      "typeHandlerVersion": "[variables('extensionTypeHandlerVersion')]"
                    },
                    "type": "Microsoft.Compute/virtualMachines/extensions"
                  }
                ],
                "variables": {
                  "extensionName": "AzureMonitorWindowsAgent",
                  "extensionPublisher": "Microsoft.Azure.Monitor",
                  "extensionType": "AzureMonitorWindowsAgent",
                  "extensionTypeHandlerVersion": "1.2"
                }
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "equals": "AzureMonitorWindowsAgent",
                "field": "Microsoft.Compute/virtualMachines/extensions/type"
              },
              {
                "equals": "Microsoft.Azure.Monitor",
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher"
              },
              {
                "equals": "Succeeded",
                "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-09T14:23:16.095517+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:10:38.295995+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Configure Windows Machines to be associated with a Data Collection Rule or a Data Collection Endpoint. Adaptation of eab1f514-22e3-42e3-9a1f-e1dc9199355c.",
    "displayName": "AMA-02: Configure Windows Machines to be associated with a Data Collection Rule or a Data Collection Endpoint",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-09T14:23:16.2447301Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:26:01.4021036Z"
    },
    "mode": "All",
    "name": "AMA-02-sgct",
    "parameters": {
      "dcrResourceId": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/e45678c8-c0cf-4188-8d90-cebac8052b4d/resourceGroups/rg-001-853-prod-frc-sentinel/providers/Microsoft.Insights/dataCollectionRules/01-853-SIEMSentinel-DCR-PROD",
        "metadata": {
          "assignPermissions": null,
          "description": "Resource Id of the Data Collection Rule or the Data Collection Endpoint to be applied on the Linux machines in scope.",
          "displayName": "Data Collection Rule Resource Id or Data Collection Endpoint Resource Id",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy.",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfWindowsImageIdToInclude": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of machine images that have supported Windows OS to add to scope. Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'",
          "displayName": "Additional Windows Machine Images",
          "strongType": null
        },
        "type": "Array"
      },
      "resourceType": {
        "allowedValues": [
          "Microsoft.Insights/dataCollectionRules",
          "Microsoft.Insights/dataCollectionEndpoints"
        ],
        "defaultValue": "Microsoft.Insights/dataCollectionRules",
        "metadata": {
          "assignPermissions": null,
          "description": "Either a Data Collection Rule (DCR) or a Data Collection Endpoint (DCE)",
          "displayName": "Resource Type",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "in": [
              "australiacentral",
              "australiacentral2",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "brazilsoutheast",
              "canadacentral",
              "canadaeast",
              "centralindia",
              "centralus",
              "eastasia",
              "eastus",
              "eastus2",
              "eastus2euap",
              "francecentral",
              "francesouth",
              "germanywestcentral",
              "japaneast",
              "japanwest",
              "jioindiawest",
              "koreacentral",
              "koreasouth",
              "northcentralus",
              "northeurope",
              "norwayeast",
              "norwaywest",
              "southafricanorth",
              "southcentralus",
              "southeastasia",
              "southindia",
              "swedencentral",
              "switzerlandnorth",
              "switzerlandwest",
              "uaenorth",
              "uksouth",
              "ukwest",
              "westcentralus",
              "westeurope",
              "westindia",
              "westus",
              "westus2",
              "westus3"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "Microsoft.HybridCompute/machines",
                    "field": "type"
                  },
                  {
                    "equals": "Windows",
                    "field": "Microsoft.HybridCompute/machines/osName"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "equals": "Microsoft.Compute/virtualMachines",
                        "field": "type"
                      },
                      {
                        "equals": "Microsoft.Compute/virtualMachineScaleSets",
                        "field": "type"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageId",
                        "in": "[parameters('listOfWindowsImageIdToInclude')]"
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "WindowsServer",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2008-R2-SP1*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2012-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2016-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2019-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2022-*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "WindowsServerSemiAnnual",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSKU",
                            "in": [
                              "Datacenter-Core-1709-smalldisk",
                              "Datacenter-Core-1709-with-Containers-smalldisk",
                              "Datacenter-Core-1803-with-Containers-smalldisk",
                              "Datacenter-Core-1809-with-Containers-smalldisk"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsServerHPCPack",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "WindowsServerHPCPack",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftSQLServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2016"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2016-BYOL"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2012R2"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2012R2-BYOL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftRServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "MLServer-WS2016",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftVisualStudio",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "VisualStudio",
                              "Windows"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftDynamicsAX",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "Dynamics",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "equals": "Pre-Req-AX7-Onebox-U8",
                            "field": "Microsoft.Compute/imageSKU"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "microsoft-ads",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "windows-data-science-vm",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsDesktop",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "Windows-1*",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "dcrResourceId": {
                  "value": "[parameters('dcrResourceId')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                },
                "resourceType": {
                  "value": "[parameters('resourceType')]"
                },
                "type": {
                  "value": "[field('type')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "dcrResourceId": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  },
                  "resourceType": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  }
                ],
                "variables": {
                  "dceAssociationName": "configurationAccessEndpoint",
                  "dceResourceType": "Microsoft.Insights/dataCollectionEndpoints",
                  "dcrAssociationName": "[concat('assoc-', uniqueString(concat(parameters('resourceName'), parameters('dcrResourceId'))))]",
                  "dcrResourceType": "Microsoft.Insights/dataCollectionRules"
                }
              }
            }
          },
          "evaluationDelay": "AfterProvisioning",
          "existenceCondition": {
            "anyOf": [
              {
                "equals": "[parameters('dcrResourceId')]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionRuleId"
              },
              {
                "equals": "[parameters('dcrResourceId')]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionEndpointId"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "type": "Microsoft.Insights/dataCollectionRuleAssociations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-09T14:23:16.126768+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:26:01.298259+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Configure Linux Machines to be associated with a Data Collection Rule or a Data Collection Endpoint. Adaptation of 2ea82cdd-f2e8-4500-af75-67a2e084ca74.",
    "displayName": "AMA-03: Configure Linux Machines to be associated with a Data Collection Rule or a Data Collection Endpoint",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-09T14:23:16.246855Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:33:42.6898134Z"
    },
    "mode": "All",
    "name": "AMA-03-sgct",
    "parameters": {
      "dcrResourceId": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/e45678c8-c0cf-4188-8d90-cebac8052b4d/resourceGroups/rg-001-853-prod-frc-sentinel/providers/Microsoft.Insights/dataCollectionRules/01-853-SIEMSentinel-DCR-PROD",
        "metadata": {
          "assignPermissions": null,
          "description": "Resource Id of the Data Collection Rule or the Data Collection Endpoint to be applied on the Linux machines in scope.",
          "displayName": "Data Collection Rule Resource Id or Data Collection Endpoint Resource Id",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy.",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfLinuxImageIdToInclude": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of machine images that have supported Linux OS to add to scope. Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'",
          "displayName": "Additional Linux Machine Images",
          "strongType": null
        },
        "type": "Array"
      },
      "resourceType": {
        "allowedValues": [
          "Microsoft.Insights/dataCollectionRules",
          "Microsoft.Insights/dataCollectionEndpoints"
        ],
        "defaultValue": "Microsoft.Insights/dataCollectionRules",
        "metadata": {
          "assignPermissions": null,
          "description": "Either a Data Collection Rule (DCR) or a Data Collection Endpoint (DCE)",
          "displayName": "Resource Type",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "in": [
              "australiacentral",
              "australiacentral2",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "brazilsoutheast",
              "canadacentral",
              "canadaeast",
              "centralindia",
              "centralus",
              "eastasia",
              "eastus",
              "eastus2",
              "eastus2euap",
              "francecentral",
              "francesouth",
              "germanywestcentral",
              "japaneast",
              "japanwest",
              "jioindiawest",
              "koreacentral",
              "koreasouth",
              "northcentralus",
              "northeurope",
              "norwayeast",
              "norwaywest",
              "southafricanorth",
              "southcentralus",
              "southeastasia",
              "southindia",
              "swedencentral",
              "switzerlandnorth",
              "switzerlandwest",
              "uaenorth",
              "uksouth",
              "ukwest",
              "westcentralus",
              "westeurope",
              "westindia",
              "westus",
              "westus2",
              "westus3"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "Microsoft.HybridCompute/machines",
                    "field": "type"
                  },
                  {
                    "equals": "linux",
                    "field": "Microsoft.HybridCompute/machines/osName"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "equals": "Microsoft.Compute/virtualMachines",
                        "field": "type"
                      },
                      {
                        "equals": "Microsoft.Compute/virtualMachineScaleSets",
                        "field": "type"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageId",
                        "in": "[parameters('listOfLinuxImageIdToInclude')]"
                      },
                      {
                        "allOf": [
                          {
                            "equals": "RedHat",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "RHEL",
                              "RHEL-ARM64",
                              "RHEL-BYOS",
                              "RHEL-HA",
                              "RHEL-SAP",
                              "RHEL-SAP-APPS",
                              "RHEL-SAP-HA"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "8*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "rhel-lvm7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "rhel-lvm8*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "SUSE",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "anyOf": [
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Compute/imageOffer",
                                    "in": [
                                      "SLES",
                                      "SLES-HPC",
                                      "SLES-HPC-Priority",
                                      "SLES-SAP",
                                      "SLES-SAP-BYOS",
                                      "SLES-Priority",
                                      "SLES-BYOS",
                                      "SLES-SAPCAL",
                                      "SLES-Standard"
                                    ]
                                  },
                                  {
                                    "anyOf": [
                                      {
                                        "field": "Microsoft.Compute/imageSku",
                                        "like": "12*"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageSku",
                                        "like": "15*"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "sles-12*"
                                      },
                                      {
                                        "field": "Microsoft.Compute/imageOffer",
                                        "like": "sles-15*"
                                      }
                                    ]
                                  },
                                  {
                                    "field": "Microsoft.Compute/imageSku",
                                    "in": [
                                      "gen1",
                                      "gen2"
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "Canonical",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "anyOf": [
                              {
                                "equals": "UbuntuServer",
                                "field": "Microsoft.Compute/imageOffer"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "0001-com-ubuntu-server-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "0001-com-ubuntu-pro-*"
                              }
                            ]
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "in": [
                              "14.04.0-lts",
                              "14.04.1-lts",
                              "14.04.2-lts",
                              "14.04.3-lts",
                              "14.04.4-lts",
                              "14.04.5-lts",
                              "16_04_0-lts-gen2",
                              "16_04-lts-gen2",
                              "16.04-lts",
                              "16.04.0-lts",
                              "18_04-lts-arm64",
                              "18_04-lts-gen2",
                              "18.04-lts",
                              "20_04-lts-arm64",
                              "20_04-lts-gen2",
                              "20_04-lts",
                              "22_04-lts-gen2",
                              "22_04-lts",
                              "pro-16_04-lts-gen2",
                              "pro-16_04-lts",
                              "pro-18_04-lts-gen2",
                              "pro-18_04-lts",
                              "pro-20_04-lts-gen2",
                              "pro-20_04-lts",
                              "pro-22_04-lts-gen2",
                              "pro-22_04-lts"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "Oracle",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "Oracle-Linux",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "8*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "OpenLogic",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "CentOS",
                              "Centos-LVM",
                              "CentOS-SRIOV"
                            ]
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "6*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "7*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "8*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "cloudera",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "cloudera-centos-os",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "like": "7*"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "almalinux",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "almalinux",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "like": "8*"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "ctrliqinc1648673227698",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "like": "rocky-8*"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "like": "rocky-8*"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "credativ",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "Debian"
                            ]
                          },
                          {
                            "equals": "9",
                            "field": "Microsoft.Compute/imageSku"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "Debian",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "debian-10",
                              "debian-11"
                            ]
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "in": [
                              "10",
                              "10-gen2",
                              "11",
                              "11-gen2"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "microsoftcblmariner",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "cbl-mariner",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSku",
                            "in": [
                              "1-gen2",
                              "cbl-mariner-1",
                              "cbl-mariner-2",
                              "cbl-mariner-2-arm64",
                              "cbl-mariner-2-gen2"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "dcrResourceId": {
                  "value": "[parameters('dcrResourceId')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                },
                "resourceType": {
                  "value": "[parameters('resourceType')]"
                },
                "type": {
                  "value": "[field('type')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "dcrResourceId": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  },
                  "resourceType": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[parameters('dcrResourceId')]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  }
                ],
                "variables": {
                  "dceAssociationName": "configurationAccessEndpoint",
                  "dceResourceType": "Microsoft.Insights/dataCollectionEndpoints",
                  "dcrAssociationName": "[concat('assoc-', uniqueString(concat(parameters('resourceName'), parameters('dcrResourceId'))))]",
                  "dcrResourceType": "Microsoft.Insights/dataCollectionRules"
                }
              }
            }
          },
          "evaluationDelay": "AfterProvisioning",
          "existenceCondition": {
            "anyOf": [
              {
                "equals": "[parameters('dcrResourceId')]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionRuleId"
              },
              {
                "equals": "[parameters('dcrResourceId')]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionEndpointId"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "type": "Microsoft.Insights/dataCollectionRuleAssociations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-09T14:23:16.111142+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:33:42.644434+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Prevent the deletion of AMA identity",
    "displayName": "AMA-08: Prevent the deletion AMA identity",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-09T15:25:56.2381246Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:04:50.5044016Z"
    },
    "mode": "All",
    "name": "AMA-08-sgct",
    "parameters": {
      "IdentityName": {
        "allowedValues": null,
        "defaultValue": "AMAUserAssignedIdentity",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Sentinel Diagnostic Setting Name",
          "displayName": "DiagnosticSettingName",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "DenyAction"
        ],
        "defaultValue": "DenyAction",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Deny Diagnostic removal",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "field": "type"
          },
          {
            "field": "name",
            "match": "[parameters('IdentityName')]"
          }
        ]
      },
      "then": {
        "details": {
          "actionNames": [
            "delete"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-09T15:25:56.115030+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:04:50.470814+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public Access must be disabled for Azure Managed Grafana instances workspace",
    "displayName": "GFNA-06: Public Access must be disabled for Azure Managed Grafana instances workspace",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:03:18.0138623Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-13T15:56:36.4862021Z"
    },
    "mode": "All",
    "name": "GFNA-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "Private",
                "value": "[concat('tags[', 'sg_Resource_ControlTower_Profile', ']')]"
              },
              {
                "notEquals": "APPI",
                "value": "[toUpper(subscription().tags['spoke_type'])]"
              }
            ]
          },
          {
            "field": "Microsoft.Dashboard/grafana/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:03:17.917956+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-13T15:56:36.470900+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The users with Grafana Admin and Grafana Editor built-in roles must uses their A95 accounts for LZV1 Essentials offer to access Azure Managed Grafana instance",
    "displayName": "GFNA-13: Diagnostics settings must be enabled and the audit category logs must be exported",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:03:18.1210757Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "GFNA-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "allOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                  },
                  {
                    "equals": "audit",
                    "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                  }
                ]
              }
            },
            "equals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:03:18.046949+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-06T14:03:18.046949+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Access to Grafana Managed Instance must be performed only from a private nework (SGNET) through Private Endpoints",
    "displayName": "GFNA-08: Access to Grafana Managed Instance must be performed only from a private nework (SGNET) through Private Endpoints",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:03:18.2291969Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-13T15:56:36.5463153Z"
    },
    "mode": "All",
    "name": "GFNA-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "Private",
                "field": "[concat('tags[', 'sg_Resource_ControlTower_Profile', ']')]"
              },
              {
                "notEquals": "APPI",
                "value": "[toUpper(subscription().tags['spoke_type'])]"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.Dashboard/grafana/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.Dashboard/grafana/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:03:18.080784+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-13T15:56:36.529828+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Managed disks should have 'networkAccessPolicy' on 'DenyAll'",
    "displayName": "VM-25: Managed disks should have 'networkAccessPolicy' on 'DenyAll'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-25-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-08T10:47:10.3439252Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-08T14:28:59.4213588Z"
    },
    "mode": "All",
    "name": "VM-25-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/disks",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/disks/networkAccessPolicy",
            "notEquals": "AllowPrivate"
          }
        ]
      },
      "then": {
        "details": {
          "conflictEffect": "Audit",
          "operations": [
            {
              "field": "Microsoft.Compute/disks/networkAccessPolicy",
              "operation": "addOrReplace",
              "value": "AllowPrivate"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-08T10:47:10.270699+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-08T14:28:59.388483+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Managed disks should disable public network access",
    "displayName": "VM-26: Managed disks should disable public network access",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-26-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-08T10:47:10.4155346Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VM-26-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/disks",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/disks/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "details": {
          "conflictEffect": "Audit",
          "operations": [
            {
              "field": "Microsoft.Compute/disks/publicNetworkAccess",
              "operation": "addOrReplace",
              "value": "Disabled"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-08T10:47:10.329693+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-08T10:47:10.329693+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Key Vault public access must be disabled (APPE/APPI only)",
    "displayName": "VAULT-24 - Azure Key Vault public access must be disabled (APPE/APPI only)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-24-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-12T16:00:32.3783253Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-30T13:32:11.1757864Z"
    },
    "mode": "All",
    "name": "VAULT-24-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTypeValue": {
        "allowedValues": null,
        "defaultValue": "APPIO",
        "metadata": null,
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "notEquals": "[parameters('spokeTypeValue')]",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.Keyvault/vaults/createMode",
            "notEquals": "recover"
          },
          {
            "field": "Microsoft.KeyVault/vaults/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-12T16:00:32.260606+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-30T13:32:11.160232+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Contributor role should not be assigned to Users or groups on prod subscription.",
    "displayName": "ID-08-GLOBAL-sgct: Contributor role should not be assigned to Users or groups on prod subscription.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ID-08-GLOBAL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-19T15:26:29.7471813Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-29T08:44:14.1845427Z"
    },
    "mode": "All",
    "name": "ID-08-GLOBAL-sgct",
    "parameters": {
      "builtInRolesId": {
        "allowedValues": [
          "b24988ac-6180-42a0-ab88-20f7382dd24c"
        ],
        "defaultValue": [
          "b24988ac-6180-42a0-ab88-20f7382dd24c"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to deny assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      },
      "denyType": {
        "allowedValues": [
          "user",
          "group"
        ],
        "defaultValue": [
          "user",
          "group"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to deny assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Authorization/roleAssignments",
            "field": "type"
          },
          {
            "in": "[parameters('builtInRolesId')]",
            "value": "[last(split(field('Microsoft.Authorization/roleAssignments/roleDefinitionId'), '/'))]"
          },
          {
            "field": "Microsoft.Authorization/roleAssignments/principalType",
            "in": "[parameters('denyType')]"
          },
          {
            "field": "Microsoft.Authorization/roleAssignments/principalId",
            "notIn": [
              "0fe68cc9-c5ff-4bbf-a94c-6687cdc50779",
              "3cd25637-51dd-4879-9f14-2b75cdbd9812",
              "5f090f23-7eb5-4358-ad45-07b6c71a2d72",
              "4f68b568-188a-4a54-bef0-c4d2ab2410eb",
              "a3918650-0f75-45a4-bd18-7a0351070139",
              "82b62451-3468-462c-bf1a-bfcf57103fcf"
            ]
          },
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-19T15:26:29.640085+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-29T08:44:14.169433+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny high privilege built-in role assignment (Owner, User Access Administrator, RBAC Administrator)",
    "displayName": "ID-04-GLOBAL - User accounts and groups cannot be assigned High Privileged role",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ID-04-GLOBAL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-19T15:26:29.7830492Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ID-04-GLOBAL-sgct",
    "parameters": {
      "builtInRolesId": {
        "allowedValues": [
          "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
          "f58310d9-a9f6-439a-9e8d-f62e7b41a168"
        ],
        "defaultValue": [
          "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
          "f58310d9-a9f6-439a-9e8d-f62e7b41a168"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to deny assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      },
      "denyType": {
        "allowedValues": [
          "user",
          "group"
        ],
        "defaultValue": [
          "user",
          "group"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to deny assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Authorization/roleAssignments",
            "field": "type"
          },
          {
            "in": "[parameters('builtInRolesId')]",
            "value": "[last(split(field('Microsoft.Authorization/roleAssignments/roleDefinitionId'), '/'))]"
          },
          {
            "field": "Microsoft.Authorization/roleAssignments/principalType",
            "in": "[parameters('denyType')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-19T15:26:29.688623+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-19T15:26:29.688623+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Custom Role Definitions cannot be assigned",
    "displayName": "ID-06-GLOBAL-sgct - Custom Role Definitions cannot be assigned",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ID-06-GLOBAL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-19T15:26:29.8123562Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-28T12:19:11.9998483Z"
    },
    "mode": "All",
    "name": "ID-06-GLOBAL-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "prefix": {
        "allowedValues": [
          "8311e382-0749-4cb8-b61a-304f252e45ec",
          "312a565d-c81f-4fd8-895a-4e21e48d571c",
          "7f951dda-4ed3-4680-a7ca-43fe172d538d",
          "6cef56e8-d556-48e5-a04f-b8e64114680f",
          "c2f4ef07-c644-48eb-af81-4b1b4947fb11",
          "cdda3590-29a3-44f6-95f2-9f980659eb04",
          "c8d4ff99-41c3-41a8-9f60-21dfdad59608",
          "e022efe7-f5ba-4159-bbe4-b44f577e9b61",
          "71522526-b88f-4d52-b57f-d31fc3546d0d",
          "ae349356-3a1b-4a5e-921d-050484c6347e",
          "08954f03-6346-4c2e-81c0-ec3a5cfae23b",
          "fd1bd22b-8476-40bc-a0bc-69b95687b9f3",
          "4fe576fe-1146-4730-92eb-48519fa6bf9f",
          "5fb5aef8-1081-4b8e-bb16-9d5d0385bab5",
          "d3881f73-407a-4167-8283-e981cbba0404",
          "4f8fab4f-1852-4a58-a46a-8eaf358af14a",
          "c025889f-8102-4ebf-b32c-fc0c6f0c6bd9",
          "0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
          "4abbcc35-e782-43d8-92c5-2d3f1bd2253f",
          "423170ca-a8f6-4b0f-8487-9e4eb8f49bfa",
          "6f12a6df-dd06-4f3e-bcb1-ce8be600526a",
          "5e467623-bb1f-42f4-a55d-6e525e11384b",
          "fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64",
          "a795c7a0-d4a2-40c1-ae25-d81f01202912",
          "31a002a1-acaf-453e-8a5b-297c9ca1ea24",
          "5e3c6656-6cfa-4708-81fe-0de47ac73342",
          "426e0c7f-0c7e-4658-b36f-ff54d6c29b45",
          "ec156ff8-a8d1-4d15-830c-5b80698ca432",
          "8f96442b-4075-438f-813d-ad51ab4019af",
          "b34d265f-36f7-4a0d-a4d4-e158ca92e90f",
          "86e8f5dc-a6e9-4c67-9d15-de283e8eac25",
          "985d6b00-f706-48f5-a6fe-d0ca12fb668d",
          "9106cda0-8a86-4e81-b686-29a22c54effe",
          "d73bb868-a0df-4d4d-bd69-98a00b01fccb",
          "a97b65f3-24c7-4388-baec-2e87135dc908",
          "b59867f0-fa02-499b-be73-45a86b5b3e1c",
          "25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68",
          "db7b14f2-5adf-42da-9f96-f2ee17bab5cb",
          "b24988ac-6180-42a0-ab88-20f7382dd24c",
          "fbdf93bf-df7d-467e-a4d2-9458aa1360c8",
          "434105ed-43f6-45c7-a02f-909b2ba83430",
          "72fafb9e-0641-4937-9268-a91bfd8191a3",
          "add466c9-e687-43fc-8d98-dfcf8d720be5",
          "028f4ed7-e2a9-465e-a8f4-9c0ffdfdc027",
          "673868aa-7521-48a0-acc6-0f60742d39f5",
          "150f5e0c-0603-4f03-8c7f-cf70034c4e90",
          "47b7735b-770e-4598-a7da-8b91488b4c88",
          "76283e04-6283-4c54-8f91-bcf1374a3c64",
          "5bd9cd88-fe45-4216-938b-f97437e15450",
          "befefa01-2a29-4197-83a8-272ff33ce314",
          "428e0ff0-5e57-4d9c-a221-2c70d0e0a443",
          "2414bbcf-6497-4faf-8c65-045460748405",
          "b60367af-1334-4454-b71e-769d9a4f83d9",
          "8d8d5a11-05d3-4bda-a417-a08778121c7c",
          "03a6d094-3444-4b3d-88af-7477090a9e5e",
          "f25e0fa2-a7c8-4377-a976-54943a77a395",
          "ee361c5d-f7b5-4119-b4b6-892157c8f64c",
          "b97fb8bc-a8b2-4522-a38b-dd33c7e65ead",
          "73c42c96-874c-492b-b04d-ab87d138a893",
          "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
          "515c2055-d9d4-4321-b1b9-bd0c9a0f79fe",
          "87a39d53-fc1b-424a-814c-f7e04687dc9e",
          "c7393b34-138c-406f-901b-d8cf2b17e6ae",
          "b9331d33-8a36-4f8c-b097-4f54124fdb44",
          "f1a07417-d97a-45cb-824c-7a7467783830",
          "e40ec5ca-96e0-45a2-b4ff-59039f2c2b59",
          "5d58bcaf-24a5-4b20-bdb6-eed9f69fbe4c",
          "ac63b705-f282-497d-ac71-919bf39d939d",
          "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
          "4d97b98b-1d4f-4787-a291-c67834d212e7",
          "5d28c62d-5b37-4476-8438-e587778df237",
          "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "acdd72a7-3385-48ef-bd42-f606fba81ae7",
          "e0f68234-74aa-48ed-b826-c38b57376e17",
          "c12c1c16-33a1-487b-954d-41c89c60f349",
          "36243c78-bf99-498c-9df9-86d9f8d28608",
          "188a0f2f-5c9e-469b-ae67-2aa5ce574b94",
          "7ca78c08-252a-4471-8644-bb5ff32d4ba0",
          "e3d13bf0-dd5a-482e-ba6b-9b8433878d10",
          "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
          "8bbe83f1-e2a6-4df7-8cb4-4e04d4e5c827",
          "6670b86e-a3f7-4917-ac9b-5d6ab1be4567",
          "494ae006-db33-4328-bf46-533a6560a3ca",
          "5d51204f-eb77-4b1c-b86a-2ec626c49413",
          "dbaa88c4-0c30-4179-9fb3-46319faa6149",
          "70bbe301-9835-447d-afdd-19eb3167307c",
          "4939a1f6-9ae0-4e48-a1e0-f2cbe897382d",
          "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
          "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
          "17d1049b-9a84-46fb-8f53-869881c3d3ab",
          "6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437",
          "81a9662b-bebf-436f-a333-f67b29880f12",
          "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
          "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
          "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
          "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
          "8a0f0c08-91a1-4084-bc3d-661d67233fed",
          "c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
          "19e7f393-937e-4f77-808e-94535e297925",
          "cfd33db0-3dd1-45e3-aa9d-cdbdf3b6f24e",
          "a4b10055-b0c7-44c2-b00f-c7b5b3550cf7",
          "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
          "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
          "2cc479cb-7b4d-49a8-b449-8c00fd0f0a4b",
          "de139f84-1756-47ae-9be6-808fbbe84772",
          "090c5cfd-751d-490a-894a-3ce6f1109419",
          "f526a384-b230-433a-b45c-95f59c4a2dec",
          "bbf86eb8-f7b4-4cce-96e4-18cddf81d86e",
          "61ed4efc-fab3-44fd-b111-e24485cc132a",
          "230815da-be43-4aae-9cb4-875f7bd000aa",
          "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
          "5d1e5ee4-7c68-4a71-ac8b-0739630a3dfb",
          "a638d3c7-ab3a-418d-83e6-5f17a39d4fde",
          "2b629674-e913-4c01-ae53-ef4638d8f975",
          "4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0",
          "69a216fc-b8fb-44d8-bc22-1f3c2cd27a39",
          "aba4ae5f-2193-4029-9191-0cb91df5e314",
          "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
          "b12aa53e-6015-4669-85d0-8515ebb3ae7f",
          "db58b8e5-c6ad-4a2a-8342-4190687cbf4a",
          "1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
          "a7264617-510b-434b-a828-9731dc254ea7",
          "41077137-e803-4205-871c-5a86e6a753b4",
          "437d2ced-4a38-4302-8479-ed2bcb43d090",
          "ab8e14d6-4a74-4a29-9ba8-549422addade",
          "3e150937-b8fe-4cfb-8069-0eaf05ecd056",
          "8d289c81-5878-46d4-8554-54e1e3d8b5cb",
          "66bb4e9e-b016-4a94-8249-4c0511c2be84",
          "04165923-9d83-45d5-8227-78b77b0a687e",
          "8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761",
          "b64e21ea-ac4e-4cdf-9dc9-5b892992bee7",
          "91c1777a-f3dc-4fae-b103-61d183457e46",
          "5ae67dd6-50cb-40e7-96ff-dc2bfa4b606b",
          "516239f1-63e1-4d78-a4de-a74fb236a071",
          "34e09817-6cbe-4d01-b1a2-e0eac5743d41",
          "7f646f1b-fa08-80eb-a22b-edd6ce5c915c",
          "466ccd10-b268-4a11-b098-b4849f024126",
          "f4cc2bf9-21be-47a1-bdf1-5c5804381025",
          "7f646f1b-fa08-80eb-a33b-edd6ce5c915c",
          "3df8b902-2a6f-47c7-8cc5-360e9b272a7e",
          "d39065c4-c120-43c9-ab0a-63eed9795f0a",
          "641177b8-a67a-45b9-a033-47bc880bb21e",
          "612c2aa1-cb24-443b-ac28-3ab7272de6f5",
          "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
          "c7aa55d3-1abb-444a-a5ca-5e51e485d6ec",
          "a41e2c5b-bd99-4a07-88f4-9bf657a760b8",
          "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
          "d57506d4-4c8d-48b1-8587-93c323f6a5a3",
          "bcd981a7-7f74-457b-83e1-cceb9e632ffe",
          "350f8d15-c687-4448-8ae1-157740a3936d",
          "5a1fc7df-4bf1-4951-a576-89034ee01acd",
          "3db33094-8700-4567-8da5-1501d4e7e843",
          "4c8d0bbc-75d3-4935-991f-5f3c56d81508",
          "3f88fce4-5892-4214-ae73-ba5294559913",
          "49632ef5-d9ac-41f4-b8e7-bbe587fa74a1",
          "4dd61c23-6743-42fe-a388-d8bdd41cb745",
          "8f5e0ce6-4f7b-4dcf-bddf-e6f48634a204",
          "c1ff6cc2-c111-46fe-8896-e0ef812ad9f3",
          "5c4089e1-6d96-4d2f-b296-c1bc7137275f",
          "88424f51-ebe7-446f-bc41-7fa16989e96c",
          "93586559-c37d-4a6b-ba08-b9f0940c2d73",
          "0a5ae4ab-0d65-4eeb-be61-29fc9b54394b",
          "00482a5a-887f-4fb3-b363-3b7fe8e74483",
          "12338af0-0e69-4776-bea7-57ae8d297424",
          "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
          "4633458b-17de-408a-b874-0445c86b69e6",
          "a4417e6f-fecd-4de8-b567-7b0420556985",
          "21090545-7ca7-4776-b22c-e363652d74d2",
          "e147488a-f6f5-4113-8e2d-b22465e65bf6",
          "63f0a09d-1495-4db4-a681-037d84835eb4",
          "5b999177-9696-4545-85c7-50de3797e5a1",
          "8393591c-06b9-48a2-a542-1bd6b377f6a2",
          "dffb1e0c-446f-4dde-a09f-99eb5cc68b96",
          "b1ff04bb-8a4e-4dc4-8eb5-8693973ce19b",
          "3498e952-d568-435e-9b2c-8d77e338d7f7",
          "7f6c6a51-bcf8-42ba-9220-52d62157d7db",
          "a7ffa36f-339b-4b5c-8bdf-e2c188b2c0eb",
          "82200a5b-e217-47a5-b665-6d8765ee745b",
          "d18777c0-1514-4662-8490-608db7d334b6",
          "fd53cd77-2268-407a-8f46-7e7863d0f521",
          "daa9e50b-21df-454c-94a6-a8050adab352",
          "e9dba6fb-3d52-4cf0-bce3-f06ce71b9e0f",
          "02ca0879-e8e4-47a5-a61e-5c618b76e64a",
          "0378884a-3af5-44ab-8323-f5b22f9f3c98",
          "d1ee9a80-8b14-47f0-bdc2-f4a351625a7b",
          "cb43c632-a144-4ec5-977c-e80c4affc34a",
          "3b20f47b-3825-43cb-8114-4bd2201156a8",
          "2c56ea50-c6b3-40a6-83c0-9d98858bc7d2",
          "5dffeca3-4936-4216-b2bc-10343a5abb25",
          "7ec7ccdc-f61e-41fe-9aaf-980df0a44eba",
          "8508508a-4469-4e45-963b-2518ee0bb728",
          "f8da80de-1ff9-4747-ad80-a19b7f6079e3",
          "18500a29-7fe2-46b2-a342-b16a415e101d",
          "0b555d9b-b4a7-4f43-b330-627f0e5be8f0",
          "ddde6b66-c0df-4114-a159-3618637b3035",
          "7e4f1700-ea5a-4f59-8f37-079cfe29dce3",
          "f7b75c60-3036-4b75-91c3-6b41c27c1689",
          "635dd51f-9968-44d3-b7fb-6d9a6bd613ae",
          "e5e2a7ff-d759-4cd2-bb51-3152d37e2eb1",
          "6188b7c9-7d01-4f99-a59f-c88b630326c0",
          "9ef4ef9c-a049-46b0-82ab-dd8ac094c889",
          "c8d896ba-346d-4f50-bc1d-7d1c84130446",
          "05b7651b-dc44-475e-b74d-df3db49fae0f",
          "ca6382a4-1721-4bcf-a114-ff0c70227b6b",
          "49a72310-ab8d-41df-bbb0-79b649203868",
          "082f0a83-3be5-4ba1-904c-961cca79b387",
          "21efdde3-836f-432b-bf3d-3e8e734d4b2b",
          "ea4bfff8-7fb4-485a-aadd-d4129a0ffaa6",
          "2ad6aaab-ead9-4eaa-8ac5-da422f562408",
          "ceadfde2-b300-400a-ab7b-6143895aa822",
          "e307426c-f9b6-4e81-87de-d99efb3c32bc",
          "aebf23d0-b568-4e86-b8f9-fe83a2c6ab55",
          "86240b0e-9422-4c43-887b-b61143f32ba8",
          "0fa44ee9-7a7d-466b-9bb2-2bf446b1204d",
          "3e5e47e6-65f7-47ef-90b5-e5dd4d455f24",
          "b50d9833-a0cb-478e-945f-707fcc997c13",
          "7efff54f-a5b4-42b5-a1c5-5411624893ce",
          "5548b2cf-c94c-4228-90ba-30851930a12f",
          "a37b566d-3efa-4beb-a2f2-698963fa42ce",
          "352470b3-6a9c-4686-b503-35deb827e500",
          "7a6f0e70-c033-4fb1-828c-08514e5f4102",
          "5432c526-bc82-444a-b7ba-57c5b0b5b34f",
          "a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
          "0e5f05e5-9ab9-446b-b98d-1e2157c94125",
          "1e241071-0855-49ea-94dc-649edcd759de",
          "28241645-39f8-410b-ad48-87863e2951d5",
          "4a167cdf-cb95-4554-9203-2347fe489bd9",
          "ca0835dd-bacc-42dd-8ed2-ed5e7230d15b",
          "d17ce0a2-0697-43bc-aac5-9113337ab61c",
          "b5537268-8956-4941-a8f0-646150406f0c",
          "0e75ca1e-0464-4b4d-8b93-68208a576181",
          "9894cab4-e18a-44aa-828b-cb588cd6f2d7",
          "054126f8-9a2b-4f1c-a9ad-eca461f08466",
          "532bc159-b25e-42c0-969e-a1d439f60d77",
          "e4395492-1534-4db2-bedf-88c14621589c",
          "c4bba371-dacd-4a26-b320-7250bca963ae",
          "99dba123-b5fe-44d5-874c-ced7199a5804",
          "1ec5b3c1-b17e-4e25-8312-2acb3c3c5abf",
          "a2138dac-4907-4679-a376-736901ed8ad8",
          "b447c946-2db7-41ec-983d-d8bf3b1c77e3",
          "494bdba2-168f-4f31-a0a1-191d2f7c028c",
          "4ea46cd5-c1b2-4a8e-910b-273211f9ce47",
          "4fc6c259-987e-4a07-842e-c321cc9d413f",
          "15e0f5a1-3450-4248-8e25-e2afe88a9e85",
          "1407120a-92aa-4202-b7e9-c0e197c71c8f",
          "8ebe5a00-799e-43f5-93ac-243d3dce84a7",
          "76199698-9eea-4c19-bc75-cec21354c6b6",
          "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
          "e89c7a3c-2f64-4fa1-a847-3e4c9ba4283a",
          "58a3b984-7adf-4c20-983a-32417c86fbc8",
          "d5a91429-5739-47e2-a06b-3470a27159e7",
          "60fc6e62-5479-42d4-8bf4-67625fcc2840",
          "f6c7c914-8db3-469d-8ca1-694a8f32e121",
          "22926164-76b3-42b3-bc55-97df8dab3e41",
          "e8113dce-c529-4d33-91fa-e9b972617508",
          "26baccc8-eea7-41f1-98f4-1762cc7f685d",
          "2787bf04-f1f5-4bfe-8383-c8a24483ee38",
          "26e0b698-aa6d-4085-9386-aadae190014d",
          "60921a7e-fef1-4a43-9b16-a26c52ad4769",
          "a79a5197-3a5c-4973-a920-486035ffd60f",
          "f353d9bd-d4a6-484e-a77a-8050b599b867",
          "85cb6faf-e071-4c9b-8136-154b5a04f717",
          "10745317-c249-44a1-a5ce-3a4353c0bbd8",
          "dfce44e4-17b7-4bd1-a6d1-04996ec95633",
          "2837e146-70d7-4cfd-ad55-7efa6464f958",
          "cff1b556-2399-4e7e-856d-a8f754be7b65",
          "f5880b48-c26d-48be-b172-7927bfa1c8f1",
          "d04c6db6-4947-4782-9e91-30a88feb7be7",
          "a06f5c24-21a7-4e1a-aa2b-f19eb6684f5b",
          "6ae96244-5829-4925-a7d3-5975537d91dd",
          "6be48352-4f82-47c9-ad5e-0acacefdb005",
          "dba33070-676a-4fb0-87fa-064dc56ff7fb",
          "b748a06d-6150-4f8a-aaa9-ce3940cd96cb",
          "ce551c02-7c42-47e0-9deb-e3b6fc3a9a83",
          "ddc140ed-e463-4246-9145-7c664192013f",
          "f72c8140-2111-481c-87ff-72b910f6e3f8",
          "7628b7b8-a8b2-4cdc-b46f-e9b35248918e",
          "f2310ca1-dc64-4889-bb49-c8e0fa3d47a8",
          "f07febfe-79bc-46b1-8b37-790e26e6e498",
          "18e81cdc-4e98-4e29-a639-e7d10c5a6226",
          "6322a993-d5c9-4bed-b113-e49bbea25b27",
          "a9a19cc5-31f4-447c-901f-56c0bb18fcaf",
          "749a398d-560b-491b-bb21-08924219302e",
          "45bb0b16-2f0c-4e78-afaa-a07599b003f6",
          "0c8b84dc-067c-4039-9615-fa1a4b77c726",
          "3ae3fb29-0000-4ccd-bf80-542e7b26e081",
          "b2de6794-95db-4659-8781-7e080d3f2b9d",
          "f69b8690-cc87-41d6-b77a-a4bc3c0a966f",
          "2a5c394f-5eb7-4d4f-9c8e-e8eae39faebc",
          "ce40b423-cede-4313-a93f-9b28290b72e1",
          "a36e6959-b6be-4b12-8e9f-ef4b474d304d",
          "5daaa2af-1fe8-407c-9122-bba179798270",
          "fb1c8493-542b-48eb-b624-b4c8fea62acd",
          "12cf5a90-567b-43ae-8102-96cf46c7d9b4",
          "bfb1c7d2-fb1a-466b-b2ba-aee63b92deaf",
          "420fcaa2-552c-430f-98ca-3264be4806c7",
          "fb879df8-f326-4884-b1cf-06f3ad86be52",
          "1c0163c0-47e6-4577-8991-ea5c82e286e4",
          "cd570a14-e51a-42ad-bac8-bafd67325302",
          "00c29273-979b-4161-815c-10b084fb9324",
          "e8ddcd69-c73f-4f9f-9844-4100522f16ad",
          "b279062a-9be3-42a0-92ae-8b3cf002ec4d",
          "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
          "3913510d-42f4-4e42-8a64-420c390055eb",
          "8a3c2885-9b38-4fd2-9d99-91af537c1347",
          "200bba9e-f0c8-430f-892b-6f0794863803",
          "ff100721-1b9d-43d8-af52-42b69c1272db",
          "b8b15564-4fa6-4a59-ab12-03e1d9594795",
          "27f8b550-c507-4db9-86f2-f4b8e816d59d",
          "d63b75f7-47ea-4f27-92ac-e0d173aaf093",
          "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
          "49e2f5d2-7741-4835-8efa-19e1fe35e47f",
          "e4237640-0e3d-4a46-8fda-70bc94856432",
          "67d33e57-3129-45e6-bb0b-7cc522f762fa",
          "4e9b8407-af2e-495b-ae54-bb60a55b1b5a",
          "f4c81013-99ee-4d62-a7ee-b3f1f648599a",
          "871e35f6-b5c1-49cc-a043-bde969a0f2cd",
          "4447db05-44ed-4da3-ae60-6cbece780e32",
          "f2dc8367-1007-4938-bd23-fe263f013447",
          "a6333a3e-0164-44c3-b281-7a577aff287f",
          "18ed5180-3e48-46fd-8541-4ea054d57064",
          "088ab73d-1256-47ae-bea9-9de8e7131f31",
          "361898ef-9ed1-48c2-849c-a832951106bb",
          "eeaeda52-9324-47f6-8069-5d5bade478b2",
          "0f2ebee7-ffd4-4fc0-b3b7-664099fdad5d",
          "00493d72-78f6-4148-b6c5-d3ce8e4799dd",
          "959f8984-c045-4866-89c7-12bf9737be2e",
          "6b77f0a0-0d89-41cc-acd1-579c22c17a67",
          "1ef6a3be-d0ac-425d-8c01-acb62866290b",
          "cd08ab90-6b14-449c-ad9a-8f8e549482c6",
          "45d50f46-0b78-4001-a660-4198cbe8cd05",
          "331c37c6-af14-46d9-b9f4-e1909e1b95a0",
          "602da2ba-a5c2-41da-b01d-5360126ab525",
          "c0781e91-8102-4553-8951-97c6d4243cda",
          "e582369a-e17b-42a5-b10c-874c387c530b",
          "6aac74c4-6311-40d2-bbdd-7d01e7c6e3a9",
          "a92dfd61-77f9-4aec-a531-19858b406c87",
          "4465e953-8ced-4406-a58e-0f6e3f3b530b",
          "c031e6a8-4391-4de0-8d69-4706a7ed3729",
          "d24ecba3-c1f4-40fa-a7bb-4588a071e8fd",
          "80dcbedb-47ef-405d-95bd-188a1b4ac406",
          "af6a70f8-3c9f-4105-acf1-d719e9fca4ca",
          "489581de-a3bd-480d-9518-53dea7416b33",
          "a959dbd1-f747-45e3-8ba6-dd80f235f97c",
          "40c5ff49-9181-41f8-ae61-143b0e78555e",
          "76cc9ee4-d5d3-4a45-a930-26add3d73475",
          "a8281131-f312-4f34-8d98-ae12be9f0d23",
          "4339b7cf-9826-4e41-b4ed-c7f4505dac08",
          "a2c4a527-7dc0-4ee3-897b-403ade70fafb",
          "b0d8363b-8ddd-447d-831f-62ca05bff136",
          "30b27cfc-9c84-438e-b0ce-70e35255df80",
          "18ab4d3d-a1bf-4477-8ad9-8359bc988f69",
          "434fb43a-c01c-447e-9f67-c3ad923cfaba",
          "5af6afb3-c06c-4fa4-8848-71a8aee05683",
          "63bb64ad-9799-4770-b5c3-24ed299a07bf",
          "ba79058c-0414-4a34-9e42-c3399d80cd5a",
          "c6decf44-fd0a-444c-a844-d653c394e7ab",
          "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
          "392ae280-861d-42bd-9ea5-08ee6d83b80e",
          "1c9b6475-caf0-4164-b5a1-2142a7116f4b",
          "51d6186e-6489-4900-b93f-92e23144cca5",
          "18e40d4e-8d2e-438d-97e1-9528336e149c",
          "80558df3-64f9-4c0f-b32d-e5094b036b0b",
          "a99b0159-1064-4c22-a57b-c9b3caa1c054",
          "1823dd4f-9b8c-4ab6-ab4e-7397a3684615",
          "e503ece1-11d0-4e8e-8e2c-7a6c3bf38815",
          "05352d14-a920-4328-a0de-4cbe7430e26b",
          "aabbc5dd-1af0-458b-a942-81af88f9c138",
          "7b0c7e81-271f-4c71-90bf-e30bdfdbc2f7",
          "fbc52c3f-28ad-4303-a892-8a056630b8f1",
          "4ba50f17-9666-485c-a643-ff00808643f0",
          "a001fd3d-188f-4b5d-821b-7da978bf7442",
          "5e0bd9bd-7b93-4f28-af87-19fc36ad61bd",
          "36e80216-a7e8-4f42-a7e1-f12c98cbaf8a",
          "68ff5d27-c7f5-4fa9-a21c-785d0df7bd9e",
          "ad2dd5fb-cd4b-4fd4-a9b6-4fed3630980b",
          "1afdec4b-e479-420e-99e7-f82237c7c5e6",
          "f5819b54-e033-4d82-ac66-4fec3cbf3f4c",
          "189207d4-bb67-4208-a635-b06afe8b2c57",
          "c4bc862a-3b64-4a35-a021-a380c159b042",
          "ef29765d-0d37-4119-a4f8-f9f9902c9588",
          "0105a6b0-4bb9-43d2-982a-12806f9faddb",
          "6d949e1d-41e2-46e3-8920-c6e4f31a8310",
          "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
          "f0310ce6-e953-4cf8-b892-fb1c87eaf7f6",
          "1d335eef-eee1-47fe-a9e0-53214eba8872",
          "ae8036db-e102-405b-a1b9-bae082ea436d",
          "a9b99099-ead7-47db-8fcf-072597a61dfa",
          "0ab34830-df19-4f8c-b84e-aa85b8afa6e8",
          "3f2eb865-5811-4578-b90a-6fc6fa0df8e5",
          "0f99d363-226e-4dca-9920-b807cf8e1a5f",
          "0db238c4-885e-4c4f-a933-aa2cef684fca",
          "d18ad5f3-1baf-4119-b49b-d944edb1f9d0",
          "a8835c7d-b5cb-47fa-b6f0-65ea10ce07a2",
          "bda0d508-adf1-4af0-9c28-88919fc3ae06",
          "bfc3b73d-c6ff-45eb-9a5f-40298295bf20",
          "7392c568-9289-4bde-aaaa-b7131215889d",
          "d6470a16-71bd-43ab-86b3-6f3a73f4e787",
          "ef1c2c96-4a77-49e8-b9a4-6179fe1d2fd2",
          "73c2c328-d004-4c5e-938c-35c6f5679a1f",
          "56328988-075d-4c6a-8766-d93edd6725b6",
          "d59a3e9c-6d52-4a5a-aeed-6bf3cf0e31da",
          "9565a273-41b9-4368-97d2-aeb0c976a9b3",
          "0c34c906-8d99-4cb7-8bb7-33f5b0a1a799",
          "b8eda974-7b85-4f76-af95-65846b26df6d",
          "69566ab7-960f-475b-8e7c-b3118f30c6bd",
          "7eabc9a4-85f7-4f71-b8ab-75daaccc1033",
          "1f135831-5bbe-4924-9016-264044c00788",
          "3d55a8f6-4133-418d-8051-facdb1735758",
          "0f37683f-2463-46b6-9ce7-9b788b988ba2",
          "ffc6bbe0-e443-4c3b-bf54-26581bb2f78e",
          "8b9dfcab-4b77-4632-a6df-94bd07820648",
          "e9b8712a-cbcf-4ea7-b0f7-e71b803401e6",
          "c8ae6279-5a0b-4cb2-b3f0-d4d62845742c",
          "6d994134-994b-4a59-9974-f479f0b227fb",
          "79b01272-bf9f-4f4c-9517-5506269cf524",
          "7ac06ca7-21ca-47e3-a67b-cbd6e6223baf",
          "5e28a61e-8040-49db-b175-bb5b88af6239",
          "9c1607d1-791d-4c68-885d-c7b7aaff7c8a",
          "1e7ca9b1-60d1-4db8-a914-f2ca1ff27c40",
          "df2711a6-406d-41cf-b366-b0250bff9ad1",
          "fa6cecf6-5db3-4c43-8470-c540bcb4eafa",
          "bba48692-92b0-4667-a9ad-c31c7b334ac2",
          "c088a766-074b-43ba-90d4-1fb21feae531",
          "a02f7c31-354d-4106-865a-deedf37fa038",
          "4accf36b-2c05-432f-91c8-5c532dff4c73",
          "523776ba-4eb2-4600-a3c8-f2dc93da4bdb",
          "ad710c24-b039-4e85-a019-deb4a06e8570",
          "b70c96e9-66fe-4c09-b6e7-c98e69c98555",
          "7beabc75-32c9-da8f-cd88-a2e7e3106650"
        ],
        "defaultValue": [
          "8311e382-0749-4cb8-b61a-304f252e45ec",
          "312a565d-c81f-4fd8-895a-4e21e48d571c",
          "7f951dda-4ed3-4680-a7ca-43fe172d538d",
          "6cef56e8-d556-48e5-a04f-b8e64114680f",
          "c2f4ef07-c644-48eb-af81-4b1b4947fb11",
          "cdda3590-29a3-44f6-95f2-9f980659eb04",
          "c8d4ff99-41c3-41a8-9f60-21dfdad59608",
          "e022efe7-f5ba-4159-bbe4-b44f577e9b61",
          "71522526-b88f-4d52-b57f-d31fc3546d0d",
          "ae349356-3a1b-4a5e-921d-050484c6347e",
          "08954f03-6346-4c2e-81c0-ec3a5cfae23b",
          "fd1bd22b-8476-40bc-a0bc-69b95687b9f3",
          "4fe576fe-1146-4730-92eb-48519fa6bf9f",
          "5fb5aef8-1081-4b8e-bb16-9d5d0385bab5",
          "d3881f73-407a-4167-8283-e981cbba0404",
          "4f8fab4f-1852-4a58-a46a-8eaf358af14a",
          "c025889f-8102-4ebf-b32c-fc0c6f0c6bd9",
          "0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
          "4abbcc35-e782-43d8-92c5-2d3f1bd2253f",
          "423170ca-a8f6-4b0f-8487-9e4eb8f49bfa",
          "6f12a6df-dd06-4f3e-bcb1-ce8be600526a",
          "5e467623-bb1f-42f4-a55d-6e525e11384b",
          "fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64",
          "a795c7a0-d4a2-40c1-ae25-d81f01202912",
          "31a002a1-acaf-453e-8a5b-297c9ca1ea24",
          "5e3c6656-6cfa-4708-81fe-0de47ac73342",
          "426e0c7f-0c7e-4658-b36f-ff54d6c29b45",
          "ec156ff8-a8d1-4d15-830c-5b80698ca432",
          "8f96442b-4075-438f-813d-ad51ab4019af",
          "b34d265f-36f7-4a0d-a4d4-e158ca92e90f",
          "86e8f5dc-a6e9-4c67-9d15-de283e8eac25",
          "985d6b00-f706-48f5-a6fe-d0ca12fb668d",
          "9106cda0-8a86-4e81-b686-29a22c54effe",
          "d73bb868-a0df-4d4d-bd69-98a00b01fccb",
          "a97b65f3-24c7-4388-baec-2e87135dc908",
          "b59867f0-fa02-499b-be73-45a86b5b3e1c",
          "25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68",
          "db7b14f2-5adf-42da-9f96-f2ee17bab5cb",
          "b24988ac-6180-42a0-ab88-20f7382dd24c",
          "fbdf93bf-df7d-467e-a4d2-9458aa1360c8",
          "434105ed-43f6-45c7-a02f-909b2ba83430",
          "72fafb9e-0641-4937-9268-a91bfd8191a3",
          "add466c9-e687-43fc-8d98-dfcf8d720be5",
          "028f4ed7-e2a9-465e-a8f4-9c0ffdfdc027",
          "673868aa-7521-48a0-acc6-0f60742d39f5",
          "150f5e0c-0603-4f03-8c7f-cf70034c4e90",
          "47b7735b-770e-4598-a7da-8b91488b4c88",
          "76283e04-6283-4c54-8f91-bcf1374a3c64",
          "5bd9cd88-fe45-4216-938b-f97437e15450",
          "befefa01-2a29-4197-83a8-272ff33ce314",
          "428e0ff0-5e57-4d9c-a221-2c70d0e0a443",
          "2414bbcf-6497-4faf-8c65-045460748405",
          "b60367af-1334-4454-b71e-769d9a4f83d9",
          "8d8d5a11-05d3-4bda-a417-a08778121c7c",
          "03a6d094-3444-4b3d-88af-7477090a9e5e",
          "f25e0fa2-a7c8-4377-a976-54943a77a395",
          "ee361c5d-f7b5-4119-b4b6-892157c8f64c",
          "b97fb8bc-a8b2-4522-a38b-dd33c7e65ead",
          "73c42c96-874c-492b-b04d-ab87d138a893",
          "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
          "515c2055-d9d4-4321-b1b9-bd0c9a0f79fe",
          "87a39d53-fc1b-424a-814c-f7e04687dc9e",
          "c7393b34-138c-406f-901b-d8cf2b17e6ae",
          "b9331d33-8a36-4f8c-b097-4f54124fdb44",
          "f1a07417-d97a-45cb-824c-7a7467783830",
          "e40ec5ca-96e0-45a2-b4ff-59039f2c2b59",
          "5d58bcaf-24a5-4b20-bdb6-eed9f69fbe4c",
          "ac63b705-f282-497d-ac71-919bf39d939d",
          "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
          "4d97b98b-1d4f-4787-a291-c67834d212e7",
          "5d28c62d-5b37-4476-8438-e587778df237",
          "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
          "acdd72a7-3385-48ef-bd42-f606fba81ae7",
          "e0f68234-74aa-48ed-b826-c38b57376e17",
          "c12c1c16-33a1-487b-954d-41c89c60f349",
          "36243c78-bf99-498c-9df9-86d9f8d28608",
          "188a0f2f-5c9e-469b-ae67-2aa5ce574b94",
          "7ca78c08-252a-4471-8644-bb5ff32d4ba0",
          "e3d13bf0-dd5a-482e-ba6b-9b8433878d10",
          "39bc4728-0917-49c7-9d2c-d95423bc2eb4",
          "8bbe83f1-e2a6-4df7-8cb4-4e04d4e5c827",
          "6670b86e-a3f7-4917-ac9b-5d6ab1be4567",
          "494ae006-db33-4328-bf46-533a6560a3ca",
          "5d51204f-eb77-4b1c-b86a-2ec626c49413",
          "dbaa88c4-0c30-4179-9fb3-46319faa6149",
          "70bbe301-9835-447d-afdd-19eb3167307c",
          "4939a1f6-9ae0-4e48-a1e0-f2cbe897382d",
          "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
          "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
          "17d1049b-9a84-46fb-8f53-869881c3d3ab",
          "6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437",
          "81a9662b-bebf-436f-a333-f67b29880f12",
          "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
          "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
          "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
          "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
          "8a0f0c08-91a1-4084-bc3d-661d67233fed",
          "c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
          "19e7f393-937e-4f77-808e-94535e297925",
          "cfd33db0-3dd1-45e3-aa9d-cdbdf3b6f24e",
          "a4b10055-b0c7-44c2-b00f-c7b5b3550cf7",
          "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
          "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
          "2cc479cb-7b4d-49a8-b449-8c00fd0f0a4b",
          "de139f84-1756-47ae-9be6-808fbbe84772",
          "090c5cfd-751d-490a-894a-3ce6f1109419",
          "f526a384-b230-433a-b45c-95f59c4a2dec",
          "bbf86eb8-f7b4-4cce-96e4-18cddf81d86e",
          "61ed4efc-fab3-44fd-b111-e24485cc132a",
          "230815da-be43-4aae-9cb4-875f7bd000aa",
          "48b40c6e-82e0-4eb3-90d5-19e40f49b624",
          "5d1e5ee4-7c68-4a71-ac8b-0739630a3dfb",
          "a638d3c7-ab3a-418d-83e6-5f17a39d4fde",
          "2b629674-e913-4c01-ae53-ef4638d8f975",
          "4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0",
          "69a216fc-b8fb-44d8-bc22-1f3c2cd27a39",
          "aba4ae5f-2193-4029-9191-0cb91df5e314",
          "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
          "b12aa53e-6015-4669-85d0-8515ebb3ae7f",
          "db58b8e5-c6ad-4a2a-8342-4190687cbf4a",
          "1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
          "a7264617-510b-434b-a828-9731dc254ea7",
          "41077137-e803-4205-871c-5a86e6a753b4",
          "437d2ced-4a38-4302-8479-ed2bcb43d090",
          "ab8e14d6-4a74-4a29-9ba8-549422addade",
          "3e150937-b8fe-4cfb-8069-0eaf05ecd056",
          "8d289c81-5878-46d4-8554-54e1e3d8b5cb",
          "66bb4e9e-b016-4a94-8249-4c0511c2be84",
          "04165923-9d83-45d5-8227-78b77b0a687e",
          "8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761",
          "b64e21ea-ac4e-4cdf-9dc9-5b892992bee7",
          "91c1777a-f3dc-4fae-b103-61d183457e46",
          "5ae67dd6-50cb-40e7-96ff-dc2bfa4b606b",
          "516239f1-63e1-4d78-a4de-a74fb236a071",
          "34e09817-6cbe-4d01-b1a2-e0eac5743d41",
          "7f646f1b-fa08-80eb-a22b-edd6ce5c915c",
          "466ccd10-b268-4a11-b098-b4849f024126",
          "f4cc2bf9-21be-47a1-bdf1-5c5804381025",
          "7f646f1b-fa08-80eb-a33b-edd6ce5c915c",
          "3df8b902-2a6f-47c7-8cc5-360e9b272a7e",
          "d39065c4-c120-43c9-ab0a-63eed9795f0a",
          "641177b8-a67a-45b9-a033-47bc880bb21e",
          "612c2aa1-cb24-443b-ac28-3ab7272de6f5",
          "4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
          "c7aa55d3-1abb-444a-a5ca-5e51e485d6ec",
          "a41e2c5b-bd99-4a07-88f4-9bf657a760b8",
          "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
          "d57506d4-4c8d-48b1-8587-93c323f6a5a3",
          "bcd981a7-7f74-457b-83e1-cceb9e632ffe",
          "350f8d15-c687-4448-8ae1-157740a3936d",
          "5a1fc7df-4bf1-4951-a576-89034ee01acd",
          "3db33094-8700-4567-8da5-1501d4e7e843",
          "4c8d0bbc-75d3-4935-991f-5f3c56d81508",
          "3f88fce4-5892-4214-ae73-ba5294559913",
          "49632ef5-d9ac-41f4-b8e7-bbe587fa74a1",
          "4dd61c23-6743-42fe-a388-d8bdd41cb745",
          "8f5e0ce6-4f7b-4dcf-bddf-e6f48634a204",
          "c1ff6cc2-c111-46fe-8896-e0ef812ad9f3",
          "5c4089e1-6d96-4d2f-b296-c1bc7137275f",
          "88424f51-ebe7-446f-bc41-7fa16989e96c",
          "93586559-c37d-4a6b-ba08-b9f0940c2d73",
          "0a5ae4ab-0d65-4eeb-be61-29fc9b54394b",
          "00482a5a-887f-4fb3-b363-3b7fe8e74483",
          "12338af0-0e69-4776-bea7-57ae8d297424",
          "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
          "4633458b-17de-408a-b874-0445c86b69e6",
          "a4417e6f-fecd-4de8-b567-7b0420556985",
          "21090545-7ca7-4776-b22c-e363652d74d2",
          "e147488a-f6f5-4113-8e2d-b22465e65bf6",
          "63f0a09d-1495-4db4-a681-037d84835eb4",
          "5b999177-9696-4545-85c7-50de3797e5a1",
          "8393591c-06b9-48a2-a542-1bd6b377f6a2",
          "dffb1e0c-446f-4dde-a09f-99eb5cc68b96",
          "b1ff04bb-8a4e-4dc4-8eb5-8693973ce19b",
          "3498e952-d568-435e-9b2c-8d77e338d7f7",
          "7f6c6a51-bcf8-42ba-9220-52d62157d7db",
          "a7ffa36f-339b-4b5c-8bdf-e2c188b2c0eb",
          "82200a5b-e217-47a5-b665-6d8765ee745b",
          "d18777c0-1514-4662-8490-608db7d334b6",
          "fd53cd77-2268-407a-8f46-7e7863d0f521",
          "daa9e50b-21df-454c-94a6-a8050adab352",
          "e9dba6fb-3d52-4cf0-bce3-f06ce71b9e0f",
          "02ca0879-e8e4-47a5-a61e-5c618b76e64a",
          "0378884a-3af5-44ab-8323-f5b22f9f3c98",
          "d1ee9a80-8b14-47f0-bdc2-f4a351625a7b",
          "cb43c632-a144-4ec5-977c-e80c4affc34a",
          "3b20f47b-3825-43cb-8114-4bd2201156a8",
          "2c56ea50-c6b3-40a6-83c0-9d98858bc7d2",
          "5dffeca3-4936-4216-b2bc-10343a5abb25",
          "7ec7ccdc-f61e-41fe-9aaf-980df0a44eba",
          "8508508a-4469-4e45-963b-2518ee0bb728",
          "f8da80de-1ff9-4747-ad80-a19b7f6079e3",
          "18500a29-7fe2-46b2-a342-b16a415e101d",
          "0b555d9b-b4a7-4f43-b330-627f0e5be8f0",
          "ddde6b66-c0df-4114-a159-3618637b3035",
          "7e4f1700-ea5a-4f59-8f37-079cfe29dce3",
          "f7b75c60-3036-4b75-91c3-6b41c27c1689",
          "635dd51f-9968-44d3-b7fb-6d9a6bd613ae",
          "e5e2a7ff-d759-4cd2-bb51-3152d37e2eb1",
          "6188b7c9-7d01-4f99-a59f-c88b630326c0",
          "9ef4ef9c-a049-46b0-82ab-dd8ac094c889",
          "c8d896ba-346d-4f50-bc1d-7d1c84130446",
          "05b7651b-dc44-475e-b74d-df3db49fae0f",
          "ca6382a4-1721-4bcf-a114-ff0c70227b6b",
          "49a72310-ab8d-41df-bbb0-79b649203868",
          "082f0a83-3be5-4ba1-904c-961cca79b387",
          "21efdde3-836f-432b-bf3d-3e8e734d4b2b",
          "ea4bfff8-7fb4-485a-aadd-d4129a0ffaa6",
          "2ad6aaab-ead9-4eaa-8ac5-da422f562408",
          "ceadfde2-b300-400a-ab7b-6143895aa822",
          "e307426c-f9b6-4e81-87de-d99efb3c32bc",
          "aebf23d0-b568-4e86-b8f9-fe83a2c6ab55",
          "86240b0e-9422-4c43-887b-b61143f32ba8",
          "0fa44ee9-7a7d-466b-9bb2-2bf446b1204d",
          "3e5e47e6-65f7-47ef-90b5-e5dd4d455f24",
          "b50d9833-a0cb-478e-945f-707fcc997c13",
          "7efff54f-a5b4-42b5-a1c5-5411624893ce",
          "5548b2cf-c94c-4228-90ba-30851930a12f",
          "a37b566d-3efa-4beb-a2f2-698963fa42ce",
          "352470b3-6a9c-4686-b503-35deb827e500",
          "7a6f0e70-c033-4fb1-828c-08514e5f4102",
          "5432c526-bc82-444a-b7ba-57c5b0b5b34f",
          "a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
          "0e5f05e5-9ab9-446b-b98d-1e2157c94125",
          "1e241071-0855-49ea-94dc-649edcd759de",
          "28241645-39f8-410b-ad48-87863e2951d5",
          "4a167cdf-cb95-4554-9203-2347fe489bd9",
          "ca0835dd-bacc-42dd-8ed2-ed5e7230d15b",
          "d17ce0a2-0697-43bc-aac5-9113337ab61c",
          "b5537268-8956-4941-a8f0-646150406f0c",
          "0e75ca1e-0464-4b4d-8b93-68208a576181",
          "9894cab4-e18a-44aa-828b-cb588cd6f2d7",
          "054126f8-9a2b-4f1c-a9ad-eca461f08466",
          "532bc159-b25e-42c0-969e-a1d439f60d77",
          "e4395492-1534-4db2-bedf-88c14621589c",
          "c4bba371-dacd-4a26-b320-7250bca963ae",
          "99dba123-b5fe-44d5-874c-ced7199a5804",
          "1ec5b3c1-b17e-4e25-8312-2acb3c3c5abf",
          "a2138dac-4907-4679-a376-736901ed8ad8",
          "b447c946-2db7-41ec-983d-d8bf3b1c77e3",
          "494bdba2-168f-4f31-a0a1-191d2f7c028c",
          "4ea46cd5-c1b2-4a8e-910b-273211f9ce47",
          "4fc6c259-987e-4a07-842e-c321cc9d413f",
          "15e0f5a1-3450-4248-8e25-e2afe88a9e85",
          "1407120a-92aa-4202-b7e9-c0e197c71c8f",
          "8ebe5a00-799e-43f5-93ac-243d3dce84a7",
          "76199698-9eea-4c19-bc75-cec21354c6b6",
          "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
          "e89c7a3c-2f64-4fa1-a847-3e4c9ba4283a",
          "58a3b984-7adf-4c20-983a-32417c86fbc8",
          "d5a91429-5739-47e2-a06b-3470a27159e7",
          "60fc6e62-5479-42d4-8bf4-67625fcc2840",
          "f6c7c914-8db3-469d-8ca1-694a8f32e121",
          "22926164-76b3-42b3-bc55-97df8dab3e41",
          "e8113dce-c529-4d33-91fa-e9b972617508",
          "26baccc8-eea7-41f1-98f4-1762cc7f685d",
          "2787bf04-f1f5-4bfe-8383-c8a24483ee38",
          "26e0b698-aa6d-4085-9386-aadae190014d",
          "60921a7e-fef1-4a43-9b16-a26c52ad4769",
          "a79a5197-3a5c-4973-a920-486035ffd60f",
          "f353d9bd-d4a6-484e-a77a-8050b599b867",
          "85cb6faf-e071-4c9b-8136-154b5a04f717",
          "10745317-c249-44a1-a5ce-3a4353c0bbd8",
          "dfce44e4-17b7-4bd1-a6d1-04996ec95633",
          "2837e146-70d7-4cfd-ad55-7efa6464f958",
          "cff1b556-2399-4e7e-856d-a8f754be7b65",
          "f5880b48-c26d-48be-b172-7927bfa1c8f1",
          "d04c6db6-4947-4782-9e91-30a88feb7be7",
          "a06f5c24-21a7-4e1a-aa2b-f19eb6684f5b",
          "6ae96244-5829-4925-a7d3-5975537d91dd",
          "6be48352-4f82-47c9-ad5e-0acacefdb005",
          "dba33070-676a-4fb0-87fa-064dc56ff7fb",
          "b748a06d-6150-4f8a-aaa9-ce3940cd96cb",
          "ce551c02-7c42-47e0-9deb-e3b6fc3a9a83",
          "ddc140ed-e463-4246-9145-7c664192013f",
          "f72c8140-2111-481c-87ff-72b910f6e3f8",
          "7628b7b8-a8b2-4cdc-b46f-e9b35248918e",
          "f2310ca1-dc64-4889-bb49-c8e0fa3d47a8",
          "f07febfe-79bc-46b1-8b37-790e26e6e498",
          "18e81cdc-4e98-4e29-a639-e7d10c5a6226",
          "6322a993-d5c9-4bed-b113-e49bbea25b27",
          "a9a19cc5-31f4-447c-901f-56c0bb18fcaf",
          "749a398d-560b-491b-bb21-08924219302e",
          "45bb0b16-2f0c-4e78-afaa-a07599b003f6",
          "0c8b84dc-067c-4039-9615-fa1a4b77c726",
          "3ae3fb29-0000-4ccd-bf80-542e7b26e081",
          "b2de6794-95db-4659-8781-7e080d3f2b9d",
          "f69b8690-cc87-41d6-b77a-a4bc3c0a966f",
          "2a5c394f-5eb7-4d4f-9c8e-e8eae39faebc",
          "ce40b423-cede-4313-a93f-9b28290b72e1",
          "a36e6959-b6be-4b12-8e9f-ef4b474d304d",
          "5daaa2af-1fe8-407c-9122-bba179798270",
          "fb1c8493-542b-48eb-b624-b4c8fea62acd",
          "12cf5a90-567b-43ae-8102-96cf46c7d9b4",
          "bfb1c7d2-fb1a-466b-b2ba-aee63b92deaf",
          "420fcaa2-552c-430f-98ca-3264be4806c7",
          "fb879df8-f326-4884-b1cf-06f3ad86be52",
          "1c0163c0-47e6-4577-8991-ea5c82e286e4",
          "cd570a14-e51a-42ad-bac8-bafd67325302",
          "00c29273-979b-4161-815c-10b084fb9324",
          "e8ddcd69-c73f-4f9f-9844-4100522f16ad",
          "b279062a-9be3-42a0-92ae-8b3cf002ec4d",
          "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
          "3913510d-42f4-4e42-8a64-420c390055eb",
          "8a3c2885-9b38-4fd2-9d99-91af537c1347",
          "200bba9e-f0c8-430f-892b-6f0794863803",
          "ff100721-1b9d-43d8-af52-42b69c1272db",
          "b8b15564-4fa6-4a59-ab12-03e1d9594795",
          "27f8b550-c507-4db9-86f2-f4b8e816d59d",
          "d63b75f7-47ea-4f27-92ac-e0d173aaf093",
          "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
          "49e2f5d2-7741-4835-8efa-19e1fe35e47f",
          "e4237640-0e3d-4a46-8fda-70bc94856432",
          "67d33e57-3129-45e6-bb0b-7cc522f762fa",
          "4e9b8407-af2e-495b-ae54-bb60a55b1b5a",
          "f4c81013-99ee-4d62-a7ee-b3f1f648599a",
          "871e35f6-b5c1-49cc-a043-bde969a0f2cd",
          "4447db05-44ed-4da3-ae60-6cbece780e32",
          "f2dc8367-1007-4938-bd23-fe263f013447",
          "a6333a3e-0164-44c3-b281-7a577aff287f",
          "18ed5180-3e48-46fd-8541-4ea054d57064",
          "088ab73d-1256-47ae-bea9-9de8e7131f31",
          "361898ef-9ed1-48c2-849c-a832951106bb",
          "eeaeda52-9324-47f6-8069-5d5bade478b2",
          "0f2ebee7-ffd4-4fc0-b3b7-664099fdad5d",
          "00493d72-78f6-4148-b6c5-d3ce8e4799dd",
          "959f8984-c045-4866-89c7-12bf9737be2e",
          "6b77f0a0-0d89-41cc-acd1-579c22c17a67",
          "1ef6a3be-d0ac-425d-8c01-acb62866290b",
          "cd08ab90-6b14-449c-ad9a-8f8e549482c6",
          "45d50f46-0b78-4001-a660-4198cbe8cd05",
          "331c37c6-af14-46d9-b9f4-e1909e1b95a0",
          "602da2ba-a5c2-41da-b01d-5360126ab525",
          "c0781e91-8102-4553-8951-97c6d4243cda",
          "e582369a-e17b-42a5-b10c-874c387c530b",
          "6aac74c4-6311-40d2-bbdd-7d01e7c6e3a9",
          "a92dfd61-77f9-4aec-a531-19858b406c87",
          "4465e953-8ced-4406-a58e-0f6e3f3b530b",
          "c031e6a8-4391-4de0-8d69-4706a7ed3729",
          "d24ecba3-c1f4-40fa-a7bb-4588a071e8fd",
          "80dcbedb-47ef-405d-95bd-188a1b4ac406",
          "af6a70f8-3c9f-4105-acf1-d719e9fca4ca",
          "489581de-a3bd-480d-9518-53dea7416b33",
          "a959dbd1-f747-45e3-8ba6-dd80f235f97c",
          "40c5ff49-9181-41f8-ae61-143b0e78555e",
          "76cc9ee4-d5d3-4a45-a930-26add3d73475",
          "a8281131-f312-4f34-8d98-ae12be9f0d23",
          "4339b7cf-9826-4e41-b4ed-c7f4505dac08",
          "a2c4a527-7dc0-4ee3-897b-403ade70fafb",
          "b0d8363b-8ddd-447d-831f-62ca05bff136",
          "30b27cfc-9c84-438e-b0ce-70e35255df80",
          "18ab4d3d-a1bf-4477-8ad9-8359bc988f69",
          "434fb43a-c01c-447e-9f67-c3ad923cfaba",
          "5af6afb3-c06c-4fa4-8848-71a8aee05683",
          "63bb64ad-9799-4770-b5c3-24ed299a07bf",
          "ba79058c-0414-4a34-9e42-c3399d80cd5a",
          "c6decf44-fd0a-444c-a844-d653c394e7ab",
          "f58310d9-a9f6-439a-9e8d-f62e7b41a168",
          "392ae280-861d-42bd-9ea5-08ee6d83b80e",
          "1c9b6475-caf0-4164-b5a1-2142a7116f4b",
          "51d6186e-6489-4900-b93f-92e23144cca5",
          "18e40d4e-8d2e-438d-97e1-9528336e149c",
          "80558df3-64f9-4c0f-b32d-e5094b036b0b",
          "a99b0159-1064-4c22-a57b-c9b3caa1c054",
          "1823dd4f-9b8c-4ab6-ab4e-7397a3684615",
          "e503ece1-11d0-4e8e-8e2c-7a6c3bf38815",
          "05352d14-a920-4328-a0de-4cbe7430e26b",
          "aabbc5dd-1af0-458b-a942-81af88f9c138",
          "7b0c7e81-271f-4c71-90bf-e30bdfdbc2f7",
          "fbc52c3f-28ad-4303-a892-8a056630b8f1",
          "4ba50f17-9666-485c-a643-ff00808643f0",
          "a001fd3d-188f-4b5d-821b-7da978bf7442",
          "5e0bd9bd-7b93-4f28-af87-19fc36ad61bd",
          "36e80216-a7e8-4f42-a7e1-f12c98cbaf8a",
          "68ff5d27-c7f5-4fa9-a21c-785d0df7bd9e",
          "ad2dd5fb-cd4b-4fd4-a9b6-4fed3630980b",
          "1afdec4b-e479-420e-99e7-f82237c7c5e6",
          "f5819b54-e033-4d82-ac66-4fec3cbf3f4c",
          "189207d4-bb67-4208-a635-b06afe8b2c57",
          "c4bc862a-3b64-4a35-a021-a380c159b042",
          "ef29765d-0d37-4119-a4f8-f9f9902c9588",
          "0105a6b0-4bb9-43d2-982a-12806f9faddb",
          "6d949e1d-41e2-46e3-8920-c6e4f31a8310",
          "d5a2ae44-610b-4500-93be-660a0c5f5ca6",
          "f0310ce6-e953-4cf8-b892-fb1c87eaf7f6",
          "1d335eef-eee1-47fe-a9e0-53214eba8872",
          "ae8036db-e102-405b-a1b9-bae082ea436d",
          "a9b99099-ead7-47db-8fcf-072597a61dfa",
          "0ab34830-df19-4f8c-b84e-aa85b8afa6e8",
          "3f2eb865-5811-4578-b90a-6fc6fa0df8e5",
          "0f99d363-226e-4dca-9920-b807cf8e1a5f",
          "0db238c4-885e-4c4f-a933-aa2cef684fca",
          "d18ad5f3-1baf-4119-b49b-d944edb1f9d0",
          "a8835c7d-b5cb-47fa-b6f0-65ea10ce07a2",
          "bda0d508-adf1-4af0-9c28-88919fc3ae06",
          "bfc3b73d-c6ff-45eb-9a5f-40298295bf20",
          "7392c568-9289-4bde-aaaa-b7131215889d",
          "d6470a16-71bd-43ab-86b3-6f3a73f4e787",
          "ef1c2c96-4a77-49e8-b9a4-6179fe1d2fd2",
          "73c2c328-d004-4c5e-938c-35c6f5679a1f",
          "56328988-075d-4c6a-8766-d93edd6725b6",
          "d59a3e9c-6d52-4a5a-aeed-6bf3cf0e31da",
          "9565a273-41b9-4368-97d2-aeb0c976a9b3",
          "0c34c906-8d99-4cb7-8bb7-33f5b0a1a799",
          "b8eda974-7b85-4f76-af95-65846b26df6d",
          "69566ab7-960f-475b-8e7c-b3118f30c6bd",
          "7eabc9a4-85f7-4f71-b8ab-75daaccc1033",
          "1f135831-5bbe-4924-9016-264044c00788",
          "3d55a8f6-4133-418d-8051-facdb1735758",
          "0f37683f-2463-46b6-9ce7-9b788b988ba2",
          "ffc6bbe0-e443-4c3b-bf54-26581bb2f78e",
          "8b9dfcab-4b77-4632-a6df-94bd07820648",
          "e9b8712a-cbcf-4ea7-b0f7-e71b803401e6",
          "c8ae6279-5a0b-4cb2-b3f0-d4d62845742c",
          "6d994134-994b-4a59-9974-f479f0b227fb",
          "79b01272-bf9f-4f4c-9517-5506269cf524",
          "7ac06ca7-21ca-47e3-a67b-cbd6e6223baf",
          "5e28a61e-8040-49db-b175-bb5b88af6239",
          "9c1607d1-791d-4c68-885d-c7b7aaff7c8a",
          "1e7ca9b1-60d1-4db8-a914-f2ca1ff27c40",
          "df2711a6-406d-41cf-b366-b0250bff9ad1",
          "fa6cecf6-5db3-4c43-8470-c540bcb4eafa",
          "bba48692-92b0-4667-a9ad-c31c7b334ac2",
          "c088a766-074b-43ba-90d4-1fb21feae531",
          "a02f7c31-354d-4106-865a-deedf37fa038",
          "4accf36b-2c05-432f-91c8-5c532dff4c73",
          "523776ba-4eb2-4600-a3c8-f2dc93da4bdb",
          "ad710c24-b039-4e85-a019-deb4a06e8570",
          "b70c96e9-66fe-4c09-b6e7-c98e69c98555",
          "7beabc75-32c9-da8f-cd88-a2e7e3106650"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to allow assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Authorization/roleAssignments",
            "field": "type"
          },
          {
            "notIn": "[parameters('prefix')]",
            "value": "[last(split(field('Microsoft.Authorization/roleAssignments/roleDefinitionId'), '/'))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-19T15:26:29.684842+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-28T12:19:11.987814+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Prevent creation of Deprecated ASC default setDefinition",
    "displayName": "ASC-Default: Prevent creation of Deprecated ASC default setDefinition",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ASC-Default-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-05-07T10:02:05.2024568Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ASC-Default-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Authorization/policyAssignments",
            "field": "type"
          },
          {
            "equals": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
            "field": "Microsoft.Authorization/policyAssignments/policyDefinitionId"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-05-07T10:02:05.128035+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-07T10:02:05.128035+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Usage of UAMI is allow to register existing SAP system",
    "displayName": "SAP-02 - Usage of UAMI is allow to register existing SAP system",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SAP-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-13T11:19:05.011614Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-12T16:09:55.4665698Z"
    },
    "mode": "All",
    "name": "SAP-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "notin": [
              "microsoft.workloads/sapvirtualinstances"
            ]
          },
          {
            "allOf": [
              {
                "anyOf": [
                  {
                    "exists": true,
                    "field": "identity.userAssignedIdentities"
                  },
                  {
                    "contains": "UserAssigned",
                    "field": "identity.type"
                  },
                  {
                    "contains": "userassigned",
                    "value": "[toLower(string(field('identity.type')))]"
                  }
                ]
              },
              {
                "anyOf": [
                  {
                    "equals": false,
                    "value": "[if(empty(field('identity.userAssignedIdentities')),bool('false'),contains(field('identity.userAssignedIdentities'),'/subscriptions/e45678c8-c0cf-4188-8d90-cebac8052b4d/resourceGroups/rg-001-853-prod-frc-sentinel/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AMAUserAssignedIdentity'))]"
                  },
                  {
                    "greater": 1,
                    "value": "[length(field('identity.userAssignedIdentities'))]"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-13T11:19:04.926616+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-12T16:09:55.425541+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enforce Create of Azure Center for SAP ony for \"Discovery\" / Existing SAP enviroment",
    "displayName": "SAP-01 - Enforce Create of Azure Center for SAP ony for \"Discovery\" / Existing SAP enviroment",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SAP-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-13T11:19:05.0681495Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "SAP-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Workloads/sapVirtualInstances",
            "field": "type"
          },
          {
            "field": "Microsoft.Workloads/sapVirtualInstances/configuration.configurationType",
            "notEquals": "Discovery"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-13T11:19:04.948055+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-13T11:19:04.948055+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Function App Minimum_tls_version must be 1.2 or 1.3",
    "displayName": "FUNC-24 - Function App Minimum_tls_version must be 1.2 or 1.3",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-24-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-03T13:35:36.0368463Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "FUNC-24-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "contains": "functionapp",
            "field": "kind"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "siteName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                  "siteName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "name": "[concat(parameters('siteName'), '/web')]",
                    "properties": {
                      "minTlsVersion": "1.2"
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "field": "Microsoft.Web/sites/config/minTlsVersion",
            "greaterOrEquals": "1.2"
          },
          "name": "web",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-03T13:35:35.918062+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-03T13:35:35.918062+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Developer tier must not be used in production environment",
    "displayName": "AAS-07: Developer tier must not be used in production environment",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AAS-07-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-18T14:40:39.5026236Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-19T10:54:53.114229Z"
    },
    "mode": "All",
    "name": "AAS-07-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "in": [
                  "PRD",
                  "PROD",
                  "PPR",
                  "PPRD",
                  "PPROD",
                  "PREPROD"
                ],
                "value": "[toUpper(subscription().tags['sg_Subscription_Environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPR",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PREPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          },
          {
            "equals": "Microsoft.AnalysisServices/servers",
            "field": "type"
          },
          {
            "equals": "Development",
            "field": "Microsoft.AnalysisServices/servers/sku.tier"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-18T14:40:39.418918+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T10:54:53.101133+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Production ressources must be locked against deletion",
    "displayName": "LCK-01: Production ressources must be locked against deletion",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/LCK-01-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-20T10:53:59.6186082Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LCK-01-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "excludedResourceGroups": {
        "allowedValues": [
          "rg-dl-sgdbf-aks-*",
          "rg-dl-sgdbf-databricks-*",
          "rg-dp-abr-*-syws-prd-frc",
          "syws-rg-dp-abr-*-prd-frc",
          "rg-dp-sgdbf-vnet-*-frc"
        ],
        "defaultValue": [
          "rg-dl-sgdbf-aks-*",
          "rg-dl-sgdbf-databricks-*",
          "rg-dp-abr-*-syws-prd-frc",
          "syws-rg-dp-abr-*-prd-frc",
          "rg-dp-sgdbf-vnet-*-frc"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of excluded RSG used on aks or databricks",
          "displayName": null,
          "strongType": null
        },
        "type": "array"
      },
      "listOfResources": {
        "allowedValues": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.Devices/provisioningServices",
          "Microsoft.Kusto/clusters",
          "Microsoft.Network/applicationGateways",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.Network/privateEndpoints",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.Automation/automationAccounts",
          "Microsoft.CDN/profiles",
          "Microsoft.Cache/Redis",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Devices/IotHubs",
          "Microsoft.Sql/servers",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/domains",
          "Microsoft.EventGrid/namespaces",
          "Microsoft.EventGrid/systemTopics",
          "Microsoft.EventGrid/topics",
          "Microsoft.EventHub/namespaces",
          "Microsoft.Network/frontDoors",
          "Microsoft.Web/sites",
          "Microsoft.Network/loadBalancers",
          "Microsoft.Logic/workflows",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Network/natGateways",
          "Microsoft.Purview/accounts",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.SignalRService/SignalR",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.KeyVault/vaults",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines",
          "Microsoft.DigitalTwins/digitalTwinsInstances",
          "Microsoft.DBforPostgreSQL/serverGroupsv2",
          "Microsoft.AnalysisServices/servers",
          "Microsoft.Kusto/clusters",
          "Microsoft.Purview/Accounts",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.HybridCompute/machines",
          "microsoft.Dashboard/grafana",
          "Microsoft.Insights/components"
        ],
        "defaultValue": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.Devices/provisioningServices",
          "Microsoft.Kusto/clusters",
          "Microsoft.Network/applicationGateways",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.Network/privateEndpoints",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.Automation/automationAccounts",
          "Microsoft.CDN/profiles",
          "Microsoft.Cache/Redis",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Devices/IotHubs",
          "Microsoft.Sql/servers",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/domains",
          "Microsoft.EventGrid/namespaces",
          "Microsoft.EventGrid/systemTopics",
          "Microsoft.EventGrid/topics",
          "Microsoft.EventHub/namespaces",
          "Microsoft.Network/frontDoors",
          "Microsoft.Web/sites",
          "Microsoft.Network/loadBalancers",
          "Microsoft.Logic/workflows",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Network/natGateways",
          "Microsoft.Purview/accounts",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.SignalRService/SignalR",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.KeyVault/vaults",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines",
          "Microsoft.DigitalTwins/digitalTwinsInstances",
          "Microsoft.DBforPostgreSQL/serverGroupsv2",
          "Microsoft.AnalysisServices/servers",
          "Microsoft.Kusto/clusters",
          "Microsoft.Purview/Accounts",
          "Microsoft.StreamAnalytics/streamingjobs",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.HybridCompute/machines",
          "microsoft.Dashboard/grafana",
          "Microsoft.Insights/components"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of all resources who needs to have lock",
          "displayName": null,
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "in": [
                  "PRD",
                  "PROD",
                  "PPR",
                  "PPRD",
                  "PPROD",
                  "PREPROD"
                ],
                "value": "[toUpper(subscription().tags['sg_Subscription_Environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPR",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PREPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          },
          {
            "field": "type",
            "in": "[parameters('listOfResources')]"
          },
          {
            "allOf": [
              {
                "notContains": "-core",
                "value": "[split(field('id'), '/')[4]]"
              },
              {
                "field": "name",
                "notContains": "-core"
              }
            ]
          },
          {
            "count": {
              "name": "allowedRSG",
              "value": "[parameters('excludedResourceGroups')]",
              "where": {
                "like": "[current('allowedRSG')]",
                "value": "[resourceGroup().name]"
              }
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "CanNotDelete",
            "field": "Microsoft.Authorization/locks/level"
          },
          "type": "Microsoft.Authorization/locks"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-20T10:53:59.542439+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T10:53:59.542439+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Contributor role should not be assigned to Users or groups on prod subscription.",
    "displayName": "ID-08-GLOBAL-sgct: Contributor role should not be assigned to Users or groups on prod subscription.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ID-08-GLOBAL-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-20T10:53:59.8462565Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ID-08-GLOBAL-new-sgct",
    "parameters": {
      "builtInRolesId": {
        "allowedValues": [
          "b24988ac-6180-42a0-ab88-20f7382dd24c"
        ],
        "defaultValue": [
          "b24988ac-6180-42a0-ab88-20f7382dd24c"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to deny assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      },
      "denyType": {
        "allowedValues": [
          "user",
          "group"
        ],
        "defaultValue": [
          "user",
          "group"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of built-in roles Id to deny assignment of",
          "displayName": "Forbidden built-in roles",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Authorization/roleAssignments",
            "field": "type"
          },
          {
            "in": "[parameters('builtInRolesId')]",
            "value": "[last(split(field('Microsoft.Authorization/roleAssignments/roleDefinitionId'), '/'))]"
          },
          {
            "field": "Microsoft.Authorization/roleAssignments/principalType",
            "in": "[parameters('denyType')]"
          },
          {
            "field": "Microsoft.Authorization/roleAssignments/principalId",
            "notIn": [
              "0fe68cc9-c5ff-4bbf-a94c-6687cdc50779",
              "3cd25637-51dd-4879-9f14-2b75cdbd9812",
              "5f090f23-7eb5-4358-ad45-07b6c71a2d72",
              "4f68b568-188a-4a54-bef0-c4d2ab2410eb",
              "a3918650-0f75-45a4-bd18-7a0351070139",
              "82b62451-3468-462c-bf1a-bfcf57103fcf"
            ]
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "in": [
                  "PRD",
                  "PROD",
                  "PPR",
                  "PPRD",
                  "PPROD",
                  "PREPROD"
                ],
                "value": "[toUpper(subscription().tags['sg_Subscription_Environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPR",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PREPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-20T10:53:59.709920+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T10:53:59.709920+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Production Cognitive Services must be locked against deletion",
    "displayName": "ACOS-LCK-ROOT - Production Cognitive Services must be locked against deletion",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACOS-LCK-ROOT-sgct",
    "metadata": {
      "createdBy": "d57291c2-802d-41ed-915e-ce28a75130e7",
      "createdOn": "2022-07-29T14:50:09.8372516Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://alfresco-euro.saint-gobain.com:9005/share/page/repository?path=%2FSaint-Gobain%2FGroup%20DSI%2FIT%20Security%2FPublic%20Cloud%20Security%2FHardening%20Guides\">Hardening Guides</a>: <a href=\"https://alfresco-euro.saint-gobain.com:9005/share/page/repository?path=%2FSaint-Gobain%2FGroup%20DSI%2FIT%20Security%2FPublic%20Cloud%20Security%2FHardening%20Guides\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ACOS-LCK-ROOT-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "like": "*-PRD",
                "value": "[subscription().displayName]"
              },
              {
                "like": "*-Prod",
                "value": "[subscription().displayName]"
              },
              {
                "like": "*-PPR",
                "value": "[subscription().displayName]"
              }
            ]
          },
          {
            "equals": "Microsoft.CognitiveServices/accounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "CanNotDelete",
            "field": "Microsoft.Authorization/locks/level"
          },
          "type": "Microsoft.Authorization/locks"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2022-07-29T14:50:09.811932+00:00",
      "createdBy": "47dcd408-e9ef-4974-b59c-fbcc824ee9ee",
      "createdByType": "Application",
      "lastModifiedAt": "2022-07-29T14:50:09.811932+00:00",
      "lastModifiedBy": "47dcd408-e9ef-4974-b59c-fbcc824ee9ee",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System-assigned managed identity for AKS cluster must be created",
    "displayName": "AKS-12-sgct - System-assigned managed identity for AKS cluster must be created",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AKS-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-21T14:05:10.5612146Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:52:19.3456434Z"
    },
    "mode": "All",
    "name": "AKS-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "AzureML in APPI or APPS"
        ],
        "defaultValue": [
          "AzureML in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "equals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": true,
                "field": "identity.type"
              },
              {
                "field": "identity.type",
                "notEquals": "None"
              }
            ]
          },
          "type": "Microsoft.ContainerService/managedClusters"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-21T14:05:10.466833+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:52:19.304254+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Local accounts with Kubernetes RBAC must be used",
    "displayName": "AKS-11-sgct - Local accounts with Kubernetes RBAC must be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AKS-11-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-21T14:05:10.7959179Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.5699143Z"
    },
    "mode": "All",
    "name": "AKS-11-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "AzureML in APPI or APPS"
        ],
        "defaultValue": [
          "AzureML in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "allOf": [
              {
                "field": "[concat('tags[', parameters('tagName'), ']')]",
                "in": "[parameters('tagValue')]"
              },
              {
                "anyOf": [
                  {
                    "field": "Microsoft.ContainerService/managedClusters/disableLocalAccounts",
                    "notEquals": "false"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-21T14:05:10.701212+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.547975+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System-assigned managed identity for AKS cluster must be created",
    "displayName": "AKS-12-sgct - System-assigned managed identity for AKS cluster must be created",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AKS-12-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-21T14:05:10.804366Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:09:06.6246364Z"
    },
    "mode": "All",
    "name": "AKS-12-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "AzureML in APPI or APPS"
        ],
        "defaultValue": [
          "AzureML in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "allOf": [
              {
                "field": "[concat('tags[', parameters('tagName'), ']')]",
                "in": "[parameters('tagValue')]"
              },
              {
                "anyOf": [
                  {
                    "anyOf": [
                      {
                        "notEquals": "SystemAssigned",
                        "value": "[field('identity.type')]"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-21T14:05:10.638707+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:09:06.601818+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "'sg_Resource_ControlTower_Profile' : 'APPE - Single deployment', 'APPE - Elastic pool deployment'",
    "displayName": "DB-SQL-TAG-04: For 'APPE', 'sg_Resource_ControlTower_Profile' : 'APPE - Single deployment', 'APPE - Elastic pool deployment'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-TAG-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-24T14:59:02.83923Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:12:10.3717231Z"
    },
    "mode": "All",
    "name": "DB-SQL-TAG-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "APPE"
        ],
        "defaultValue": [
          "APPE"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagValue": {
        "allowedValues": [
          "APPE - Single deployment",
          "APPE - Elastic pool deployment"
        ],
        "defaultValue": [
          "APPE - Single deployment",
          "APPE - Elastic pool deployment"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "in": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-24T14:59:02.665092+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:12:10.349601+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only extensions validated by security must be used",
    "displayName": "VM-14 - Only extensions validated by security must be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T14:41:55.8592981Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-17T09:23:56.6969401Z"
    },
    "mode": "All",
    "name": "VM-14-sgct",
    "parameters": {
      "approvedExtensions": {
        "allowedValues": null,
        "defaultValue": [
          "LinuxDiagnostic",
          "RunCommandLinux",
          "OmsAgentForLinux",
          "MicrosoftMonitoringAgent",
          "DependencyAgentWindows",
          "DependencyAgentLinux",
          "IaaSDiagnostics",
          "NetworkWatcherAgentLinux",
          "KeyVaultForWindows",
          "AzureBackupWindowsWorkload",
          "MDE.Windows",
          "SqlIaaSAgent",
          "MDE.Linux",
          "CustomScriptExtension",
          "JsonADDomainExtension",
          "QualysAgent",
          "CustomScript",
          "QualysAgentLinux",
          "AzureMonitorWindowsAgent",
          "AzureMonitorLinuxAgent",
          "AzurePerformanceDiagnostics",
          "AzureBackupLinuxWorkload"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of approved extension types that can be installed. Example: AzureDiskEncryption",
          "displayName": "Approved extensions",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines/extensions",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/virtualMachines/extensions/type",
            "notIn": "[parameters('approvedExtensions')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T14:41:55.787237+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-17T09:23:56.673086+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System-assigned identity must be used",
    "displayName": "VM-10: System-assigned identity must be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T14:41:56.0196559Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-18T13:29:53.3878042Z"
    },
    "mode": "All",
    "name": "VM-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Compute/virtualMachines",
              "Microsoft.ClassicCompute/virtualMachines"
            ]
          },
          {
            "anyOf": [
              {
                "notContains": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T14:41:55.865360+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-18T13:29:53.374676+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS should be restricted to authorized destination (i.e. described in a validated PSAT)",
    "displayName": "FUNC-11 : CORS must not accept all",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-11-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T15:53:57.0378327Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-09T09:55:07.4140722Z"
    },
    "mode": "All",
    "name": "FUNC-11-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "forbiddenOrigins": {
        "allowedValues": [
          "*"
        ],
        "defaultValue": [
          "*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of urls forbidden for CORS",
          "displayName": "Forbidden CORS origins",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "webAppName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "webAppName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('webAppName'), '/web')]",
                    "properties": {
                      "cors": {
                        "allowedOrigins": [
                          "https://portal.azure.com"
                        ]
                      }
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
              "where": {
                "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                "in": "[parameters('forbiddenOrigins')]"
              }
            },
            "equals": 0
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T15:53:56.950461+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-09T09:55:07.406413+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SCM access should be protected allowing access only from Zscaler, Netskope and Git runners Ips",
    "displayName": "FUNC-07 - SCM access should be protected allowing access only from Zscaler, Netskope and Git runners Ips",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-07-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T15:53:57.3348902Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "FUNC-07-new-sgct",
    "parameters": {
      "GitHubRunnersIP": {
        "allowedValues": [
          "192.109.140.0/24"
        ],
        "defaultValue": [
          "192.109.140.0/24"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of GitHub Runners IP addresses ranges",
          "displayName": "GitHub Runners IPs",
          "strongType": null
        },
        "type": "array"
      },
      "NetScopeIP": {
        "allowedValues": [
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.206.107.32/32",
          "24.206.107.33/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.139.30/32",
          "24.239.139.31/32"
        ],
        "defaultValue": [
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.206.107.32/32",
          "24.206.107.33/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.139.30/32",
          "24.239.139.31/32"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of NetScope IP addresses ranges",
          "displayName": "NetScope IPs",
          "strongType": null
        },
        "type": "array"
      },
      "ZScalerIP": {
        "allowedValues": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16"
        ],
        "defaultValue": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of ZScaler IP addresses ranges",
          "displayName": "ZScaler IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/publicNetworkAccess"
              },
              {
                "field": "Microsoft.Web/sites/publicNetworkAccess",
                "notEquals": "Disabled"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/web')]",
                    "properties": {
                      "scmIpSecurityRestrictions": [
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "1.234.57.0/24",
                          "name": "Allow from ZScaler IP 1",
                          "priority": 120
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "89.167.131.0/24",
                          "name": "Allow from ZScaler IP 2",
                          "priority": 125
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "154.113.23.0/24",
                          "name": "Allow from ZScaler IP 3",
                          "priority": 130
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "211.144.19.0/24",
                          "name": "Allow from ZScaler IP 4",
                          "priority": 135
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "8.25.203.0/24",
                          "name": "Allow from ZScaler 5",
                          "priority": 140
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "94.188.131.0/24",
                          "name": "Allow from ZScaler 6",
                          "priority": 145
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "165.225.0.0/17",
                          "name": "Allow from ZScaler 7",
                          "priority": 150
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "213.52.102.0/24",
                          "name": "Allow from ZScaler 8",
                          "priority": 155
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "27.251.211.238/32",
                          "name": "Allow from ZScaler 9",
                          "priority": 160
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "104.129.192.0/20",
                          "name": "Allow from ZScaler 10",
                          "priority": 165
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "165.225.192.0/18",
                          "name": "Allow from ZScaler 11",
                          "priority": 170
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "213.152.228.0/24",
                          "name": "Allow from ZScaler 12",
                          "priority": 175
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "58.220.95.0/24",
                          "name": "Allow from ZScaler 13",
                          "priority": 180
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "124.248.141.0/24",
                          "name": "Allow from ZScaler 14",
                          "priority": 185
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "185.46.212.0/22",
                          "name": "Allow from ZScaler 15",
                          "priority": 190
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "216.218.133.192/26",
                          "name": "Allow from ZScaler 16",
                          "priority": 195
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "64.74.126.64/26",
                          "name": "Allow from ZScaler 17",
                          "priority": 200
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "136.226.0.0/16",
                          "name": "Allow from ZScaler 18",
                          "priority": 205
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "197.98.201.0/24",
                          "name": "Allow from ZScaler 19",
                          "priority": 210
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "216.52.207.64/26",
                          "name": "Allow from ZScaler 20",
                          "priority": 215
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "70.39.159.0/24",
                          "name": "Allow from ZScaler 21",
                          "priority": 220
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "137.83.128.0/18",
                          "name": "Allow from ZScaler 22",
                          "priority": 225
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "199.168.148.0/22",
                          "name": "Allow from ZScaler 23",
                          "priority": 230
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "72.52.96.0/26",
                          "name": "Allow from ZScaler 24",
                          "priority": 235
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "147.161.128.0/17",
                          "name": "Allow from ZScaler 25",
                          "priority": 240
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "209.51.184.0/26",
                          "name": "Allow from ZScaler 26",
                          "priority": 245
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "167.103.0.0/16",
                          "name": "Allow from ZScaler 27",
                          "priority": 250
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from ZScaler Ips",
                          "ipAddress": "170.85.0.0/16",
                          "name": "Allow from ZScaler 28",
                          "priority": 255
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.115.32/32",
                          "name": "Allow from Netskope 1",
                          "priority": 260
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.115.33/32",
                          "name": "Allow from Netskope 2",
                          "priority": 265
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.76.50/32",
                          "name": "Allow from Netskope 3",
                          "priority": 270
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.76.51/32",
                          "name": "Allow from Netskope 4",
                          "priority": 275
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.160.32/32",
                          "name": "Allow from Netskope 5",
                          "priority": 280
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.160.33/32",
                          "name": "Allow from Netskope 6",
                          "priority": 285
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.140.32/32",
                          "name": "Allow from Netskope 7",
                          "priority": 290
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.140.33/32",
                          "name": "Allow from Netskope 8",
                          "priority": 295
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.129.30/32",
                          "name": "Allow from Netskope 9",
                          "priority": 300
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.129.31/32",
                          "name": "Allow from Netskope 10",
                          "priority": 305
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.98.12/32",
                          "name": "Allow from Netskope 11",
                          "priority": 310
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.98.13/32",
                          "name": "Allow from Netskope 12",
                          "priority": 315
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.78.46/32",
                          "name": "Allow from Netskope 13",
                          "priority": 320
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.78.47/32",
                          "name": "Allow from Netskope 14",
                          "priority": 325
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.164.28/32",
                          "name": "Allow from Netskope 15",
                          "priority": 330
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.164.29/32",
                          "name": "Allow from Netskope 16",
                          "priority": 335
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.131.32/32",
                          "name": "Allow from Netskope 17",
                          "priority": 340
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.131.33/32",
                          "name": "Allow from Netskope 18",
                          "priority": 345
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.135.28/32",
                          "name": "Allow from Netskope 19",
                          "priority": 350
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.135.29/32",
                          "name": "Allow from Netskope 20",
                          "priority": 355
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.107.32/32",
                          "name": "Allow from Netskope 21",
                          "priority": 360
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.107.33/32",
                          "name": "Allow from Netskope 22",
                          "priority": 365
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.89.94/32",
                          "name": "Allow from Netskope 23",
                          "priority": 370
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.206.89.95/32",
                          "name": "Allow from Netskope 24",
                          "priority": 375
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.166.30/32",
                          "name": "Allow from Netskope 25",
                          "priority": 380
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.166.31/32",
                          "name": "Allow from Netskope 26",
                          "priority": 385
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.134.32/32",
                          "name": "Allow from Netskope 27",
                          "priority": 390
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.134.33/32",
                          "name": "Allow from Netskope 28",
                          "priority": 395
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.139.30/32",
                          "name": "Allow from Netskope 29",
                          "priority": 400
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from Netscope Ips",
                          "ipAddress": "24.239.139.31/32",
                          "name": "Allow from Netskope 30",
                          "priority": 405
                        },
                        {
                          "action": "Allow",
                          "description": "Allow from GitHubRunners Ips",
                          "ipAddress": "192.109.140.0/24",
                          "name": "Allow from GitHubRunners",
                          "priority": 500
                        },
                        {
                          "action": "Deny",
                          "description": "Deny all access",
                          "ipAddress": "Any",
                          "name": "Deny all",
                          "priority": 2147483647
                        }
                      ],
                      "scmIpSecurityRestrictionsDefaultAction": "Deny",
                      "scmIpSecurityRestrictionsUseMain": "false"
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": false,
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictionsUseMain"
                  },
                  {
                    "equals": "Deny",
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictionsDefaultAction"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                      "where": {
                        "allOf": [
                          {
                            "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress",
                            "notEquals": "Any"
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "ZScalerIPs",
                              "value": "[parameters('ZScalerIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('ZScalerIPs'), current('Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "NetScopeIPs",
                              "value": "[parameters('NetScopeIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('NetScopeIPs'), current('Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "GitHubRunnersIPs",
                              "value": "[parameters('GitHubRunnersIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('GitHubRunnersIPs'), current('Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "equals": "Allow",
                            "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                          }
                        ]
                      }
                    },
                    "equals": 0
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictionsUseMain"
                  },
                  {
                    "equals": "Deny",
                    "field": "Microsoft.Web/sites/config/IpSecurityRestrictionsDefaultAction"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*]",
                      "where": {
                        "allOf": [
                          {
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress",
                            "notEquals": "Any"
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "ZScalerIPs",
                              "value": "[parameters('ZScalerIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('ZScalerIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "NetScopeIPs",
                              "value": "[parameters('NetScopeIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('NetScopeIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "GitHubRunnersIPs",
                              "value": "[parameters('GitHubRunnersIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('GitHubRunnersIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "equals": "Allow",
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].action"
                          }
                        ]
                      }
                    },
                    "equals": 0
                  }
                ]
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T15:53:57.209357+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-25T15:53:57.209357+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System managed identity must be used for communication with other Azure services",
    "displayName": "FUNC-14 : System managed identity must be used for communication with other Azure services",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-14-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T15:53:57.8797408Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "FUNC-14-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "contains": "functionapp",
            "field": "kind"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "siteName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "siteName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2018-11-01",
                    "identity": {
                      "type": "SystemAssigned"
                    },
                    "location": "[parameters('location')]",
                    "name": "[parameters('siteName')]",
                    "properties": {},
                    "type": "Microsoft.Web/sites"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "anyOf": [
              {
                "exists": "true",
                "field": "Microsoft.Web/sites/config/managedServiceIdentityId"
              },
              {
                "exists": "true",
                "field": "Microsoft.Web/sites/config/xmanagedServiceIdentityId"
              }
            ]
          },
          "name": "web",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T15:53:57.734193+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-25T15:53:57.734193+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": ": Function app with VNEt integrated in a subnet in SGNET Non-routable VNET must not allow Service endpoint creation",
    "displayName": "FUNC-40 - : Function app with VNEt integrated in a subnet in SGNET Non-routable VNET must not allow Service endpoint creation",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-40-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T15:55:30.5705966Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "FUNC-40-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks",
            "field": "type"
          },
          {
            "field": "name",
            "notContains": "core"
          },
          {
            "in": [
              "APPIO"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets[*]",
              "where": {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets[*].serviceAssociationLinks[*]",
                  "where": {
                    "equals": "AppServiceLink",
                    "field": "Microsoft.Network/virtualNetworks/subnets[*].serviceAssociationLinks[*].name"
                  }
                },
                "notEquals": 0
              }
            },
            "notEquals": 0
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets[*]",
              "where": {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets[*].serviceEndpoints[*]"
                },
                "notEquals": 0
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T15:55:30.501127+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-25T15:55:30.501127+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public Endpoint must be disabled on Function App for APPI & APPE",
    "displayName": "FUNC-31 : Public Endpoint must be disabled on Function App for APPI & APPE",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-31-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T15:55:30.6407903Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "FUNC-31-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "contains": "functionapp",
            "field": "kind"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/publicNetworkAccess"
              },
              {
                "field": "Microsoft.Web/sites/publicNetworkAccess",
                "notEquals": "Disabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T15:55:30.554563+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-25T15:55:30.554563+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for AKS",
    "displayName": "DIAG-AKS: Enable logging by category group audit for AKS to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-AKS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:56.1677308Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-13T22:13:00.2575318Z"
    },
    "mode": "All",
    "name": "DIAG-AKS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.ContainerService/managedClusters/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:56.084066+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-13T22:13:00.257903+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for Stream Analytics",
    "displayName": "DIAG-STMA: Deploy Diagnostic Settings to enable logging by category group for StreamAnalyticsJob to Log Analytics workspace",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-STMA-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:56.3620873Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:54:21.072734Z"
    },
    "mode": "All",
    "name": "DIAG-STMA-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.StreamAnalytics/streamingjobs",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "allLogs",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "allLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:56.238853+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:54:21.036176+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable logging by category accounts and unityCatalog for databricks to Log Analytics",
    "displayName": "DIAG-ADB: Enable logging by category accounts and unityCatalog for databricks to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ADB-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:56.3747226Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-13T14:56:16.21741Z"
    },
    "mode": "All",
    "name": "DIAG-ADB-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Databricks/workspaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "accounts",
                          "enabled": true
                        },
                        {
                          "category": "unityCatalog",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Databricks/workspaces/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "anyOf": [
                          {
                            "equals": "accounts",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          },
                          {
                            "equals": "unityCatalog",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          }
                        ]
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 2
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:56.244320+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-13T14:56:16.125464+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for app insights",
    "displayName": "DIAG-APPINS: Enable logging by category group audit for app insights to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-APPINS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:56.5008034Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-11T14:04:45.4620974Z"
    },
    "mode": "All",
    "name": "DIAG-APPINS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.insights/components",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "allLogs",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "microsoft.insights/components/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "allLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:56.315974+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-11T14:04:45.445581+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for API management",
    "displayName": "DIAG-APIM: Enable logging by category group audit for API management to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-APIM-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:56.5745337Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:54:20.9130256Z"
    },
    "mode": "All",
    "name": "DIAG-APIM-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.ApiManagement/service/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:56.490068+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:54:20.895965+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for logic app",
    "displayName": "DIAG-LGC: Enable logging by category for logic app to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-LGC-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:56.6228436Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:55:52.2320127Z"
    },
    "mode": "All",
    "name": "DIAG-LGC-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "FunctionAppLogs",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Web/sites/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "FunctionAppLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:56.527667+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:55:52.210743+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for machine learning",
    "displayName": "DIAG-AAS: Enable logging by category engine for Analysis Services to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-AAS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:57.2070299Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-15T13:56:28.1506907Z"
    },
    "mode": "All",
    "name": "DIAG-AAS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Analysis/servers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "Engine",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Analysis/servers/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "Engine",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:57.038026+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-15T13:56:28.125988+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for cognitive search",
    "displayName": "DIAG-ACS: Enable logging by category group audit for cognitive search to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ACS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:15:57.5834682Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-15T13:53:24.4098062Z"
    },
    "mode": "All",
    "name": "DIAG-ACS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Search/searchServices",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Search/searchServices/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:15:57.388029+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-15T13:53:24.368112+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for sql",
    "displayName": "DIAG-SQL: Enable logging by category group audit for sql to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-SQL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:17:29.5661762Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-11T11:59:18.3174218Z"
    },
    "mode": "All",
    "name": "DIAG-SQL-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers/databases",
            "field": "type"
          },
          {
            "notequals": "master",
            "value": "[last(split(field('id'),'/'))]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "parentResource": {
                  "value": "[split(field('id'),'/')[8]]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "parentResource": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('parentResource'),'/',parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:17:29.442863+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-11T11:59:18.322908+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for app configuration",
    "displayName": "DIAG-AAC: Enable logging by category group audit for app configuration to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-AAC-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:17:29.8841357Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-06T14:39:56.1041737Z"
    },
    "mode": "All",
    "name": "DIAG-AAC-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AppConfiguration/configurationStores",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.AppConfiguration/configurationStores/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:17:29.828884+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-06T14:39:56.093988+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for synapse",
    "displayName": "DIAG-ASA: Enable logging by category group audit for synapse to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ASA-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:17:29.9626453Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:54:21.0529547Z"
    },
    "mode": "All",
    "name": "DIAG-ASA-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Synapse/workspaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Synapse/workspaces/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:17:29.858023+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:54:20.928478+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for machine learning",
    "displayName": "DIAG-AML: Enable logging by category group audit for machine learning to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-AML-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:17:30.1621344Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-12T16:48:45.0865601Z"
    },
    "mode": "All",
    "name": "DIAG-AML-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:17:30.115042+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-12T16:48:45.071999+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for pgsql flexible",
    "displayName": "DIAG-FLEX-PGSQL: Enable logging by category group audit for pgsql flexible to EventHub",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-FLEX-PGSQL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:17:30.7717358Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-12T13:41:24.4314393Z"
    },
    "mode": "All",
    "name": "DIAG-FLEX-PGSQL-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.DBforPostgreSQL/flexibleServers/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:17:30.651924+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-12T13:41:24.420795+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for machine learning",
    "displayName": "DIAG-ADX: Enable logging by category group audit for Data Explorer to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ADX-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:17:30.9394233Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:55:52.1208309Z"
    },
    "mode": "All",
    "name": "DIAG-ADX-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Kusto/clusters/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:17:30.763144+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:55:52.091073+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for service bus",
    "displayName": "DIAG-SBUS: Enable logging by category group audit for service bus to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-SBUS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:17:31.3795521Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:54:20.8458481Z"
    },
    "mode": "All",
    "name": "DIAG-SBUS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.ServiceBus/namespaces/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:17:31.269544+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:54:20.835762+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for sql flexible",
    "displayName": "DIAG-FLEX-SQL: Enable logging by category group audit for sql flexible to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-FLEX-SQL-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.0141179Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-13T13:09:04.1879639Z"
    },
    "mode": "All",
    "name": "DIAG-FLEX-SQL-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.DBforMySQL/flexibleServers/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:03.910414+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-13T13:09:04.164379+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using category groups to route logs to a Log Analytics workspace for Microsoft Purview:Security, ScanStatusLogEvents, DataSensitivityLogEvent",
    "displayName": "DIAG-PVW-sgct : Enable logging by category group for Microsoft Purview to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-PVW-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.3442492Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-15T13:58:00.3504832Z"
    },
    "mode": "All",
    "name": "DIAG-PVW-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Purview/accounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Purview/accounts/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].category",
                        "in": [
                          "Security",
                          "ScanStatusLogEvents",
                          "DataSensitivityLogEvent"
                        ]
                      },
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 3
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.241783+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-15T13:58:00.329526+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable logging by CoreAzureBackup and AddonAzureBackupPolicy category to Log Analytics",
    "displayName": "DIAG-RSV: Enable logging by CoreAzureBackup and AddonAzureBackupPolicy category to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-RSV-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.4638141Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-10T12:52:08.355438Z"
    },
    "mode": "All",
    "name": "DIAG-RSV-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "CoreAzureBackup",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.RecoveryServices/vaults/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "CoreAzureBackup",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.401685+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-10T12:52:08.341359+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for event grid",
    "displayName": "DIAG-EVG-TOPIC: Enable logging by category group audit for event grid topic to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-EVG-TOPIC-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.5331398Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:55:52.6984266Z"
    },
    "mode": "All",
    "name": "DIAG-EVG-TOPIC-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/topics",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.EventGrid/topics/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.404440+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:55:52.684588+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for web app",
    "displayName": "DIAG-WEBA: Enable logging by category for web app to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-WEBA-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.7071457Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-10T13:07:35.3137053Z"
    },
    "mode": "All",
    "name": "DIAG-WEBA-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "app*"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "AppServiceHTTPLogs",
                          "categoryGroup": null,
                          "enabled": true
                        },
                        {
                          "category": "AppServiceAuditLogs",
                          "categoryGroup": null,
                          "enabled": true
                        },
                        {
                          "category": "AppServiceIPSecAuditLogs",
                          "categoryGroup": null,
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Web/sites/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "AppServiceHTTPLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "AppServiceAuditLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "AppServiceIPSecAuditLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.621668+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-10T13:07:35.283423+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for data factory",
    "displayName": "DIAG-ADF:Enable logging by category group audit for data factory to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ADF-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.7643066Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-13T18:46:58.9764125Z"
    },
    "mode": "All",
    "name": "DIAG-ADF-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "TriggerRuns",
                          "enabled": true
                        },
                        {
                          "category": "PipelineRuns",
                          "enabled": true
                        },
                        {
                          "category": "ActivityRuns",
                          "enabled": true
                        },
                        {
                          "category": "SSISPackageExecutableStatistics",
                          "enabled": true
                        },
                        {
                          "category": "SSISPackageEventMessageContext",
                          "enabled": true
                        },
                        {
                          "category": "SSISPackageExecutionComponentPhases",
                          "enabled": true
                        },
                        {
                          "category": "SSISPackageExecutionDataStatistics",
                          "enabled": true
                        },
                        {
                          "category": "AirflowTaskLogs",
                          "enabled": true
                        },
                        {
                          "category": "AirflowWorkerLogs",
                          "enabled": true
                        },
                        {
                          "category": "AirflowDagProcessingLogs",
                          "enabled": true
                        },
                        {
                          "category": "AirflowSchedulerLogs",
                          "enabled": true
                        },
                        {
                          "category": "AirflowWebLogs",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.DataFactory/factories/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category",
                        "in": [
                          "TriggerRuns",
                          "PipelineRuns",
                          "ActivityRuns",
                          "SSISPackageExecutableStatistics",
                          "SSISPackageEventMessageContext",
                          "SSISPackageExecutionComponentPhases",
                          "SSISPackageExecutionDataStatistics",
                          "AirflowTaskLogs",
                          "AirflowWorkerLogs",
                          "AirflowDagProcessingLogs",
                          "AirflowSchedulerLogs",
                          "AirflowWebLogs"
                        ]
                      }
                    ]
                  }
                },
                "equals": 12
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.668924+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-13T18:46:58.960847+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for storage account",
    "displayName": "DIAG-STO-Queue : Enable logging by category group audit for storage account queue to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-STO-Queue-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.7282959Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T13:04:16.3923702Z"
    },
    "mode": "All",
    "name": "DIAG-STO-Queue-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/queueServices",
            "field": "type"
          },
          {
            "equals": true,
            "value": "[if(equals(length(resourcegroup().managedBy),0),bool('true'),bool('false'))]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[split(field('id'),'/')[8]]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/default/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "StorageRead",
                          "enabled": true
                        },
                        {
                          "category": "StorageWrite",
                          "enabled": true
                        },
                        {
                          "category": "StorageDelete",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Storage/storageAccounts/queueServices/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageDelete",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageRead",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageWrite",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.550713+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T13:04:16.382415+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace: ModelsOperation, DigitalTwinsOperation",
    "displayName": "DIAG-DTW: Enable logging by category group audit for digital twins to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-DTW-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:04.9535931Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:55:52.7545019Z"
    },
    "mode": "All",
    "name": "DIAG-DTW-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DigitalTwins/digitalTwinsInstances",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "DigitalTwinsOperation",
                          "enabled": true
                        },
                        {
                          "category": "ModelsOperation",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.DigitalTwins/digitalTwinsInstances/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "anyOf": [
                          {
                            "equals": "DigitalTwinsOperation",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          },
                          {
                            "equals": "ModelsOperation",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          }
                        ]
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 2
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.740640+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:55:52.699728+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for vault",
    "displayName": "DIAG-VAULT: Enable logging by category for vault to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-VAULT-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:19:05.1426096Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-10T11:31:22.7249589Z"
    },
    "mode": "All",
    "name": "DIAG-VAULT-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:19:04.968056+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-10T11:31:22.732936+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for cognitive search",
    "displayName": "DIAG-ACOS: Enable logging by category group audit for cognitive search to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ACOS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:37.6832288Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-12T14:29:54.5437278Z"
    },
    "mode": "All",
    "name": "DIAG-ACOS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.CognitiveServices/accounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.CognitiveServices/accounts/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:37.586761+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-12T14:29:54.517494+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for app configuration",
    "displayName": "DIAG-EVH: Enable logging by category group audit for Event Hub to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-EVH-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.1328005Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-12T15:13:04.2432147Z"
    },
    "mode": "All",
    "name": "DIAG-EVH-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.EventHub/namespaces/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.035636+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-12T15:13:04.217601+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for event grid",
    "displayName": "DIAG-EVG-DOMAIN: Enable logging by category group audit for event grid domain to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-EVG-DOMAIN-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.1858066Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-15T13:53:24.5043752Z"
    },
    "mode": "All",
    "name": "DIAG-EVG-DOMAIN-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/domains",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.EventGrid/domains/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.089179+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-15T13:53:24.487688+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for storage account",
    "displayName": "DIAG-STO-Blob : Enable logging by category group audit for storage account Blob to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-STO-Blob-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.2517655Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T13:04:16.5014706Z"
    },
    "mode": "All",
    "name": "DIAG-STO-Blob-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/blobServices",
            "field": "type"
          },
          {
            "equals": true,
            "value": "[if(equals(length(resourcegroup().managedBy),0),bool('true'),bool('false'))]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[split(field('id'),'/')[8]]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'),  '/default/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "StorageRead",
                          "enabled": true
                        },
                        {
                          "category": "StorageWrite",
                          "enabled": true
                        },
                        {
                          "category": "StorageDelete",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Storage/storageAccounts/blobServices/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageDelete",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageRead",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageWrite",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.191890+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T13:04:16.478912+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for container registry",
    "displayName": "DIAG-ACR: Enable logging by category group audit for container registry to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-ACR-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.3132471Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-13T14:20:07.4115341Z"
    },
    "mode": "All",
    "name": "DIAG-ACR-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.ContainerRegistry/registries/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.135058+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-13T14:20:07.386579+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for cognitive search",
    "displayName": "DIAG-GFNA: Enable logging by category group audit for cognitive search to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-GFNA-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.3449695Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:55:52.5613539Z"
    },
    "mode": "All",
    "name": "DIAG-GFNA-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Dashboard/grafana/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.243151+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:55:52.540914+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for storage account",
    "displayName": "DIAG-STO-Table : Enable logging by category group audit for storage account Table to Log Analytics ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-STO-Table-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.4590518Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T13:04:16.5542052Z"
    },
    "mode": "All",
    "name": "DIAG-STO-Table-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/tableServices",
            "field": "type"
          },
          {
            "equals": true,
            "value": "[if(equals(length(resourcegroup().managedBy),0),bool('true'),bool('false'))]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[split(field('id'),'/')[8]]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/default/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "StorageRead",
                          "enabled": true
                        },
                        {
                          "category": "StorageWrite",
                          "enabled": true
                        },
                        {
                          "category": "StorageDelete",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Storage/storageAccounts/tableServices/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageDelete",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageRead",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageWrite",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.344803+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T13:04:16.548369+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for event grid",
    "displayName": "DIAG-EVG-SYSTEMTOPICS: Enable logging by category group audit for event grid system topics to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-EVG-SYSTEMTOPICS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.4629062Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-12T16:23:12.7655491Z"
    },
    "mode": "All",
    "name": "DIAG-EVG-SYSTEMTOPICS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/systemTopics",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "allLogs",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.EventGrid/systemTopics/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "allLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.368696+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-12T16:23:12.731582+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for function app",
    "displayName": "DIAG-FUNC: Enable logging by FunctionAppLogs for function app to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-FUNC-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:38.6365824Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-11T15:14:10.468769Z"
    },
    "mode": "All",
    "name": "DIAG-FUNC-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "FunctionAppLogs",
                          "categoryGroup": null,
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Web/sites/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "FunctionAppLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.452398+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-11T15:14:10.384307+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for storage account",
    "displayName": "DIAG-STO-File : Enable logging by category group audit for storage account File to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-STO-File-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:20:39.1353127Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T13:04:16.6216064Z"
    },
    "mode": "All",
    "name": "DIAG-STO-File-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices",
            "field": "type"
          },
          {
            "equals": true,
            "value": "[if(equals(length(resourcegroup().managedBy),0),bool('true'),bool('false'))]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[split(field('id'),'/')[8]]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/default/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "StorageRead",
                          "enabled": true
                        },
                        {
                          "category": "StorageWrite",
                          "enabled": true
                        },
                        {
                          "category": "StorageDelete",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Storage/storageAccounts/fileServices/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageDelete",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageRead",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "StorageWrite",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:20:38.504399+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T13:04:16.601106+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for container registry",
    "displayName": "DIAG-IOT-HUB: Enable logging by category group audit for iot hub to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-IOT-HUB-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:22:11.9001478Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:54:21.0115055Z"
    },
    "mode": "All",
    "name": "DIAG-IOT-HUB-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Devices/IotHubs/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:22:11.699560+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:54:20.965257+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for cosmosDB",
    "displayName": "DIAG-COS: Enable logging by category group audit for cosmosDB to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-COS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-01T16:22:12.0750752Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:54:20.9120234Z"
    },
    "mode": "All",
    "name": "DIAG-COS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "audit",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-01T16:22:11.968657+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:54:20.885603+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " Disable Azure Key Vault public access (APPE/APPI)",
    "displayName": "VAULT-24-ENFORCE - Disable Azure Key Vault public access (APPE/APPI)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-24-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-08T15:55:43.8857879Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-14T14:44:31.2799728Z"
    },
    "mode": "All",
    "name": "VAULT-24-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTypeValue": {
        "allowedValues": null,
        "defaultValue": "APPIO",
        "metadata": null,
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "accessPolicies": {
                  "value": "[field('Microsoft.Keyvault/vaults/accessPolicies')]"
                },
                "keyVault": {
                  "value": "[field('name')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "skufamily": {
                  "value": "[field('Microsoft.KeyVault/vaults/sku.family')]"
                },
                "skuname": {
                  "value": "[field('Microsoft.KeyVault/vaults/sku.name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "accessPolicies": {
                    "type": "array"
                  },
                  "keyVault": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "skufamily": {
                    "type": "string"
                  },
                  "skuname": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2023-07-01",
                    "location": "[parameters('location')]",
                    "name": "[parameters('keyVault')]",
                    "properties": {
                      "accessPolicies": "[parameters('accessPolicies')]",
                      "enableSoftDelete": true,
                      "publicNetworkAccess": "Disabled",
                      "sku": {
                        "family": "[parameters('skufamily')]",
                        "name": "[parameters('skuname')]"
                      },
                      "tenantId": "e339bd4b-2e3b-4035-a452-2112d502f2ff"
                    },
                    "type": "Microsoft.KeyVault/vaults"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "anyOf": [
              {
                "equals": "[parameters('spokeTypeValue')]",
                "value": "[toUpper(subscription().tags['spoke_type'])]"
              },
              {
                "equals": "recover",
                "field": "Microsoft.Keyvault/vaults/createMode"
              },
              {
                "equals": "Disabled",
                "field": "Microsoft.KeyVault/vaults/publicNetworkAccess"
              }
            ]
          },
          "name": "[field('name')]",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.KeyVault/vaults"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-08T15:55:43.804664+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-14T14:44:31.265761+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable PostgreSQL server parameters connection_throttling",
    "displayName": "DB-FLEX-PGSQL-08- Enable PostgreSQL server parameters connection_throttling",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-08-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T16:14:53.8782843Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-08-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "in": [
                  "PRD",
                  "PROD",
                  "PPR",
                  "PPRD",
                  "PPROD",
                  "PREPROD"
                ],
                "value": "[toUpper(subscription().tags['sg_Subscription_Environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPR",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PREPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value"
          },
          "name": "connection_throttle.enable",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T16:14:53.824232+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T16:14:53.824232+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable PostgreSQL server parameters log_disconnections",
    "displayName": "DB-FLEX-PGSQL-07- Enable PostgreSQL server parameters log_disconnections",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-07-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T16:14:54.1238612Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-07-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "in": [
                  "PRD",
                  "PROD",
                  "PPR",
                  "PPRD",
                  "PPROD",
                  "PREPROD"
                ],
                "value": "[toUpper(subscription().tags['sg_Subscription_Environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPR",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PREPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value"
          },
          "name": "log_disconnections",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T16:14:54.031176+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T16:14:54.031176+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable PostgreSQL server parameters log_connections",
    "displayName": "DB-FLEX-PGSQL-06- Enable PostgreSQL server parameters log_connections",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-06-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T16:14:54.4448126Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-06-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "in": [
                  "PRD",
                  "PROD",
                  "PPR",
                  "PPRD",
                  "PPROD",
                  "PREPROD"
                ],
                "value": "[toUpper(subscription().tags['sg_Subscription_Environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPR",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PREPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value"
          },
          "name": "log_connections",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T16:14:54.081955+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T16:14:54.081955+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Configure Windows Machines to be associated with a Data Collection Rule or a Data Collection Endpoint. Adaptation of eab1f514-22e3-42e3-9a1f-e1dc9199355c.",
    "displayName": "AMA-06: Regional scope - Configure Windows Machines to be associated with a Data Collection Rule or a Data Collection Endpoint",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AMA-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-03T13:02:24.4001682Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.4356344Z"
    },
    "mode": "All",
    "name": "AMA-06-sgct",
    "parameters": {
      "dcrResourceId": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourceGroups/rg-security-governance-prd-XXXX/providers/Microsoft.Insights/dataCollectionRules/dcr-security-governance-prd-XXXX",
        "metadata": {
          "assignPermissions": null,
          "description": "Resource Id of the Data Collection Rule or the Data Collection Endpoint to be applied on the Linux machines in scope.",
          "displayName": "Data Collection Rule Resource Id or Data Collection Endpoint Resource Id",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy.",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfWindowsImageIdToInclude": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of machine images that have supported Windows OS to add to scope. Example values: '/subscriptions/<subscriptionId>/resourceGroups/YourResourceGroup/providers/Microsoft.Compute/images/ContosoStdImage'",
          "displayName": "Additional Windows Machine Images",
          "strongType": null
        },
        "type": "Array"
      },
      "resourceType": {
        "allowedValues": [
          "Microsoft.Insights/dataCollectionRules",
          "Microsoft.Insights/dataCollectionEndpoints"
        ],
        "defaultValue": "Microsoft.Insights/dataCollectionRules",
        "metadata": {
          "assignPermissions": null,
          "description": "Either a Data Collection Rule (DCR) or a Data Collection Endpoint (DCE)",
          "displayName": "Resource Type",
          "portalReview": "true",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "in": [
              "australiacentral",
              "australiacentral2",
              "australiaeast",
              "australiasoutheast",
              "brazilsouth",
              "brazilsoutheast",
              "canadacentral",
              "canadaeast",
              "centralindia",
              "centralus",
              "eastasia",
              "eastus",
              "eastus2",
              "eastus2euap",
              "francecentral",
              "francesouth",
              "germanywestcentral",
              "japaneast",
              "japanwest",
              "jioindiawest",
              "koreacentral",
              "koreasouth",
              "northcentralus",
              "northeurope",
              "norwayeast",
              "norwaywest",
              "southafricanorth",
              "southcentralus",
              "southeastasia",
              "southindia",
              "swedencentral",
              "switzerlandnorth",
              "switzerlandwest",
              "uaenorth",
              "uksouth",
              "ukwest",
              "westcentralus",
              "westeurope",
              "westindia",
              "westus",
              "westus2",
              "westus3"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "Microsoft.HybridCompute/machines",
                    "field": "type"
                  },
                  {
                    "equals": "Windows",
                    "field": "Microsoft.HybridCompute/machines/osName"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "equals": "Microsoft.Compute/virtualMachines",
                        "field": "type"
                      },
                      {
                        "equals": "Microsoft.Compute/virtualMachineScaleSets",
                        "field": "type"
                      }
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageId",
                        "in": "[parameters('listOfWindowsImageIdToInclude')]"
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "WindowsServer",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2008-R2-SP1*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2012-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2016-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2019-*"
                              },
                              {
                                "field": "Microsoft.Compute/imageSku",
                                "like": "2022-*"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "WindowsServerSemiAnnual",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "field": "Microsoft.Compute/imageSKU",
                            "in": [
                              "Datacenter-Core-1709-smalldisk",
                              "Datacenter-Core-1709-with-Containers-smalldisk",
                              "Datacenter-Core-1803-with-Containers-smalldisk",
                              "Datacenter-Core-1809-with-Containers-smalldisk"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsServerHPCPack",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "WindowsServerHPCPack",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftSQLServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "anyOf": [
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2016"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2016-BYOL"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2012R2"
                              },
                              {
                                "field": "Microsoft.Compute/imageOffer",
                                "like": "*-WS2012R2-BYOL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftRServer",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "MLServer-WS2016",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftVisualStudio",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "field": "Microsoft.Compute/imageOffer",
                            "in": [
                              "VisualStudio",
                              "Windows"
                            ]
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftDynamicsAX",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "Dynamics",
                            "field": "Microsoft.Compute/imageOffer"
                          },
                          {
                            "equals": "Pre-Req-AX7-Onebox-U8",
                            "field": "Microsoft.Compute/imageSKU"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "microsoft-ads",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "windows-data-science-vm",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "equals": "MicrosoftWindowsDesktop",
                            "field": "Microsoft.Compute/imagePublisher"
                          },
                          {
                            "equals": "Windows-1*",
                            "field": "Microsoft.Compute/imageOffer"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "dcrResourceId": {
                  "value": "[parameters('dcrResourceId')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                },
                "resourceType": {
                  "value": "[parameters('resourceType')]"
                },
                "type": {
                  "value": "[field('type')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "dcrResourceId": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  },
                  "resourceType": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.compute/virtualmachinescalesets'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.Compute/virtualMachineScaleSets/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dcrResourceType')))]",
                    "name": "[variables('dcrAssociationName')]",
                    "properties": {
                      "dataCollectionRuleId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  },
                  {
                    "apiVersion": "2021-04-01",
                    "condition": "[and(equals(toLower(parameters('type')), 'microsoft.hybridcompute/machines'), equals(parameters('resourceType'), variables('dceResourceType')))]",
                    "name": "[variables('dceAssociationName')]",
                    "properties": {
                      "dataCollectionEndpointId": "[replace(parameters('dcrResourceId'), 'XXXX', parameters('location'))]"
                    },
                    "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('resourceName'))]",
                    "type": "Microsoft.Insights/dataCollectionRuleAssociations"
                  }
                ],
                "variables": {
                  "dceAssociationName": "configurationAccessEndpoint",
                  "dceResourceType": "Microsoft.Insights/dataCollectionEndpoints",
                  "dcrAssociationName": "[concat('assoc-', uniqueString(concat(parameters('resourceName'), replace(parameters('dcrResourceId'), 'XXXX', parameters('location')))))]",
                  "dcrResourceType": "Microsoft.Insights/dataCollectionRules"
                }
              }
            }
          },
          "evaluationDelay": "AfterProvisioning",
          "existenceCondition": {
            "anyOf": [
              {
                "contains": "[substring(parameters('dcrResourceId'),0,93)]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionRuleId"
              },
              {
                "contains": "[substring(parameters('dcrResourceId'),0,93)]",
                "field": "Microsoft.Insights/dataCollectionRuleAssociations/dataCollectionEndpointId"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "type": "Microsoft.Insights/dataCollectionRuleAssociations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-03T13:02:24.310427+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.377484+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The 'sg_Resource_ControlTower_Confidentiality' must be set to one of the following values: C0, C1 or C2",
    "displayName": "GFNA-TAG-02: The 'sg_Resource_ControlTower_Confidentiality' must be set to one of the following values: C0, C1 or C2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-TAG-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:03:18.0719457Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "GFNA-TAG-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "C0",
          "C1",
          "C2"
        ],
        "defaultValue": [
          "C0",
          "C1",
          "C2"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:03:17.974164+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-06T14:03:17.974164+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deterministic outbound IP feature must be enabled",
    "displayName": "GFNA-09: Deterministic outbound IP feature must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:04:49.9934907Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "GFNA-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "field": "Microsoft.Dashboard/grafana/deterministicOutboundIP",
            "notEquals": "Enabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:04:49.892869+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-06T14:04:49.892869+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Zone redundancy must be enabled",
    "displayName": "GFNA-12: Zone redundancy must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:04:49.9584887Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-30T15:40:07.4425077Z"
    },
    "mode": "All",
    "name": "GFNA-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "field": "Microsoft.Dashboard/grafana/zoneRedundancy",
            "notEquals": "Enabled"
          },
          {
            "in": [
              "A2",
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:04:49.842493+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-30T15:40:07.414785+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The 'sg_Resource_ControlTower_Profile' name tag must be set to 'private'",
    "displayName": "GFNA-TAG-01: The 'sg_Resource_ControlTower_Profile' name tag must be set to 'private'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-TAG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:04:50.0138416Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "GFNA-TAG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "private"
        ],
        "defaultValue": [
          "private"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:04:49.884954+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-06T14:04:49.884954+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Data sources must be accessed using a system-assigned managed identity only",
    "displayName": "GFNA-05: Data sources must be accessed using a system-assigned managed identity only",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/GFNA-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-06T14:04:50.2586639Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "GFNA-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Dashboard/grafana",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-06T14:04:50.196868+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-06T14:04:50.196868+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "All VMs must be attached to a Maintenance Configuration object",
    "displayName": "VM-PA-01 - All VMs must be attached to a Maintenance Configuration object",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-PA-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-08-08T09:22:16.3542239Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VM-PA-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Compute/virtualMachines",
              "Microsoft.HybridCompute/machines"
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "Microsoft.Compute/virtualMachines",
                    "field": "type"
                  },
                  {
                    "notEquals": "AutomaticByPlatform",
                    "value": "[if(equals(tolower(field('Microsoft.Compute/virtualMachines/storageProfile.osDisk.osType')), 'windows'), field('Microsoft.Compute/virtualMachines/osProfile.windowsConfiguration.patchSettings.assessmentMode'), field('Microsoft.Compute/virtualMachines/osProfile.linuxConfiguration.patchSettings.assessmentMode'))]"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Microsoft.HybridCompute/machines",
                    "field": "type"
                  },
                  {
                    "notEquals": "AutomaticByPlatform",
                    "value": "[if(equals(tolower(field('Microsoft.HybridCompute/machines/osName')), 'windows'), field('Microsoft.HybridCompute/machines/osProfile.windowsConfiguration.patchSettings.assessmentMode'), field('Microsoft.HybridCompute/machines/osProfile.linuxConfiguration.patchSettings.assessmentMode'))]"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-08-08T09:22:16.256027+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-08T09:22:16.256027+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Flexible server is the only authorized server deployment",
    "displayName": "DB-FLEX-PGSQL-15 : Flexible server is the only authorized server deployment",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:08:19.6860601Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL",
            "field": "type"
          },
          {
            "field": "type",
            "notEquals": "*/flexibleServers"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:08:19.544708+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:08:19.544708+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SSL connection must be enabled for Azure Database for PostgreSQL servers",
    "displayName": "DB-FLEX-PGSQL-01 - SSL connection must be enabled for Azure Database for PostgreSQL servers",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:08:19.7203629Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value"
          },
          "name": "require_secure_transport",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:08:19.532082+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:08:19.532082+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable PostgreSQL server parameters connection_throttling",
    "displayName": "DB-FLEX-PGSQL-08- Enable PostgreSQL server parameters connection_throttling",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:08:19.8361378Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value"
          },
          "name": "connection_throttle.enable",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:08:19.771083+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:08:19.771083+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public network access must be disabled for PostgreSQL Flexible servers",
    "displayName": "DB-FLEX-PGSQL-02 - Public network access must be disabled for PostgreSQL Flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:08:19.8566361Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:08:19.796789+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:08:19.796789+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace",
    "displayName": "DB-FLEX-PGSQL-04 - Diagnostics settings must be enabled and exported to GDI management",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:08:19.9331651Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:08:19.909385+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:08:19.909385+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable PostgreSQL server parameters log_connections",
    "displayName": "DB-FLEX-PGSQL-06- Enable PostgreSQL server parameters log_connections",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:08:20.0011754Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value"
          },
          "name": "log_connections",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:08:19.919907+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:08:19.919907+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable PostgreSQL server parameters log_disconnections",
    "displayName": "DB-FLEX-PGSQL-07- Enable PostgreSQL server parameters log_disconnections",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:09:51.9384665Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value"
          },
          "name": "log_disconnections",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:09:51.793574+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:09:51.793574+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Authentication method must be set to 'PostgreSQL and Azure Active Directory authentication'",
    "displayName": "DB-FLEX-PGSQL-10 - Authentication method must be set to 'PostgreSQL and Azure Active Directory authentication'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:09:52.4794675Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.DBForPostgreSql/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "exists": true,
                "field": "Microsoft.DBForPostgreSql/flexibleServers/authConfig.activeDirectoryAuth"
              },
              {
                "exists": true,
                "field": "Microsoft.DBForPostgreSql/flexibleServers/authConfig.passwordAuth"
              }
            ]
          },
          {
            "anyof": [
              {
                "field": "Microsoft.DBForPostgreSql/flexibleServers/authConfig.activeDirectoryAuth",
                "notequals": "Enabled"
              },
              {
                "field": "Microsoft.DBForPostgreSql/flexibleServers/authConfig.passwordAuth",
                "notequals": "Enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:09:52.342114+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:09:52.342114+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In server paramaters, pgaudit.log must be set to 'WRITE,ROLE,MISC' on production environment",
    "displayName": "DB-FLEX-PGSQL-16 : In server paramaters, pgaudit.log must be set to 'WRITE,ROLE,MISC' on production environment",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-16-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:09:52.7443742Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-16-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "EvaluationDelay": "AfterProvisioningSuccess",
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "fullNamePostGreSQL": {
                  "value": "[field('fullName')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "fullNamePostGreSQL": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2022-05-01-preview",
                    "name": "[concat(parameters('fullNamePostGreSQL'), '/pgaudit.log')]",
                    "properties": {
                      "source": "user-override",
                      "value": "MISC,ROLE,WRITE"
                    },
                    "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "allof": [
              {
                "contains": "MISC",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "contains": "ROLE",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "contains": "WRITE",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "count": {
                  "value": [
                    "none",
                    "read",
                    "function",
                    "ddl",
                    "all"
                  ],
                  "where": {
                    "contains": "[current()]",
                    "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
                  }
                },
                "equals": 0
              }
            ]
          },
          "name": "pgaudit.log",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:09:52.573801+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:09:52.573801+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "NSG must not contain any-to-any or internet access rules",
    "displayName": "DB-FLEX-PGSQL-17 : NSG must not contain any-to-any or internet access rules",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-17-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:09:52.8990819Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-17-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Disabled",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "exists": true,
            "field": "Microsoft.DBForPostgreSql/flexibleServers/network.delegatedSubnetResourceId"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Network/networkSecurityGroups/subnets[*]",
                  "where": {
                    "equals": "[field('Microsoft.DBForPostgreSql/flexibleServers/network.delegatedSubnetResourceId')]",
                    "field": "Microsoft.Network/networkSecurityGroups/subnets[*].id"
                  }
                },
                "greater": 0
              },
              {
                "count": {
                  "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
                  "where": {
                    "allof": [
                      {
                        "equals": "Allow",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].access"
                      },
                      {
                        "anyof": [
                          {
                            "equals": "Internet",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix"
                          },
                          {
                            "equals": "Internet",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix"
                          },
                          {
                            "allof": [
                              {
                                "equals": "*",
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix"
                              },
                              {
                                "equals": "*",
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "equals": 0
              }
            ]
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Network/networkSecurityGroups"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:09:52.718847+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:09:52.718847+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "TLS 1.2 must be selected on the SQL server",
    "displayName": "DB-FLEX-PGSQL-03 : TLS 1.2 must be selected on the SQL server",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:09:52.9214059Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-03-sgct",
    "parameters": {
      "allowedValues": {
        "allowedValues": [
          "TLSv1.2",
          "TLSv1.3"
        ],
        "defaultValue": [
          "TLSv1.2",
          "TLSv1.3"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed TLS Versions",
          "displayName": "TLS Value",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/configurations/value",
            "in": "[parameters('allowedValues')]"
          },
          "name": "ssl_min_protocol_version",
          "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:09:52.755135+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:09:52.755135+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In server paramaters, pgaudit.log must be set to 'WRITE,ROLE,MISC' on production environment",
    "displayName": "DB-FLEX-PGSQL-16b : In server paramaters, pgaudit.log must be set to 'WRITE,ROLE,MISC' on production environment",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-16b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-24T16:09:53.0779227Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-16b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "field": "type"
          },
          {
            "equals": "pgaudit.log",
            "field": "name"
          },
          {
            "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value",
            "notequals": "none"
          },
          {
            "anyof": [
              {
                "Notcontains": "MISC",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "Notcontains": "ROLE",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "Notcontains": "WRITE",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "notequals": true,
                "value": "[equals(length(field('Microsoft.DBForPostgreSql/flexibleServers/configurations/value')),15)]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T16:09:52.850088+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T16:09:52.850088+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Extensions are no authorized except the extension 'VECTOR' on APPI and Lzv1",
    "displayName": "DB-FLEX-PGSQL-24 : Extensions are no authorized except the extension 'VECTOR' on APPI and Lzv1",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-24-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-22T10:11:33.019904Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-17T16:26:50.0770089Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-24-sgct",
    "parameters": {
      "NotAuthorizedSpokes": {
        "allowedValues": null,
        "defaultValue": [
          "APPE",
          "APPIO"
        ],
        "metadata": null,
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "field": "type"
          },
          {
            "equals": "azure.extensions",
            "field": "name"
          },
          {
            "exists": true,
            "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
          },
          {
            "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value",
            "notEquals": ""
          },
          {
            "anyOf": [
              {
                "in": "[parameters('NotAuthorizedSpokes')]",
                "value": "[subscription().tags[parameters('tagSub')]]"
              },
              {
                "contains": "POSTGRES_FDW",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "contains": "TDS_FDW",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "contains": "ORACLE_FDW",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "contains": "LOGIN_HOOK",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              },
              {
                "contains": "DBLINK",
                "field": "Microsoft.DBForPostgreSql/flexibleServers/configurations/value"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-22T10:11:32.950676+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-17T16:26:50.038451+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for Stream Analytics",
    "displayName": "DIAG-DPS: Deploy Diagnostic Settings to enable logging by category group for StreamAnalyticsJob to Log Analytics workspace",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-DPS-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-12T14:07:48.5400385Z",
      "policyManagement": {
        "communicationDate": "2024-11-05T00:00:00.6702647Z",
        "effectDate": "2024-11-12T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T10:54:20.865617Z"
    },
    "mode": "All",
    "name": "DIAG-DPS-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/ProvisioningServices",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "categoryGroup": "allLogs",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Devices/ProvisioningServices/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "allLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-12T14:07:48.467389+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T10:54:20.852872+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Prevent sub owner from delete diagnostic settings",
    "displayName": "Sentinel-01-Diag - Prevent subsciption owner from delete diagnostic settings",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/Sentinel-01-Diag-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T08:57:45.1675078Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:55:29.0410652Z"
    },
    "mode": "All",
    "name": "Sentinel-01-Diag-sgct",
    "parameters": {
      "DiagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "subscriptionToLa",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Sentinel Diagnostic Setting Name",
          "displayName": "DiagnosticSettingName",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "DenyAction"
        ],
        "defaultValue": "DenyAction",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Deny Diagnostic removal",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Insights/diagnosticSettings",
            "field": "type"
          },
          {
            "field": "name",
            "match": "[parameters('DiagnosticSettingName')]"
          }
        ]
      },
      "then": {
        "details": {
          "actionNames": [
            "delete"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T08:57:44.930964+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:55:29.006543+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Prevent sub owner from modify diagnostic settings",
    "displayName": "Sentinel-01-Diag-V2 - Prevent subsciption owner from modify diagnostic settings",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/Sentinel-01-Diag-V2-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T08:57:45.1822585Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:03:16.6329513Z"
    },
    "mode": "All",
    "name": "Sentinel-01-Diag-V2-sgct",
    "parameters": {
      "DiagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "subscriptionToLa",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Sentinel Diagnostic Setting Name",
          "displayName": "DiagnosticSettingName",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Deny Modification",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Insights/diagnosticSettings",
            "field": "type"
          },
          {
            "field": "name",
            "match": "[parameters('DiagnosticSettingName')]"
          },
          {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "equals": "false",
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                  }
                },
                "greater": 0
              },
              {
                "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
                "notEquals": "/subscriptions/e45678c8-c0cf-4188-8d90-cebac8052b4d/resourcegroups/rg-001-853-prod-frc-sentinel/providers/microsoft.operationalinsights/workspaces/law-001-853-prod-frc-sentinel"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T08:57:45.024711+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:03:16.495143+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deploys the diagnostic settings for Activity Log to stream to a regional Event Hub when any Subscription which is missing this diagnostic settings is created or updated.",
    "displayName": "DIAG-SETTINGS-EVENTHUB - Deploy Diagnostic Settings for Activity Log to Event Hub",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-SETTINGS-EVENTHUB-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T12:26:44.3647284Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:41:26.5419995Z"
    },
    "mode": "All",
    "name": "DIAG-SETTINGS-EVENTHUB-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the Policy.",
          "displayName": "Effects",
          "strongType": null
        },
        "type": "String"
      },
      "eventHubName": {
        "allowedValues": null,
        "defaultValue": "evn-002-853-prod-frc-sentinel",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The Event Hub Name",
          "displayName": "Event Hub Name",
          "strongType": null
        },
        "type": "String"
      },
      "eventHubRuleId": {
        "allowedValues": null,
        "defaultValue": null,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The Event Hub authorization rule Id for Azure Diagnostics. The authorization rule needs to be at Event Hub namespace level. e.g. /subscriptions/{subscription Id}/resourceGroups/{resource group}/providers/Microsoft.EventHub/namespaces/{Event Hub namespace}/authorizationrules/{authorization rule}",
          "displayName": "Event Hub Authorization Rule Id",
          "strongType": null
        },
        "type": "String"
      },
      "profileName": {
        "allowedValues": null,
        "defaultValue": "Eventhub_profile_SIEM_POC",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The diagnostic settings profile name",
          "displayName": "Profile name",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Resources/subscriptions",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "DeploymentScope": "Subscription",
          "ExistenceCondition": {
            "allOf": [
              {
                "equals": "True",
                "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
              },
              {
                "equals": "[parameters('eventHubRuleId')]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[parameters('profileName')]",
                "field": "name"
              }
            ]
          },
          "ExistenceScope": "Subscription",
          "deployment": {
            "location": "eastus",
            "properties": {
              "mode": "incremental",
              "parameters": {
                "eventHubName": {
                  "value": "[parameters('eventHubName')]"
                },
                "eventHubRuleId": {
                  "value": "[parameters('eventHubRuleId')]"
                },
                "profileName": {
                  "value": "[parameters('profileName')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "eventHubName": {
                    "type": "String"
                  },
                  "eventHubRuleId": {
                    "type": "String"
                  },
                  "profileName": {
                    "type": "String"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-05-01-preview",
                    "location": "global",
                    "name": "[parameters('profileName')]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[parameters('eventHubRuleId')]",
                      "eventHubName": "[parameters('eventHubName')]",
                      "logs": [
                        {
                          "category": "Administrative",
                          "enabled": true
                        },
                        {
                          "category": "Security",
                          "enabled": true
                        },
                        {
                          "category": "ServiceHealth",
                          "enabled": true
                        },
                        {
                          "category": "Alert",
                          "enabled": true
                        },
                        {
                          "category": "Recommendation",
                          "enabled": true
                        },
                        {
                          "category": "Policy",
                          "enabled": true
                        },
                        {
                          "category": "Autoscale",
                          "enabled": true
                        },
                        {
                          "category": "ResourceHealth",
                          "enabled": true
                        }
                      ]
                    },
                    "type": "Microsoft.Insights/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T12:26:44.210344+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:41:26.490453+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For spokes tagged 'APPI', 'sg_Resource_ControlTower_Profile' tag must be set to one of the following values : 'INTERNAL')",
    "displayName": "ILB-TAG-01: For spokes tagged 'APPI'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ILB-TAG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T14:54:05.488134Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:49:15.0277148Z"
    },
    "mode": "All",
    "name": "ILB-TAG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTag": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Spoke tag",
          "displayName": "spoke_type",
          "strongType": null
        },
        "type": "String"
      },
      "spokeValue": {
        "allowedValues": [
          "APPI"
        ],
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "INTERNAL"
        ],
        "defaultValue": [
          "INTERNAL"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/loadBalancers",
            "field": "type"
          },
          {
            "In": "[parameters('spokeValue')]",
            "value": "[subscription().tags[parameters('spokeTag')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T14:54:05.323970+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:49:14.993620+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "in any case specify which Integration Runtime was chosen (TAG Name='IntegrationRuntime', Value='AzureIR or SHIR')",
    "displayName": "ADF-TAG-02: specify which Integration Runtime with a tag",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-TAG-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T14:54:05.8107511Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-14T14:33:37.6860823Z"
    },
    "mode": "All",
    "name": "ADF-TAG-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "integrationRuntimeValues": {
        "allowedValues": [
          "Azure",
          "SHIR",
          "Azure/SHIR"
        ],
        "defaultValue": [
          "Azure",
          "SHIR",
          "Azure/SHIR"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagIntegrationRuntime": {
        "allowedValues": null,
        "defaultValue": "integrationRuntime",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "integrationRuntime",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagIntegrationRuntime'), ']')]",
            "notIn": "[parameters('integrationRuntimeValues')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T14:54:05.620845+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-14T14:33:37.673935+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For spokes tagged 'APPS', 'sg_Resource_ControlTower_Profile' tag must be set to one of the following values : 'INTERNAL')",
    "displayName": "ILB-TAG-04: For spokes tagged 'APPS')",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ILB-TAG-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T14:54:05.9880354Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:19:51.1322019Z"
    },
    "mode": "All",
    "name": "ILB-TAG-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTag": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Spoke tag",
          "displayName": "spoke_type",
          "strongType": null
        },
        "type": "String"
      },
      "spokeValue": {
        "allowedValues": [
          "APPS"
        ],
        "defaultValue": [
          "APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "INTERNAL"
        ],
        "defaultValue": [
          "INTERNAL"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/loadBalancers",
            "field": "type"
          },
          {
            "In": "[parameters('spokeValue')]",
            "value": "[subscription().tags[parameters('spokeTag')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T14:54:05.824014+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:19:51.038177+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Any to Any allow rules are not allowed",
    "displayName": "NSG-02-ENFORCE : Any to Any allow rules are not allowed",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/NSG-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:29:26.8446027Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:49:11.8594082Z"
    },
    "mode": "All",
    "name": "NSG-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/networkSecurityGroups/securityRules",
                "field": "type"
              },
              {
                "allOf": [
                  {
                    "equals": "Allow",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/access"
                  },
                  {
                    "equals": "Inbound",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction"
                  },
                  {
                    "anyOf": [
                      {
                        "equals": "*",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"
                      },
                      {
                        "equals": "Internet",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"
                      },
                      {
                        "equals": "*/0",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.Network/networkSecurityGroups/securityRules",
                "field": "type"
              },
              {
                "allOf": [
                  {
                    "equals": "Allow",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/access"
                  },
                  {
                    "equals": "Outbound",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction"
                  },
                  {
                    "anyOf": [
                      {
                        "equals": "*",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix"
                      },
                      {
                        "equals": "Internet",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix"
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix",
                        "like": "*/0"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:29:26.719314+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:49:11.774467+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny resources not compliant to SOC2 Type2",
    "displayName": "FOUNDATIONS-02-ENFORCE : Deny resources not compliant to SOC2 Type2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FOUNDATIONS-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:29:27.8725343Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-01-08T14:19:25.8359051Z"
    },
    "mode": "Indexed",
    "name": "FOUNDATIONS-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResourceTypesNotAllowed": {
        "allowedValues": null,
        "defaultValue": [
          "Microsoft.Blockchain/*",
          "Microsoft.Consumption/*",
          "Microsoft.DataBoxEdge/*",
          "Microsoft.DocumentDB/cassandraClusters/",
          "Microsoft.GuestConfiguration/*",
          "Microsoft.MachineLearning/*",
          "Microsoft.ResourceHealth/*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that cannot be deployed.",
          "displayName": "Not allowed resource types",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "in": "[parameters('listOfResourceTypesNotAllowed')]"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:29:27.703747+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-08T14:19:25.794446+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "VNET peering with a vnet non authorized (not in SGT Hub)",
    "displayName": "VNET-01-ENFORCE : VNET peering with a vnet non authorized",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VNET-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:29:28.1027925Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-01-09T11:39:14.1706872Z"
    },
    "mode": "All",
    "name": "VNET-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "field": "type"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-prod-frc-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-prod-frc-hub/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/740c06a4-663e-49ac-b0dc-5793fad79c04/resourceGroups/rgp-854-preprod-frc-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-preprod-frc-hub/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-prod-frc-dmzhub/providers/Microsoft.Network/virtualNetworks/vnet-854-prod-frc-dmzhub/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/740c06a4-663e-49ac-b0dc-5793fad79c04/resourceGroups/rgp-854-preprod-frc-dmzhub/providers/Microsoft.Network/virtualNetworks/vnet-854-preprod-frc-dmzhub/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-dev-eastus-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-dev-eastus-hub/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-dev-brazilsouth-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-dev-brazilsouth-hub/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/769d5c39-0fc3-4b2f-a9d7-b380ced0051b/resourceGroups/rg-gdi-pco01-prd-westeurope-core/providers/Microsoft.Network/virtualNetworks/vnet-gdi-pco01-prd-westeurope-core/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/5252d0de-0227-4f7f-a90a-c48ed86691c9/resourceGroups/rg-gdi-hub-prd-westeurope/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-westeurope/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/3fe1460a-2689-4e59-a08e-46a55d891daa/resourceGroups/rg-gdi-hub-prd-eastus/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-eastus/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/a558d3c7-a48f-48e1-9140-6337c7fbdb5d/resourceGroups/rg-gdi-hub-prd-centralindia/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-centralindia/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/4b359daf-cdce-4ec8-9fc5-ee824a24f819/resourceGroups/rg-gdi-hub-prd-brazilsouth/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-brazilsouth/virtualNetworkPeerings/*"
          },
          {
            "field": "id",
            "notLike": "/subscriptions/3b890c4a-a1a4-4385-83fd-7f3bf03915ae/resourceGroups/rg-gdi-hub-prd-southeastasia/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-southeastasia/virtualNetworkPeerings/*"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notContains": "[subscription().id]"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-prod-frc-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-prod-frc-hub"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/740c06a4-663e-49ac-b0dc-5793fad79c04/resourceGroups/rgp-854-preprod-frc-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-preprod-frc-hub"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-prod-frc-dmzhub/providers/Microsoft.Network/virtualNetworks/vnet-854-prod-frc-dmzhub"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/740c06a4-663e-49ac-b0dc-5793fad79c04/resourceGroups/rgp-854-preprod-frc-dmzhub/providers/Microsoft.Network/virtualNetworks/vnet-854-preprod-frc-dmzhub"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-dev-eastus-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-dev-eastus-hub"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/resourceGroups/rgp-854-dev-brazilsouth-hub/providers/Microsoft.Network/virtualNetworks/vnet-854-dev-brazilsouth-hub"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/5252d0de-0227-4f7f-a90a-c48ed86691c9/resourceGroups/rg-gdi-hub-prd-westeurope/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-westeurope"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/3fe1460a-2689-4e59-a08e-46a55d891daa/resourceGroups/rg-gdi-hub-prd-eastus/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-eastus"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/a558d3c7-a48f-48e1-9140-6337c7fbdb5d/resourceGroups/rg-gdi-hub-prd-centralindia/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-centralindia"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/4b359daf-cdce-4ec8-9fc5-ee824a24f819/resourceGroups/rg-gdi-hub-prd-brazilsouth/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-brazilsouth"
          },
          {
            "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
            "notEquals": "/subscriptions/3b890c4a-a1a4-4385-83fd-7f3bf03915ae/resourceGroups/rg-gdi-hub-prd-southeastasia/providers/Microsoft.Network/virtualNetworks/vnet-gdi-hub-prd-southeastasia"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:29:28.000628+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-09T11:39:14.138162+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Allow only WAF IP addresses & No Internet access configured (any-to-any)",
    "displayName": "COS-DB-02-ENFORCE : Allow only WAF IP addresses & No Internet access configured (any-to-any)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:29:28.5470149Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:29:10.9469939Z"
    },
    "mode": "All",
    "name": "COS-DB-02-ENFORCE-sgct",
    "parameters": {
      "BluecoatIP": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled"
              },
              {
                "count": {
                  "field": "Microsoft.DocumentDB/databaseAccounts/ipRules[*]",
                  "where": {
                    "field": "Microsoft.DocumentDB/databaseAccounts/ipRules[*].ipAddressOrRange",
                    "notIn": "[parameters('BluecoatIP')]"
                  }
                },
                "notEquals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:29:28.422459+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:29:10.932888+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Network ACL default action must be Deny (Networking --> Selected networks)",
    "displayName": "STO-37-ENFORCE : Network ACL default action must be Deny",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-37-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:31:03.8496219Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:52:19.3168082Z"
    },
    "mode": "All",
    "name": "STO-37-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Storage/storageAccounts",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                },
                "sku": {
                  "value": "[field('Microsoft.Storage/storageAccounts/sku.name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2019-06-01",
                    "dependsOn": [],
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[parameters('name')]",
                    "properties": {
                      "allowBlobPublicAccess": false,
                      "networkAcls": {
                        "bypass": "AzureServices",
                        "defaultAction": "Deny",
                        "ipRules": [],
                        "virtualNetworkRules": []
                      }
                    },
                    "sku": {
                      "name": "[parameters('sku')]"
                    },
                    "type": "Microsoft.Storage/storageAccounts"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "equals": "Deny",
            "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction"
          },
          "name": "[field('name')]",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Storage/storageAccounts"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:31:03.735909+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:52:19.273010+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny NSG rules that allow all inbound traffic",
    "displayName": "NSG-03-ENFORCE : Deny NSG rules that allow all inbound traffic",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/NSG-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:31:05.4450178Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:53:52.5592549Z"
    },
    "mode": "All",
    "name": "NSG-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups/securityRules",
            "field": "type"
          },
          {
            "allOf": [
              {
                "equals": "Allow",
                "field": "Microsoft.Network/networkSecurityGroups/securityRules/access"
              },
              {
                "equals": "Inbound",
                "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction"
              },
              {
                "anyOf": [
                  {
                    "equals": "*",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"
                  },
                  {
                    "not": {
                      "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                      "notEquals": "*"
                    }
                  }
                ]
              },
              {
                "anyOf": [
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix",
                    "in": [
                      "*",
                      "Internet"
                    ]
                  },
                  {
                    "not": {
                      "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                      "notIn": [
                        "*",
                        "Internet"
                      ]
                    }
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:31:05.314130+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:53:52.530562+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all cases, Any to any network rule must be denied.",
    "displayName": "EVT-HUB-02-ENFORCE :  Any to any network (All networks ) rule must be denied",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/EVT-HUB-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:32:36.1917755Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:01:42.88006Z"
    },
    "mode": "All",
    "name": "EVT-HUB-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces/networkRuleSets",
            "field": "type"
          },
          {
            "equals": "Allow",
            "field": "Microsoft.EventHub/namespaces/networkRuleSets/default.defaultAction"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.EventHub/namespaces/networkRuleSets/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:32:36.033742+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:01:42.847594+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Subnets must have a Network Security Group (NSG) attached.",
    "displayName": "NSG-01-ENFORCE : Subnets must have a Network Security Group (NSG) attached.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/NSG-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:34:12.5381627Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:57:06.4650772Z"
    },
    "mode": "All",
    "name": "NSG-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks/subnets",
            "field": "type"
          },
          {
            "exists": "false",
            "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:34:12.441024+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:57:06.439553+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In use case 2 and 3, tag sg_Resource_ControlTower_Profile == 'SGNet' or 'DMZ' or 'APPI', no vnet rules must be configured",
    "displayName": "VAULT-ENFORCE-18 - If profile is 'SGNET' or 'DMZ' or 'APPI', no vnet rules must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-18-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:34:14.8606451Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:13:42.53495Z"
    },
    "mode": "All",
    "name": "VAULT-18-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValuesAPPI": {
        "allowedValues": [
          "APPI"
        ],
        "defaultValue": "APPI",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value for DMZ",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValuesDMZ": {
        "allowedValues": [
          "DMZ"
        ],
        "defaultValue": "DMZ",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value for DMZ",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValuesSGNET": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value for SGNET",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "[toUpper(parameters('networkProfileValuesSGNET'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagResourceProfile'), ']')))]"
              },
              {
                "equals": "[toUpper(parameters('networkProfileValuesDMZ'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagResourceProfile'), ']')))]"
              },
              {
                "equals": "[toUpper(parameters('networkProfileValuesAPPI'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagResourceProfile'), ']')))]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction",
                "notEquals": "Deny"
              },
              {
                "count": {
                  "field": "Microsoft.KeyVault/vaults/networkAcls.virtualNetworkRules[*]"
                },
                "notequals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:34:14.691047+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:13:42.496959+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Allow access only via SSL",
    "displayName": "CFR-02-ENFORCE : Allow access only via SSL",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/CFR-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:34:15.5298006Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:49:14.9200327Z"
    },
    "mode": "All",
    "name": "CFR-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Cache/redis",
            "field": "type"
          },
          {
            "equals": "true",
            "field": "Microsoft.Cache/Redis/enableNonSslPort"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:34:15.222307+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:49:14.884235+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS must not allow all origins",
    "displayName": "STO-06-ENFORCE : CORS must not allow all origins (Blob Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:34:15.5814822Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:46:09.3754695Z"
    },
    "mode": "All",
    "name": "STO-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Storage/storageAccounts",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-06-01",
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/default')]",
                    "properties": {
                      "cors": {
                        "corsRules": []
                      }
                    },
                    "type": "Microsoft.Storage/storageAccounts/blobServices"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "exists": "true",
                "field": "Microsoft.Storage/storageAccounts/blobServices/cors.corsRules[*]"
              },
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/blobServices/cors.corsRules[*]",
                  "where": {
                    "contains": "*",
                    "field": "Microsoft.Storage/storageAccounts/blobServices/cors.corsRules[*].allowedOrigins[*]"
                  }
                },
                "equals": 0
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Storage/storageAccounts/blobServices"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:34:15.456690+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:46:09.338739+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IP rules must be set to allow traffic only from WAF Imperva",
    "displayName": "STO-39-ENFORCE : IP rules must be set to allow traffic only from WAF Imperva",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-39-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:34:15.7735451Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:41:26.4882132Z"
    },
    "mode": "All",
    "name": "STO-39-ENFORCE-sgct",
    "parameters": {
      "WAFImpervaIP": {
        "allowedValues": null,
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "authenticatedPublicBlob"
        ],
        "defaultValue": [
          "authenticatedPublicBlob"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "exists": true,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                "in": "[parameters('networkProfileValues')]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value",
                "notIn": "[parameters('WAFImpervaIP')]"
              },
              {
                "equals": "Allow",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:34:15.659812+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:41:26.459206+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Confidentiality=C2' or if 'sg_Resource_ControlTower_Profile=SGNET'. Private endpoint must be activated in the subnet and No Vnet rule must be configured.",
    "displayName": "DB-PGSQL-10-ENFORCE : For SGNET or C2 data, Private endpoint must be activated and No Vnet rule must be configured. ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-PGSQL-10-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:35:45.9879842Z",
      "securityCenter": {
        "RemediationDescription": "Please create at leaste one Approuved Private endpoint  and ensure that public nework access is disabled, to understand the remediation, Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:53:56.1390012Z"
    },
    "mode": "All",
    "name": "DB-PGSQL-10-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConfName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the sg_Resource_ControlTower_Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagConfValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag for cong tag",
          "displayName": "Tag sg_Resource_ControlTower_Confidentiality Value",
          "strongType": null
        },
        "type": "String"
      },
      "tagProfileName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagProfileValue": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag value for sg_Resource_ControlTower_Profile",
          "displayName": "sg_Resource_ControlTower_Profile value",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/servers",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "[toUpper(parameters('tagConfValue'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagConfName'), ']')))]"
              },
              {
                "equals": "[toUpper(parameters('tagProfileValue'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagProfileName'), ']')))]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-12-01",
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[parameters('name')]",
                    "properties": {
                      "publicNetworkAccess": "disabled"
                    },
                    "type": "Microsoft.DBforPostgreSQL/servers"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "not": {
              "anyOf": [
                {
                  "equals": "Enabled",
                  "field": "Microsoft.DBforPostgreSQL/servers/publicNetworkAccess"
                },
                {
                  "count": {
                    "field": "Microsoft.Sql/servers/privateEndpointConnections[*]"
                  },
                  "notEquals": 0
                }
              ]
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.DBforPostgreSQL/servers"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:35:45.879545+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:53:56.093302+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing data transport layer, enforce the required version of Transport Layer Security (TLS) to 1.2",
    "displayName": "STO-04-ENFORCE : the required version of Transport Layer Security (TLS) must be 1.2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:35:48.9552886Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:50:47.498883Z"
    },
    "mode": "All",
    "name": "STO-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
            "notEquals": "TLS1_2"
          }
        ]
      },
      "then": {
        "details": {
          "conflictEffect": "Audit",
          "operations": [
            {
              "field": "Microsoft.Storage/storageAccounts/minimumTlsVersion",
              "operation": "addOrReplace",
              "value": "TLS1_2"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:35:48.785828+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:50:47.453853+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "No Vnet rule must configured for C2 data or SGNET use case",
    "displayName": "STO-33-ENFORCE : No Vnet rule must configured for C2 data or SGNET",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-33-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:35:50.1404592Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.9556338Z"
    },
    "mode": "All",
    "name": "STO-33-ENFORCE-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "defaultValue": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagConf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                    "in": "[parameters('networkProfileValues')]"
                  },
                  {
                    "equals": "[parameters('confValue')]",
                    "field": "[concat('tags[', parameters('tagConf'), ']')]"
                  }
                ]
              },
              {
                "equals": "SGNETBlob",
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "exists": false,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "allOf": [
                  {
                    "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                    "in": "[parameters('networkProfileValues')]"
                  },
                  {
                    "exists": false,
                    "field": "[concat('tags[', parameters('tagConf'), ']')]"
                  }
                ]
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*]"
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:35:50.035894+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.736889+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "min TLS version must be 1.2",
    "displayName": "DB-PGSQL-03-ENFORCE : min TLS version must be 1.2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-PGSQL-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:35:50.2372813Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:24:28.354159Z"
    },
    "mode": "All",
    "name": "DB-PGSQL-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Append"
        ],
        "defaultValue": "Append",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/servers",
            "field": "type"
          },
          {
            "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
            "notEquals": "TLS1_2"
          }
        ]
      },
      "then": {
        "details": [
          {
            "field": "Microsoft.DBforPostgreSQL/servers/minimalTlsVersion",
            "value": "TLS1_2"
          }
        ],
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:35:50.129592+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:24:28.197883+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " If SGNET Profile or C2 Confidentiality only private endpoints are allowed (no Vnet allowed)",
    "displayName": "DB-SQL-13-ENFORCE : If SGNET Profile or C2 Confidentiality only private endpoints are allowed (no Vnet allowed)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-13-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:37:24.0546997Z",
      "securityCenter": {
        "RemediationDescription": "Please create at leaste one Approuved Private endpoint  and ensure that public nework access is disabled, Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:39:58.5068463Z"
    },
    "mode": "All",
    "name": "DB-SQL-13-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConfName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the sg_Resource_ControlTower_Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagConfValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag for cong tag",
          "displayName": "Tag sg_Resource_ControlTower_Confidentiality Value",
          "strongType": null
        },
        "type": "String"
      },
      "tagProfileName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagProfileValue": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag value for sg_Resource_ControlTower_Profile",
          "displayName": "sg_Resource_ControlTower_Profile value",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "[toUpper(parameters('tagConfValue'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagConfName'), ']')))]"
              },
              {
                "equals": "[toUpper(parameters('tagProfileValue'))]",
                "value": "[toUpper(field(concat('tags[', parameters('tagProfileName'), ']')))]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2020-11-01-preview",
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[parameters('name')]",
                    "properties": {
                      "publicNetworkAccess": "disabled"
                    },
                    "type": "Microsoft.Sql/servers"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "not": {
              "anyOf": [
                {
                  "equals": "Enabled",
                  "field": "Microsoft.Sql/servers/publicNetworkAccess"
                },
                {
                  "count": {
                    "field": "Microsoft.Sql/servers/privateEndpointConnections[*]"
                  },
                  "equals": 0
                }
              ]
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Sql/servers"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:37:23.958870+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:39:58.419795+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Check network filtering rules (only validated Public IP addresses - WAF IPs)",
    "displayName": "SBUS-13-ENFORCE : Check network filtering rules (only validated Public IP addresses - WAF IPs)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-13-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:37:24.7640651Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:44:36.5389725Z"
    },
    "mode": "All",
    "name": "SBUS-13-ENFORCE-sgct",
    "parameters": {
      "BlueCoatIP": {
        "allowedValues": null,
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of Blue Coat Ips",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces/networkrulesets",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.ServiceBus/namespaces/networkrulesets/ipRules[*]",
              "where": {
                "allOf": [
                  {
                    "field": "Microsoft.ServiceBus/namespaces/networkrulesets/ipRules[*].ipMask",
                    "notIn": "[parameters('BlueCoatIP')]"
                  }
                ]
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:37:24.583761+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:44:36.503500+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IP forwarding must be disabled on NIC",
    "displayName": "VM-09-ENFORCE : IP forwarding must be disabled on NIC",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-09-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:38:56.6688769Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:43:03.7097567Z"
    },
    "mode": "All",
    "name": "VM-09-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkInterfaces",
            "field": "type"
          },
          {
            "equals": "true",
            "field": "Microsoft.Network/networkInterfaces/enableIpForwarding"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:38:56.522287+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:43:03.683901+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In use case 1, if data confidentiality = C2 or SGNET,  all authorized network must be from Private endpoint & No vnet rules must be configured",
    "displayName": "COS-DB-10-ENFORCE : In use case 1, if data = C2 or SGNET, No vnet rules must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-10-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:38:59.643965Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:09:06.579407Z"
    },
    "mode": "All",
    "name": "COS-DB-10-ENFORCE-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfileSgnet": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfileValue": {
        "allowedValues": [
          "INTERNET_Application"
        ],
        "defaultValue": "INTERNET_Application",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      },
      "tagResourceProfileValueSgnet": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "[parameters('tagResourceProfileValue')]",
                    "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
                  },
                  {
                    "equals": "[parameters('confValue')]",
                    "field": "[concat('tags[', parameters('tagConf'), ']')]"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "[parameters('tagResourceProfileValue')]",
                    "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
                  },
                  {
                    "exists": false,
                    "field": "[concat('tags[', parameters('tagConf'), ']')]"
                  }
                ]
              },
              {
                "equals": "[parameters('tagResourceProfileValueSgnet')]",
                "field": "[concat('tags[', parameters('tagResourceProfileSgnet'), ']')]"
              },
              {
                "exists": false,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.DocumentDB/databaseAccounts/virtualNetworkRules[*]"
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:38:59.506699+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:09:06.554917+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For 'SGNETADLS' 'IoTADLS' 'InternetADLS' , 'AuthenticatedPrivateTable' allow only WAF IP for Admin access",
    "displayName": "STO-38-ENFORCE : IP rules must be set to allow traffic only from WAF Imperva",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-38-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:39:00.0436732Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.4037361Z"
    },
    "mode": "All",
    "name": "STO-38-ENFORCE-sgct",
    "parameters": {
      "BlueCoatIP": {
        "allowedValues": null,
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS",
          "AuthenticatedPrivateTable"
        ],
        "defaultValue": [
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS",
          "AuthenticatedPrivateTable"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "exists": true,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                "in": "[parameters('networkProfileValues')]"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]",
              "where": {
                "allOf": [
                  {
                    "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value",
                    "notIn": "[parameters('BlueCoatIP')]"
                  }
                ]
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:38:59.928571+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.231873+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "V1 SKU is forbidden",
    "displayName": "AGW-08-ENFORCE: V1 SKU is forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-08-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:33.1844852Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:42:59.4270184Z"
    },
    "mode": "All",
    "name": "AGW-08-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/applicationGateways",
            "field": "type"
          },
          {
            "equals": "Standard",
            "field": "Microsoft.Network/applicationGateways/sku.tier"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:33.085870+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:42:59.247237+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System-assigned Managed Identities must be used to interact with azure resources",
    "displayName": "AUT-10-ENFORCE: System-assigned Managed Identities must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AUT-10-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:33.9122263Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:58:35.0397078Z"
    },
    "mode": "All",
    "name": "AUT-10-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Automation/automationAccounts",
            "field": "type"
          },
          {
            "notequals": "SystemAssigned",
            "value": "[field('identity.type')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:33.726504+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:58:35.021080+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Automation account variables should be encrypted",
    "displayName": "AUT-02-ENFORCE: Automation account variables should be encrypted",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AUT-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:35.3309263Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:50:45.2359875Z"
    },
    "mode": "All",
    "name": "AUT-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Automation/automationAccounts/variables",
            "field": "type"
          },
          {
            "field": "Microsoft.Automation/automationAccounts/variables/isEncrypted",
            "notEquals": "true"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:35.148390+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:50:45.203170+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Storage account accepts only https connection",
    "displayName": "STO-03-ENFORCE : Storage account accepts only https connection",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:35.4704894Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:58:35.0599922Z"
    },
    "mode": "All",
    "name": "STO-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The effect determines what happens when the policy rule is evaluated to match",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "false",
            "field": "Microsoft.Storage/storageAccounts/isNfsV3Enabled"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "less": "2019-04-01",
                    "value": "[requestContext().apiVersion]"
                  },
                  {
                    "exists": "false",
                    "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
                  }
                ]
              },
              {
                "equals": "false",
                "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "conflictEffect": "Audit",
          "operations": [
            {
              "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
              "operation": "addOrReplace",
              "value": true
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:35.320269+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:58:35.036707+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "TLS minimum version must 1.2",
    "displayName": "CFR-03-ENFORCE : TLS minimum version must 1.2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/CFR-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:35.5631458Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:06:28.7564896Z"
    },
    "mode": "All",
    "name": "CFR-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Append"
        ],
        "defaultValue": "Append",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Cache/redis",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "true",
                "field": "Microsoft.Cache/Redis/enableNonSslPort"
              },
              {
                "field": "Microsoft.Cache/Redis/minimumTlsVersion",
                "notEquals": "1.2"
              }
            ]
          }
        ]
      },
      "then": {
        "details": [
          {
            "field": "Microsoft.Cache/Redis/minimumTlsVersion",
            "value": "1.2"
          }
        ],
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:35.414018+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:06:28.556150+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IP rules must be set to Deny traffic from Internet",
    "displayName": "STO-11-ENFORCE : IP rules must be set to Deny traffic from Internet",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-11-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:42:08.307969Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:00:09.1028496Z"
    },
    "mode": "All",
    "name": "STO-11-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "publicBlob",
          "authenticatedPrivateBlob",
          "SGNETBlob",
          "SGNETADLS",
          "InternetFile",
          "InternetQueue"
        ],
        "defaultValue": [
          "publicBlob",
          "authenticatedPrivateBlob",
          "SGNETBlob",
          "SGNETADLS",
          "InternetFile",
          "InternetQueue"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "exists": false,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                "in": "[parameters('networkProfileValues')]"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
            },
            "notequals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:42:08.180746+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:00:09.059374+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny all classic resources",
    "displayName": "FOUDATIONS-01-ENFORCE : Deny all classic resources",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FOUNDATIONS-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:42:09.1145199Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:42:59.4615512Z"
    },
    "mode": "Indexed",
    "name": "FOUNDATIONS-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "like": "Microsoft.Classic*"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:42:09.008824+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:42:59.434749+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If sg_Resource_ControlTower_Confidentiality=C2, sg_Resource_ControlTower_Profile must not be INTERNET_ALTERNATIVE",
    "displayName": "STMA-04-ENFORCE : if C2, do not use use case INTERNET_ALTERNATIVE",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STMA-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:42:09.3360643Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:41:31.0854841Z"
    },
    "mode": "All",
    "name": "STMA-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagNameconf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagNameprofile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValueconf": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      },
      "tagValueprofile": {
        "allowedValues": [
          "INTERNET_ALTERNATIVE"
        ],
        "defaultValue": "INTERNET_ALTERNATIVE",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.StreamAnalytics/streamingjobs",
            "field": "type"
          },
          {
            "equals": "[parameters('tagValueconf')]",
            "field": "[concat('tags[', parameters('tagNameconf'), ']')]"
          },
          {
            "equals": "[parameters('tagValueprofile')]",
            "field": "[concat('tags[', parameters('tagNameprofile'), ']')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:42:09.196325+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:41:31.051925+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Weak cipher suite should be disabled",
    "displayName": "AGW-09-ENFORCE: Weak cipher suite should be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-09-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:42:09.5344028Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:04:50.2677236Z"
    },
    "mode": "All",
    "name": "AGW-09-ENFORCE-sgct",
    "parameters": {
      "cipherAllowed": {
        "allowedValues": [
          "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
          "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
        ],
        "defaultValue": [
          "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
          "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",
          "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",
          "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256",
          "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of allowed cipher suites",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Modify",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/applicationGateways",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/applicationGateways/sslPolicy.cipherSuites[*]",
              "where": {
                "field": "Microsoft.Network/applicationGateways/sslPolicy.cipherSuites[*]",
                "notIn": "[parameters('cipherAllowed')]"
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:42:09.399452+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:04:50.236476+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Authentications to the service must use System Managed Identities",
    "displayName": "ACOS-02-ENFORCE: Authentications to the service must use System Managed Identities ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACOS-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:43:48.3853366Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.1897013Z"
    },
    "mode": "All",
    "name": "ACOS-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.CognitiveServices/accounts",
            "field": "type"
          },
          {
            "field": "kind",
            "notEquals": "OpenAI"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:43:48.181820+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.158811+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In use case 1, tag 'sg_Resource_ControlTower_Profile' == 'Internet', for data < C2, VNet rules on resource must allow traffic only from vNets of the same subscription",
    "displayName": "VAULT-19-ENFORCE : VNet rules must allow flow only from vNets of the same subscription",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-19-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:43:49.2107219Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:18:18.8973644Z"
    },
    "mode": "All",
    "name": "VAULT-19-ENFORCE-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C0",
          "C1",
          "C2"
        ],
        "defaultValue": [
          "C0",
          "C1",
          "C2"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "Internet"
        ],
        "defaultValue": "Internet",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "string"
      },
      "tagConf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "equals": "[parameters('networkProfileValues')]",
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('confValue')]"
          },
          {
            "count": {
              "field": "Microsoft.KeyVault/vaults/networkAcls.virtualNetworkRules[*]"
            },
            "greater": 0
          },
          {
            "field": "Microsoft.KeyVault/vaults/networkAcls.virtualNetworkRules[*].id",
            "notcontains": "[subscription().id]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:43:49.088079+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:18:18.875970+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR by adding in ADF EncryptionMethod=1 in the connection string (in the Linked Service)",
    "displayName": "ADF-07-ENFORCE: Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:43:49.3797058Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:46:09.2807071Z"
    },
    "mode": "All",
    "name": "ADF-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories/linkedservices",
            "field": "type"
          },
          {
            "allOf": [
              {
                "equals": "Oracle",
                "field": "Microsoft.DataFactory/factories/linkedservices/type"
              },
              {
                "NotContains": "EncryptionMethod=1",
                "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:43:49.197553+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:46:09.057468+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Anonymous access denied if tag sg_Resource_ControlTower_Profile NOT EQUALS publicBlob",
    "displayName": "STO-07-ENFORCE : Anonymous access denied if tag sg_Resource_ControlTower_Profile NOT EQUALS publicBlob",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:43:49.8275643Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-16T13:25:15.3223323Z"
    },
    "mode": "All",
    "name": "STO-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The effect determines what happens when the policy rule is evaluated to match",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "publicBlob"
        ],
        "defaultValue": [
          "publicBlob"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags not involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
            "notIn": "[parameters('networkProfileValues')]"
          },
          {
            "field": "id",
            "notContains": "/resourceGroups/databricks-rg-"
          },
          {
            "not": {
              "equals": "false",
              "field": "Microsoft.Storage/storageAccounts/allowBlobPublicAccess"
            }
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:43:49.713087+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-16T13:25:15.312121+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS must not allow all origins",
    "displayName": "STO-28-ENFORCE : CORS must not allow all origins (File Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-28-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:43:50.1384045Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:35:15.7436533Z"
    },
    "mode": "All",
    "name": "STO-28-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Storage/storageAccounts",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-06-01",
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/default')]",
                    "properties": {
                      "cors": {
                        "corsRules": []
                      }
                    },
                    "type": "Microsoft.Storage/storageAccounts/fileServices"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "exists": "true",
                "field": "Microsoft.Storage/storageAccounts/fileServices/cors.corsRules[*]"
              },
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/fileServices/cors.corsRules[*]",
                  "where": {
                    "contains": "*",
                    "field": "Microsoft.Storage/storageAccounts/fileServices/cors.corsRules[*].allowedOrigins[*]"
                  }
                },
                "equals": 0
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Storage/storageAccounts/fileServices"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:43:50.025590+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:35:15.713436+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Confidentiality', configure Network Access Control, Default Action 'Deny'. Public network must be on 'None' Private Endpoint configuration 'Client connection / REST API / Server connection'",
    "displayName": "SNLR-03-ENFORCE : If C2 data, Default Action 'Deny'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SNLR-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:45:26.3293011Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:32:09.9886987Z"
    },
    "mode": "All",
    "name": "SNLR-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "sg_Resource_ControlTower_Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "valueConf": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of sg_Resource_ControlTower_Confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.SignalRService/SignalR",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                },
                "sku": {
                  "value": "[field('Microsoft.SignalRService/SignalR/sku.name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2018-10-01",
                    "dependsOn": [],
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[parameters('name')]",
                    "properties": {
                      "networkACLs": {
                        "defaultAction": "Deny",
                        "privateEndpoints": [],
                        "publicNetwork": {
                          "Deny": null,
                          "allow": [
                            "ServerConnection",
                            "ClientConnection",
                            "RESTAPI"
                          ]
                        }
                      },
                      "publicNetworkAccess": "disabled"
                    },
                    "sku": {
                      "name": "[parameters('sku')]"
                    },
                    "type": "Microsoft.SignalRService/SignalR"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "not": {
              "allOf": [
                {
                  "equals": "[toUpper(parameters('valueConf'))]",
                  "value": "[toUpper(field(concat('tags[', parameters('tagConf'), ']')))]"
                },
                {
                  "anyOf": [
                    {
                      "equals": "Enabled",
                      "field": "Microsoft.SignalRService/SignalR/publicNetworkAccess"
                    },
                    {
                      "equals": "Allow",
                      "field": "Microsoft.SignalRService/SignalR/networkACLs.defaultAction"
                    },
                    {
                      "count": {
                        "field": "Microsoft.SignalRService/SignalR/networkACLs.publicNetwork.allow[*]"
                      },
                      "notEquals": 3
                    },
                    {
                      "field": "Microsoft.SignalRService/SignalR/networkACLs.publicNetwork.Deny",
                      "notEquals": ""
                    },
                    {
                      "count": {
                        "field": "Microsoft.SignalRService/SignalR/networkACLs.privateEndpoints[*]",
                        "where": {
                          "contains": "Trace",
                          "field": "Microsoft.SignalRService/SignalR/networkACLs.privateEndpoints[*].allow[*]"
                        }
                      },
                      "notEquals": 0
                    }
                  ]
                }
              ]
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.SignalRService/SignalR"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:45:26.182965+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:32:09.949915+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS must not allow all origins",
    "displayName": "STO-05-ENFORCE : CORS must not allow all origins (Queue Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:45:26.8555686Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:53:52.6523944Z"
    },
    "mode": "All",
    "name": "STO-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Storage/storageAccounts",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-06-01",
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/default')]",
                    "properties": {
                      "cors": {
                        "corsRules": []
                      }
                    },
                    "type": "Microsoft.Storage/storageAccounts/queueServices"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "exists": "true",
                "field": "Microsoft.Storage/storageAccounts/queueServices/cors.corsRules[*]"
              },
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/queueServices/cors.corsRules[*]",
                  "where": {
                    "contains": "*",
                    "field": "Microsoft.Storage/storageAccounts/queueServices/cors.corsRules[*].allowedOrigins[*]"
                  }
                },
                "equals": 0
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Storage/storageAccounts/queueServices"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:45:26.698594+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:53:52.624318+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing access control, in all case, the SQL server admin (AAD) must be an A93, A94, A95, A96, A98 or AZYEL account",
    "displayName": "DB-SQL-03 : ENFORCE: The SQL server admin (AAD) must not be a standard account",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:45:27.164338Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:03:16.5563617Z"
    },
    "mode": "All",
    "name": "DB-SQL-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers",
            "field": "type"
          },
          {
            "exists": true,
            "field": "Microsoft.Sql/servers/administrators"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "A93"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "A94"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "A95"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "A96"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "A98"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "AZYEL"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "AZGRE"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "AZRED"
          },
          {
            "field": "Microsoft.Sql/servers/administrators.login",
            "notContains": "A89"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:45:26.917349+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:03:16.510771+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Firewall rules must not allow all network",
    "displayName": "VAULT-01-ENFORCE : Firewall rules must not allow all network ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:45:27.3035872Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:42:59.5128466Z"
    },
    "mode": "All",
    "name": "VAULT-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "equals": "Allow",
            "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:45:27.136103+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:42:59.482478+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS must not allow all origins",
    "displayName": "STO-29-ENFORCE : CORS must not allow all origins (Table Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-29-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:47:02.8602327Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:29:11.154188Z"
    },
    "mode": "All",
    "name": "STO-29-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Storage/storageAccounts",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "kind": {
                  "value": "[field('kind')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-06-01",
                    "kind": "[parameters('kind')]",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/default')]",
                    "properties": {
                      "cors": {
                        "corsRules": []
                      }
                    },
                    "type": "Microsoft.Storage/storageAccounts/tableServices"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "exists": "true",
                "field": "Microsoft.Storage/storageAccounts/tableServices/cors.corsRules[*]"
              },
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/tableServices/cors.corsRules[*]",
                  "where": {
                    "contains": "*",
                    "field": "Microsoft.Storage/storageAccounts/tableServices/cors.corsRules[*].allowedOrigins[*]"
                  }
                },
                "equals": 0
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Storage/storageAccounts/tableServices"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:47:02.746829+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:29:11.042273+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Soft delete must be enabled on Key Vault",
    "displayName": "VAULT-07-ENFORCE : Soft delete must be enabled on Key Vault",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:47:03.84093Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-12T16:00:32.2548296Z"
    },
    "mode": "All",
    "name": "VAULT-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "field": "Microsoft.KeyVault/vaults/createMode",
            "notEquals": "recover"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.KeyVault/vaults/enableSoftDelete"
              },
              {
                "equals": "false",
                "field": "Microsoft.KeyVault/vaults/enableSoftDelete"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:47:03.715593+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-12T16:00:32.234970+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Market place images are not allowed",
    "displayName": "VM-06 - Market place images are not allowed",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:47:03.9239608Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:01:42.8494138Z"
    },
    "mode": "All",
    "name": "VM-06-ENFORCE-sgct",
    "parameters": {
      "approvedImages": {
        "allowedValues": [
          "Saint Gobain"
        ],
        "defaultValue": "Saint Gobain",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Approved Images",
          "displayName": "Approved Images",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Compute/virtualMachines",
              "Microsoft.Compute/VirtualMachineScaleSets"
            ]
          },
          {
            "allOf": [
              {
                "not": {
                  "field": "Microsoft.Compute/imagePublisher",
                  "like": "[parameters('approvedImages')]"
                }
              },
              {
                "exists": true,
                "field": "Microsoft.Compute/imagePublisher"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:47:03.809411+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:01:42.785214+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "http listener and backends are forbidden",
    "displayName": "AGW-07-ENFORCE: http listener and backends are forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:47:04.3738576Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:44:36.4625203Z"
    },
    "mode": "All",
    "name": "AGW-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/applicationGateways",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "Http",
                "field": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection[*].protocol"
              },
              {
                "equals": "Http",
                "field": "Microsoft.Network/applicationGateways/httpListeners[*].protocol"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:47:04.215594+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:44:36.425371+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The API Firewall must only accept connections from others azure services in the same azure subscription / or identify IP range (for the source data push with json) / or On premises WAFIPs / or Partner VPN node",
    "displayName": "ACS-03-ENFORCE: Firewall must only accept authorized Ips",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACS-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:41.5062123Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:50:47.7622221Z"
    },
    "mode": "All",
    "name": "ACS-03-ENFORCE-sgct",
    "parameters": {
      "BluecoatIP": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Search/searchServices",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Search/searchServices/publicNetworkAccess"
          },
          {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Search/searchServices/networkRuleSet.ipRules[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Search/searchServices/networkRuleSet.ipRules[*].value",
                        "notIn": "[parameters('BluecoatIP')]"
                      }
                    ]
                  }
                },
                "notEquals": 0
              },
              {
                "count": {
                  "field": "Microsoft.Search/searchServices/networkRuleSet.ipRules[*]"
                },
                "equals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:41.373124+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:50:47.735123+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For C0 and C1 data VNet rules on resource must allow traffic only from vNets of the same subscription",
    "displayName": "STO-08-ENFORCE : allow traffic only from vNets of the same subscription",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-08-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:41.9924344Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.1498459Z"
    },
    "mode": "All",
    "name": "STO-08-ENFORCE-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C0",
          "C1"
        ],
        "defaultValue": [
          "C0",
          "C1"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "defaultValue": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagConf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
            "in": "[parameters('networkProfileValues')]"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('confValue')]"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*]"
            },
            "greater": 0
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                "notEquals": "Deny"
              },
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*].id",
                "notcontains": "[subscription().id]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:41.826258+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.106865+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In use case 1, if data confidentiality < C2,  all authorized network must be from Service endpoint & VNet rules must only allow flows from vNets of the same subscription",
    "displayName": "COS-DB-03-ENFORCE : In use case 1, if data < C2, only allow flows from vNets of the same subscription",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:42.5167426Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:55:27.0475892Z"
    },
    "mode": "All",
    "name": "COS-DB-03-ENFORCE-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C0",
          "C1"
        ],
        "defaultValue": [
          "C0",
          "C1"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfileValue": {
        "allowedValues": [
          "INTERNET_Application"
        ],
        "defaultValue": "INTERNET_Application",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "equals": "[parameters('tagResourceProfileValue')]",
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('confValue')]"
          },
          {
            "count": {
              "field": "Microsoft.DocumentDB/databaseAccounts/virtualNetworkRules[*]"
            },
            "greater": 0
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.DocumentDB/databaseAccounts/isVirtualNetworkFilterEnabled",
                "notEquals": "true"
              },
              {
                "field": "Microsoft.DocumentDB/databaseAccounts/virtualNetworkRules[*].id",
                "notcontains": "[subscription().id]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:42.341888+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:55:27.022361+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing network and security controls, no any-to-any rule must be configured, no internet access",
    "displayName": "DB-SQL-01-ENFORCE: No any-to-any rule must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:50:17.2824268Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:35:15.8778418Z"
    },
    "mode": "All",
    "name": "DB-SQL-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers/firewallRules",
            "field": "type"
          },
          {
            "allOf": [
              {
                "equals": "0.0.0.0",
                "field": "Microsoft.Sql/servers/firewallRules/startIpAddress"
              },
              {
                "equals": "255.255.255.255",
                "field": "Microsoft.Sql/servers/firewallRules/endIpAddress"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:50:17.124329+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:35:15.838447+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Cognitive Search service should use a SKU that supports private link (no free tier for production)",
    "displayName": "ACS-05-ENFORCE: no free tier for production",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACS-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:50:17.4555266Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:41:31.1210996Z"
    },
    "mode": "All",
    "name": "ACS-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "environmentValues": {
        "allowedValues": [
          "prd",
          "ppr"
        ],
        "defaultValue": [
          "prd",
          "ppr"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of Environment tags involved in this policy",
          "displayName": "Environment tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "tagEnvironment": {
        "allowedValues": [
          "sg_Subscription_Environment"
        ],
        "defaultValue": "sg_Subscription_Environment",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Environment tag",
          "displayName": "sg_Subscription_Environment",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Search/searchServices",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagEnvironment'), ']')]",
            "in": "[parameters('environmentValues')]"
          },
          {
            "equals": "free",
            "field": "Microsoft.Search/searchServices/sku.name"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:50:17.327459+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:41:31.083289+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Check network filtering rules (allow only selected network)",
    "displayName": "SBUS-08-ENFORCE : Check network filtering rules (allow only selected network)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-08-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:50:18.7996189Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:39:58.6284279Z"
    },
    "mode": "All",
    "name": "SBUS-08-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ServiceBus/namespaces",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-06-01-preview",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('name'), '/default')]",
                    "properties": {
                      "defaultAction": "Deny",
                      "ipRules": [
                        {
                          "action": "Allow",
                          "ipMask": "192.109.141.0/24"
                        },
                        {
                          "action": "Allow",
                          "ipMask": "192.109.143.0/24"
                        },
                        {
                          "action": "Allow",
                          "ipMask": "192.109.144.0/24"
                        },
                        {
                          "action": "Allow",
                          "ipMask": "192.109.145.0/24"
                        },
                        {
                          "action": "Allow",
                          "ipMask": "192.109.146.0/24"
                        },
                        {
                          "action": "Allow",
                          "ipMask": "192.109.147.0/24"
                        },
                        {
                          "action": "Allow",
                          "ipMask": "192.109.140.0/24"
                        }
                      ],
                      "publicNetworkAccess": "Enabled"
                    },
                    "type": "Microsoft.ServiceBus/namespaces/networkrulesets"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "not": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "equals": "Enabled",
                      "field": "Microsoft.ServiceBus/namespaces/networkRuleSets/publicNetworkAccess"
                    },
                    {
                      "count": {
                        "field": "Microsoft.ServiceBus/namespaces/networkRuleSets/ipRules[*]"
                      },
                      "equals": 0
                    }
                  ]
                },
                {
                  "equals": "Allow",
                  "field": "Microsoft.ServiceBus/namespaces/networkRuleSets/defaultAction"
                }
              ]
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.ServiceBus/namespaces/networkrulesets"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:50:18.655598+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:39:58.607309+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Soft-delete need to be enabled to protect backup data from accidental deletes",
    "displayName": "BKP-06-ENFORCE: Soft-delete need to be enabled to protect backup data from accidental deletes",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/BKP-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:50:18.9848466Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:00:09.0950371Z"
    },
    "mode": "All",
    "name": "BKP-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults/backupconfig",
            "field": "type"
          },
          {
            "equals": "Disabled",
            "field": "Microsoft.RecoveryServices/Vaults/backupconfig/vaultconfig.softDeleteFeatureState"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:50:18.858776+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:00:09.059374+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Verify that event grid subscription handlers belong to the same azure subscription",
    "displayName": "EVT-GRD-01-ENFORCE : event grid subscription handlers belong to the same azure subscription",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/EVT-GRD-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:51:53.7107631Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:33:42.7964632Z"
    },
    "mode": "All",
    "name": "EVT-GRD-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.AzureFunction.resourceId",
                "notContains": "[subscription().id]"
              },
              {
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.ServiceBusTopic.resourceId",
                "notContains": "[subscription().id]"
              },
              {
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.ServiceBusQueue.resourceId",
                "notContains": "[subscription().id]"
              },
              {
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.HybridConnection.resourceId",
                "notContains": "[subscription().id]"
              },
              {
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.StorageQueue.resourceId",
                "notContains": "[subscription().id]"
              },
              {
                "field": "Microsoft.EventGrid/systemTopics/eventSubscriptions/destination.EventHub.resourceId",
                "notContains": "[subscription().id]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:51:53.578624+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:33:42.691054+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public IP card are not allowed",
    "displayName": "VM-01-ENFORCE : Public IP card are not allowed",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VM-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:51:54.560884Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-28T11:02:29.1002341Z"
    },
    "mode": "All",
    "name": "VM-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkInterfaces",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*]",
              "where": {
                "allOf": [
                  {
                    "exists": true,
                    "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].publicIpAddress"
                  },
                  {
                    "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].publicIpAddress.id",
                    "notEquals": ""
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:51:54.453633+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-28T11:02:29.025031+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny user assigned identities",
    "displayName": "FOUNDATIONS-03-ENFORCE : Deny user assigned identities",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FOUNDATIONS-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:51:54.7552078Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.9513024Z"
    },
    "mode": "Indexed",
    "name": "FOUNDATIONS-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "field": "type"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:51:54.656763+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.924402+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SSL connection must be enabled for Azure Database for PostgreSQL",
    "displayName": "DB-PGSQL-01-ENFORCE : SSL connection must be enabled for Azure Database for PostgreSQL",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-PGSQL-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:51:55.1752584Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:53:52.5298997Z"
    },
    "mode": "All",
    "name": "DB-PGSQL-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/servers",
            "field": "type"
          },
          {
            "exists": "true",
            "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement"
          },
          {
            "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
            "notEquals": "Enabled"
          }
        ]
      },
      "then": {
        "details": {
          "conflictEffect": "Audit",
          "operations": [
            {
              "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
              "operation": "addOrReplace",
              "value": "Enabled"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:51:54.953643+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:53:52.514934+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, make sure diagnostic settings are activated",
    "displayName": "COS-DB-09 -  diagnostic settings are activated",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:53:30.2662541Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:43:03.9649408Z"
    },
    "mode": "All",
    "name": "COS-DB-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:53:30.193649+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:43:03.918294+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The configuration must contain a CORS block (Operation level)",
    "displayName": "APIM-04d: The configuration must contain a CORS block (Operation level)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/APIM-04d-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:53:30.371295Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:58:34.8693361Z"
    },
    "mode": "All",
    "name": "APIM-04d-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ApiManagement/service",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "field": "Microsoft.ApiManagement/service/apis/operations/policies/value",
                "notcontains": "<allowed-origins>"
              },
              {
                "field": "Microsoft.ApiManagement/service/apis/operations/policies/value",
                "notContains": "<cors>\r\n      <allowed-origins>\r\n        <origin>*</origin>"
              }
            ]
          },
          "type": "Microsoft.ApiManagement/service/apis/operations/policies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:53:30.271808+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:58:34.833569+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Web Sockets should be disabled for Functions App",
    "displayName": "FUNC-06 - Web Sockets should be disabled for Functions App",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:53:32.3103416Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-23T14:41:33.0878003Z"
    },
    "mode": "All",
    "name": "FUNC-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "webAppName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "webAppName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-02-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('webAppName'), '/web')]",
                    "properties": {
                      "webSocketsEnabled": "false"
                    },
                    "type": "Microsoft.Web/sites/config"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "equals": "false",
            "field": "Microsoft.Web/sites/config/webSocketsEnabled"
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:53:32.240564+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-23T14:41:33.059887+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "On All use case, by reviewing data protection in transit, HTTPS Only. Check the connection string",
    "displayName": "ADF-01: HTTPS Only for data in transit",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:53:32.396542Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-01-26T12:25:23.6322855Z"
    },
    "mode": "All",
    "name": "ADF-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.DataFactory/factories",
        "field": "type"
      },
      "then": {
        "details": {
          "existencecondition": {
            "anyOf": [
              {
                "contains": "https",
                "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
              },
              {
                "contains": "https",
                "field": "Microsoft.DataFactory/factories/linkedservices/SapEcc.typeProperties.url"
              },
              {
                "contains": "https",
                "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.serviceEndpoint"
              },
              {
                "contains": "https",
                "field": "Microsoft.DataFactory/factories/linkedservices/AzureKeyVault.typeProperties"
              }
            ]
          },
          "type": "Microsoft.DataFactory/factories/linkedservices"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:53:32.349976+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-26T12:25:23.606748+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In this sg_Resource_ControlTower_Profile=private and if Event Hub is tagged Criticality = C2, the allowed traffic must be from a private endpoint only, the associated VNET must be within the same subscription.",
    "displayName": "EVT-HUB-04 - If private or C2 data, the allowed traffic must be from a private endpoint only",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/EVT-HUB-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:53:32.5090198Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:15:14.6082067Z"
    },
    "mode": "All",
    "name": "EVT-HUB-04-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "private"
        ],
        "defaultValue": "private",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          },
          {
            "equals": "[parameters('networkProfileValues')]",
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
          },
          {
            "equals": "[parameters('confValue')]",
            "field": "[concat('tags[', parameters('tagConf'), ']')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "exists": "true",
                "field": "Microsoft.EventHub/namespaces/privateEndpointConnections/privateEndpoint"
              },
              {
                "equals": "Approved",
                "field": "Microsoft.EventHub/namespaces/privateEndpointConnections/privateLinkServiceConnectionState.status"
              },
              {
                "contains": "[subscription().id]",
                "field": "Microsoft.EventHub/namespaces/privateEndpointConnections/privateEndpoint.id"
              }
            ]
          },
          "type": "Microsoft.EventHub/namespaces/privateEndpointConnections"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:53:32.443763+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:15:14.534938+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If sg_Resource_ControlTower_Profile=SGNET / use case 3, Only allow access from 'selected network' to CosmosDBs Firewall",
    "displayName": "COS-DB-13 - If SGNET, Only allow access from 'selected network' to CosmosDB Firewall",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:56:43.2260355Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:46:05.1742251Z"
    },
    "mode": "All",
    "name": "COS-DB-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "equals": "[parameters('tagValue')]",
            "field": "[concat('tags[', parameters('tagName'), ']')]"
          },
          {
            "count": {
              "field": "Microsoft.DocumentDB/databaseAccounts/ipRules[*]"
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:56:43.148364+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:46:05.120197+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "No Vnet rule must configured for C2 data",
    "displayName": "STO-33 - No Vnet rule must configured for C2 data",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-33-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:58:19.1696259Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-11T14:39:28.6135219Z"
    },
    "mode": "All",
    "name": "STO-33-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "defaultValue": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagConf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
            "in": "[parameters('networkProfileValues')]"
          },
          {
            "equals": "[parameters('confValue')]",
            "field": "[concat('tags[', parameters('tagConf'), ']')]"
          },
          {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*].id",
                        "notIn": [
                          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
                          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infrarg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/xp",
                          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infrarg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/gs",
                          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infrarg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
                          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infrarg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs",
                          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infrarg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
                          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infrarg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
                          "/subscriptions/ae0c1e4e-d49e-4115-b3ba-888d77ea97a3/resourceGroups/azure-prod/providers/Microsoft.Network/virtualNetworks/azure-prod/subnets/xp",
                          "/subscriptions/ae0c1e4e-d49e-4115-b3ba-888d77ea97a3/resourceGroups/azure-prod/providers/Microsoft.Network/virtualNetworks/azure-prod/subnets/gs",
                          "/subscriptions/37265438-aa4f-49f6-adc4-46271ae19193/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
                          "/subscriptions/37265438-aa4f-49f6-adc4-46271ae19193/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs",
                          "/subscriptions/63c9e19b-5cf1-4dcf-ace5-bf0f416f2ff7/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
                          "/subscriptions/63c9e19b-5cf1-4dcf-ace5-bf0f416f2ff7/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
                          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/gs",
                          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
                          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
                          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/xp",
                          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
                          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs"
                        ]
                      }
                    ]
                  }
                },
                "greater": 0
              },
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
                },
                "greater": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:58:19.024162+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-11T14:39:28.596927+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR by adding in ADF EncryptionMethod=1 in the connection string (in the Linked Service)",
    "displayName": "ADF-07: Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:58:19.5784021Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.5732636Z"
    },
    "mode": "All",
    "name": "ADF-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories/linkedservices",
            "field": "type"
          },
          {
            "allOf": [
              {
                "equals": "Oracle",
                "field": "Microsoft.DataFactory/factories/linkedservices/type"
              },
              {
                "NotContains": "EncryptionMethod=1",
                "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:58:19.477301+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.549374+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Detailed logging should be enabled",
    "displayName": "FUNC-08 - diagnostic setting must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:58:20.0014345Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:53:52.7012708Z"
    },
    "mode": "All",
    "name": "FUNC-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:58:19.883544+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:53:52.655571+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Check network filtering rules (only validated Public IP addresses)",
    "displayName": "SBUS-13 - Check network filtering rules (only validated Public IP addresses)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:58:20.8614933Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.5604756Z"
    },
    "mode": "All",
    "name": "SBUS-13-sgct",
    "parameters": {
      "BlueCoatIP": {
        "allowedValues": null,
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of Blue Coat Ips",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "field": "Microsoft.ServiceBus/namespaces/networkrulesets/ipRules[*].ipMask",
            "in": "[parameters('BlueCoatIP')]"
          },
          "type": "Microsoft.ServiceBus/namespaces/networkrulesets"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:58:20.774211+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.530543+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny all classic resources",
    "displayName": "FOUDATIONS-01 - Deny all classic resources",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FOUNDATIONS-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:58:20.9120853Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:55:27.165707Z"
    },
    "mode": "Indexed",
    "name": "FOUNDATIONS-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "like": "Microsoft.Classic*"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:58:20.852339+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:55:27.131742+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service endpoint for C0 and C1 data must be set and VNet rules on resource must allow traffic only from vNets of the same subscription",
    "displayName": "STO-08 - Service endpoint for C0 and C1 data must be set",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:58:21.2309023Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.3115924Z"
    },
    "mode": "All",
    "name": "STO-08-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C0",
          "C1"
        ],
        "defaultValue": [
          "C0",
          "C1"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality tags involved in this policy",
          "displayName": "sg_Resource_ControlTower_Confidentiality tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "defaultValue": [
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "InternetFile",
          "InternetQueue",
          "AuthenticatedPrivateTable",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagConf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
            "in": "[parameters('networkProfileValues')]"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('confValue')]"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
                "notEquals": "Deny"
              },
              {
                "exists": "false",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*].id"
              },
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*].id",
                "notcontains": "[subscription().id]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:58:21.149180+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.299618+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SCM access should be protected allowing access from SG WAF or DC proxy only",
    "displayName": "FUNC-07 - SCM access should be protected allowing access from SG WAF or DC proxy only",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:59:54.797712Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-16T08:46:00.9314011Z"
    },
    "mode": "All",
    "name": "FUNC-07-sgct",
    "parameters": {
      "BluecoatIP": {
        "allowedValues": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.96.0/20",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "24.206.115.32",
          "24.206.115.33",
          "24.239.140.32",
          "24.239.140.33",
          "24.239.166.30",
          "24.239.166.31",
          "24.206.114.30",
          "24.206.114.31",
          "24.239.134.32",
          "24.239.134.33",
          "24.239.164.28",
          "24.239.164.29",
          "24.239.135.28",
          "24.239.135.29",
          "24.206.76.50",
          "24.206.76.51",
          "24.206.89.94",
          "24.206.89.95",
          "24.206.99.30",
          "24.206.99.31",
          "24.206.97.44",
          "24.206.97.45",
          "24.239.131.32",
          "24.239.131.33",
          "24.239.141.40",
          "24.239.141.41",
          "24.206.82.53",
          "24.206.82.54",
          "24.206.78.46",
          "24.206.78.47",
          "24.206.98.12",
          "24.206.98.13",
          "24.206.110.32",
          "24.206.110.33",
          "24.206.123.34",
          "24.206.123.35",
          "24.239.160.32",
          "24.239.160.33",
          "24.239.129.30",
          "24.239.129.31",
          "24.239.144.30",
          "24.239.144.31"
        ],
        "defaultValue": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.96.0/20",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "24.206.115.32",
          "24.206.115.33",
          "24.239.140.32",
          "24.239.140.33",
          "24.239.166.30",
          "24.239.166.31",
          "24.206.114.30",
          "24.206.114.31",
          "24.239.134.32",
          "24.239.134.33",
          "24.239.164.28",
          "24.239.164.29",
          "24.239.135.28",
          "24.239.135.29",
          "24.206.76.50",
          "24.206.76.51",
          "24.206.89.94",
          "24.206.89.95",
          "24.206.99.30",
          "24.206.99.31",
          "24.206.97.44",
          "24.206.97.45",
          "24.239.131.32",
          "24.239.131.33",
          "24.239.141.40",
          "24.239.141.41",
          "24.206.82.53",
          "24.206.82.54",
          "24.206.78.46",
          "24.206.78.47",
          "24.206.98.12",
          "24.206.98.13",
          "24.206.110.32",
          "24.206.110.33",
          "24.206.123.34",
          "24.206.123.35",
          "24.239.160.32",
          "24.239.160.33",
          "24.239.129.30",
          "24.239.129.31",
          "24.239.144.30",
          "24.239.144.31"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "DCProxyIP": {
        "allowedValues": [
          "45.60.0.0/16",
          "45.223.0.0/16"
        ],
        "defaultValue": [
          "45.60.0.0/16",
          "45.223.0.0/16"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of DC proxy IP addresses ranges",
          "displayName": "DC proxy IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Web/sites/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "allOf": [
                  {
                    "count": {
                      "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                      "where": {
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress",
                                "notIn": "[parameters('BluecoatIP')]"
                              },
                              {
                                "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress",
                                "notIn": "[parameters('DCProxyIP')]"
                              }
                            ]
                          },
                          {
                            "equals": "Allow",
                            "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                          }
                        ]
                      }
                    },
                    "equals": 0
                  },
                  {
                    "count": {
                      "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*]",
                      "where": {
                        "allOf": [
                          {
                            "equals": "Any",
                            "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].ipAddress"
                          },
                          {
                            "equals": "Deny",
                            "field": "Microsoft.Web/sites/config/ipSecurityRestrictions[*].action"
                          }
                        ]
                      }
                    },
                    "equals": 1
                  }
                ]
              },
              {
                "anyOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictionsUseMain"
                  },
                  {
                    "allOf": [
                      {
                        "count": {
                          "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                          "where": {
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress",
                                    "notIn": "[parameters('BluecoatIP')]"
                                  },
                                  {
                                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress",
                                    "notIn": "[parameters('DCProxyIP')]"
                                  }
                                ]
                              },
                              {
                                "equals": "Allow",
                                "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                              }
                            ]
                          }
                        },
                        "equals": 0
                      },
                      {
                        "count": {
                          "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                          "where": {
                            "allOf": [
                              {
                                "equals": "Any",
                                "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress"
                              },
                              {
                                "equals": "Allow",
                                "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                              }
                            ]
                          }
                        },
                        "equals": 1
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:59:54.728083+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-16T08:46:00.911044+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics logs must be enabled + Retention for at least 90 days",
    "displayName": "SBUS-05: Diagnostics logs must be enabled + Retention for at least 90 days ",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:59:55.027689Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:47:42.4316582Z"
    },
    "mode": "All",
    "name": "SBUS-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "requiredRetentionDays": {
        "allowedValues": null,
        "defaultValue": 89,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Mandatory retention of diagnostics logs in days",
          "displayName": "Mandatory retention (days)",
          "strongType": null
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ServiceBus/namespaces",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "true",
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
                  },
                  {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                    "greater": "[parameters('requiredRetentionDays')]"
                  },
                  {
                    "equals": "true",
                    "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                  }
                ]
              }
            },
            "greaterOrEquals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:59:54.915587+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:47:42.408381+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Ensure Service Bus Make namespace is compliant with the parameter 'zone redundant'",
    "displayName": "SBUS-12 - Ensure Service Bus Make namespace is compliant with the parameter 'zone redundant'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:59:56.3503537Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:41:31.0395643Z"
    },
    "mode": "All",
    "name": "SBUS-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "equals": "false",
            "field": "Microsoft.ServiceBus/namespaces/zoneRedundant"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:59:56.274971+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:41:31.004957+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS should be restricted to authorized destination (i.e. described in a validated PSAT)",
    "displayName": "FUNC-11 - CORS must not accept all",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:01:31.7223035Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:15:14.5423569Z"
    },
    "mode": "All",
    "name": "FUNC-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "DeployIfNotExists",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "forbiddenOrigins": {
        "allowedValues": [
          "*"
        ],
        "defaultValue": [
          "*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of urls forbidden for CORS",
          "displayName": "Forbidden CORS origins",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "count": {
              "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
              "where": {
                "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                "in": "[parameters('forbiddenOrigins')]"
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:01:31.619543+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:15:14.503687+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For 'SGNETADLS' 'IoTADLS' 'InternetADLS' , 'AuthenticatedPrivateTable' allow only WAF IP for Admin access",
    "displayName": "STO-38 - IP rules must be set to allow traffic only from WAF Imperva",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-38-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:01:31.9093707Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:55:28.9381769Z"
    },
    "mode": "All",
    "name": "STO-38-sgct",
    "parameters": {
      "BlueCoatIP": {
        "allowedValues": null,
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS",
          "AuthenticatedPrivateTable"
        ],
        "defaultValue": [
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS",
          "AuthenticatedPrivateTable"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Storage/storageAccounts",
                "field": "type"
              },
              {
                "exists": true,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              },
              {
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
                "in": "[parameters('networkProfileValues')]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value",
                "notIn": "[parameters('BlueCoatIP')]"
              },
              {
                "equals": "Allow",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:01:31.822639+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:55:28.881533+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS must not allow all origins",
    "displayName": "STO-28 - CORS must not allow all origins (File Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-28-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:01:33.1259163Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:41:26.2047557Z"
    },
    "mode": "All",
    "name": "STO-28-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists",
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/fileServices/cors.corsRules[*]",
              "where": {
                "contains": "*",
                "field": "Microsoft.Storage/storageAccounts/fileServices/cors.corsRules[*].allowedOrigins[*]"
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:01:33.041397+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:41:26.177934+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny resources not compliant to SOC2 Type2",
    "displayName": "FOUNDATIONS-02 - Deny resources not compliant to SOC2 Type2",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FOUNDATIONS-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:03:07.6399069Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-01-08T14:19:25.9408329Z"
    },
    "mode": "Indexed",
    "name": "FOUNDATIONS-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResourceTypesNotAllowed": {
        "allowedValues": null,
        "defaultValue": [
          "Microsoft.Blockchain/*",
          "Microsoft.Consumption/*",
          "Microsoft.DataBoxEdge/*",
          "Microsoft.DocumentDB/cassandraClusters/",
          "Microsoft.GuestConfiguration/*",
          "Microsoft.MachineLearning/*",
          "Microsoft.ResourceHealth/*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that cannot be deployed.",
          "displayName": "Not allowed resource types",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "field": "type",
        "in": "[parameters('listOfResourceTypesNotAllowed')]"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:03:07.526558+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-08T14:19:25.888193+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny user assigned identities",
    "displayName": "FOUNDATIONS-03 - Deny user assigned identities",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FOUNDATIONS-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:03:07.7542122Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:52:19.2697042Z"
    },
    "mode": "Indexed",
    "name": "FOUNDATIONS-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ManagedIdentity/userAssignedIdentities",
        "field": "type"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:03:07.620311+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:52:19.241761+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SSL connection must be enabled for Azure Database for PostgreSQL",
    "displayName": "DB-PGSQL-01 - SSL connection must be enabled for Azure Database for PostgreSQL",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-PGSQL-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:03:09.1434361Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:12:10.4313978Z"
    },
    "mode": "All",
    "name": "DB-PGSQL-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/servers",
            "field": "type"
          },
          {
            "exists": "true",
            "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement"
          },
          {
            "field": "Microsoft.DBforPostgreSQL/servers/sslEnforcement",
            "notEquals": "Enabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:03:09.073446+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:12:10.396476+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The configuration must contain a CORS block (Product level)",
    "displayName": "APIM-04b: The configuration must contain a CORS block (Product level)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/APIM-04b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:04:44.8329781Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:22:55.3667091Z"
    },
    "mode": "All",
    "name": "APIM-04b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ApiManagement/service",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "field": "Microsoft.ApiManagement/service/products/policies/value",
                "notcontains": "<allowed-origins>"
              },
              {
                "field": "Microsoft.ApiManagement/service/products/policies/value",
                "notContains": "<cors>\r\n      <allowed-origins>\r\n        <origin>*</origin>"
              }
            ]
          },
          "type": "Microsoft.ApiManagement/service/products/policies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:04:44.746112+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:22:55.347608+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing network and security controls, no any-to-any rule must be configured, no internet access",
    "displayName": "DB-SQL-01: No any-to-any rule must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:04:45.5354657Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:38:20.770011Z"
    },
    "mode": "All",
    "name": "DB-SQL-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers/firewallRules",
            "field": "type"
          },
          {
            "allOf": [
              {
                "equals": "0.0.0.0",
                "field": "Microsoft.Sql/servers/firewallRules/startIpAddress"
              },
              {
                "equals": "255.255.255.255",
                "field": "Microsoft.Sql/servers/firewallRules/endIpAddress"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:04:45.355554+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:38:20.742526+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, no CORS must be configured",
    "displayName": "COS-DB-05 - no CORS must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:04:45.5387401Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.3311157Z"
    },
    "mode": "All",
    "name": "COS-DB-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.DocumentDB/databaseAccounts/cors[*]"
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:04:45.449256+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.302600+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Network ACL default action must be Deny (Networking --> Selected networks)",
    "displayName": "STO-37 - Network ACL default action must be Deny",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-37-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:04:45.9278858Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-11T14:39:28.3572203Z"
    },
    "mode": "All",
    "name": "STO-37-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled",
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
            "notEquals": "Deny"
          },
          {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "exists": false,
                    "field": "[concat('tags[', 'databricks-environment', ']')]"
                  },
                  {
                    "field": "[concat('tags[', 'databricks-environment', ']')]",
                    "notequals": "true"
                  }
                ]
              },
              {
                "anyOf": [
                  {
                    "exists": false,
                    "field": "[concat('tags[', 'managed_databricks', ']')]"
                  },
                  {
                    "field": "[concat('tags[', 'managed_databricks', ']')]",
                    "notequals": "true"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:04:45.855531+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-11T14:39:28.322911+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The WAF functionality must be disabled",
    "displayName": "AGW-03: The WAF functionality must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:04:46.165304Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:29:05.4086813Z"
    },
    "mode": "All",
    "name": "AGW-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/applicationGateways",
            "field": "type"
          },
          {
            "exists": "true",
            "field": "Microsoft.Network/applicationGateways/webApplicationFirewallConfiguration"
          },
          {
            "equals": "true",
            "field": "Microsoft.Network/applicationGateways/webApplicationFirewallConfiguration.enabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:04:46.058712+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:29:05.389640+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing logging and monitoring, Advanced Data Security must be configured",
    "displayName": "DB-SQL-08: Advanced Data Security must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:04:46.5335848Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:29:05.4070982Z"
    },
    "mode": "All",
    "name": "DB-SQL-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          },
          {
            "equals": "Microsoft.Sql/servers",
            "field": "type"
          },
          {
            "field": "kind",
            "notContains": "analytics"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Enabled",
            "field": "Microsoft.Sql/servers/securityAlertPolicies/state"
          },
          "name": "Default",
          "type": "Microsoft.Sql/servers/securityAlertPolicies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:04:46.449286+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:29:05.389640+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If sg_Resource_ControlTower_Confidentiality=C2, sg_Resource_ControlTower_Profile must not be INTERNET_ALTERNATIVE",
    "displayName": "STMA-04 - if C2, do not use use case INTERNET_ALTERNATIVE",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STMA-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:07:49.4288922Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:50:45.2344438Z"
    },
    "mode": "All",
    "name": "STMA-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagNameconf": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagNameprofile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValueconf": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      },
      "tagValueprofile": {
        "allowedValues": [
          "INTERNET_ALTERNATIVE"
        ],
        "defaultValue": "INTERNET_ALTERNATIVE",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.StreamAnalytics/streamingjobs",
            "field": "type"
          },
          {
            "equals": "[parameters('tagValueconf')]",
            "field": "[concat('tags[', parameters('tagNameconf'), ']')]"
          },
          {
            "equals": "[parameters('tagValueprofile')]",
            "field": "[concat('tags[', parameters('tagNameprofile'), ']')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:07:49.372712+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:50:45.203170+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For 'publicBlob', 'authenticatedPublicBlob', 'authenticatedPrivateBlob' or 'SGNETBlob', 'SGNETADLS' 'IoTADLS' 'InternetADLS' 'APPI' ,  Audit logs for blob must be enabled",
    "displayName": "STO-13 - Audit logs for blob must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:07:50.4687494Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-01-29T18:11:13.1474159Z"
    },
    "mode": "All",
    "name": "STO-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "publicBlob",
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "SGNETBlob",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS",
          "APPI"
        ],
        "defaultValue": [
          "publicBlob",
          "authenticatedPublicBlob",
          "authenticatedPrivateBlob",
          "SGNETBlob",
          "SGNETADLS",
          "IoTADLS",
          "InternetADLS",
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/blobServices",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
            "in": "[parameters('networkProfileValues')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyof": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].category",
                        "in": [
                          "StorageRead",
                          "StorageWrite",
                          "StorageDelete"
                        ]
                      }
                    ]
                  }
                },
                "equals": 3
              },
              {
                "count": {
                  "field": "microsoft.insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      },
                      {
                        "equals": true,
                        "field": "microsoft.aadiam/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:07:50.372695+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-29T18:11:13.117026+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "V1 SKU is forbidden",
    "displayName": "AGW-08: V1 SKU is forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:09:26.3822703Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.7235466Z"
    },
    "mode": "All",
    "name": "AGW-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/applicationGateways",
            "field": "type"
          },
          {
            "equals": "Standard",
            "field": "Microsoft.Network/applicationGateways/sku.tier"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:09:26.279732+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.674384+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " CORS must not allow all origins",
    "displayName": "STO-06 - CORS must not allow all origins (Blob Services)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/STO-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:09:27.5762685Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:18:18.9280107Z"
    },
    "mode": "All",
    "name": "STO-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disable",
          "DeployIfNotExists",
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/blobServices/cors.corsRules[*]",
              "where": {
                "contains": "*",
                "field": "Microsoft.Storage/storageAccounts/blobServices/cors.corsRules[*].allowedOrigins[*]"
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:09:27.498461+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:18:18.860342+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only AnomalyDetector, ComputerVision, ContentModerator ,  CustomVision.Prediction,  CustomVision.Training, Face, FormRecognizer, ImmersiveReader, LUIS, OpenAI, Personalizer, SpeechServices, TextTranslation can be provisioned",
    "displayName": "ACOS-06: Only some services can be provisioned",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ACOS-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:09:28.3507836Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:01:42.9154902Z"
    },
    "mode": "All",
    "name": "ACOS-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listofservicesallowed": {
        "allowedValues": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer",
          "TextAnalytics"
        ],
        "defaultValue": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer",
          "TextAnalytics"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Azure Cognitive services allowed",
          "displayName": "servicesallowed",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.CognitiveServices/accounts",
            "field": "type"
          },
          {
            "field": "kind",
            "notIn": "[parameters('listofservicesallowed')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:09:28.232842+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:01:42.878848+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Consumption service plan is forbidden for production environments.",
    "displayName": "FUNC-18 - Consumption service plan is forbidden for production environments.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/FUNC-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:09:28.8750881Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-23T16:11:25.0124581Z"
    },
    "mode": "All",
    "name": "FUNC-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          },
          {
            "notIn": [
              "APPIO"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "equals": "[last(split(field('Microsoft.Web/sites/serverFarmId'), '/'))]",
                "field": "name"
              },
              {
                "field": "Microsoft.Web/serverFarms/sku.family",
                "notLike": "Y*"
              }
            ]
          },
          "existenceScope": "Subscription",
          "type": "microsoft.web/serverfarms"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:09:28.764129+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-23T16:11:24.929533+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Soft-delete need to be enabled to protect backup data from accidental deletes",
    "displayName": "BKP-06: Soft-delete need to be enabled to protect backup data from accidental deletes",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/BKP-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:11:06.6020905Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.4665282Z"
    },
    "mode": "All",
    "name": "BKP-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults/backupconfig",
            "field": "type"
          },
          {
            "equals": "Disabled",
            "field": "Microsoft.RecoveryServices/Vaults/backupconfig/vaultconfig.softDeleteFeatureState"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:11:06.530533+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.427564+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Audit Logs (Azure Monitor ) must be enabled",
    "displayName": "AGW-06: Audit Logs (Azure Monitor ) must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:11:07.6574543Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:41:31.3575779Z"
    },
    "mode": "All",
    "name": "AGW-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Network/applicationGateways",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:11:07.546196+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:41:31.317489+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Confidentiality=C2' or if 'sg_Resource_ControlTower_Profile=SGNET'. Private endpoint must be activated in the subnet.",
    "displayName": "DB-PGSQL-10 - For SGNET or C2 data,  Private endpoint must be activated in the subnet",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-PGSQL-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:11:07.929299Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:13:42.3515146Z"
    },
    "mode": "All",
    "name": "DB-PGSQL-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConfName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the sg_Resource_ControlTower_Confidentiality tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagConfValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag for cong tag",
          "displayName": "Tag sg_Resource_ControlTower_Confidentiality Value",
          "strongType": null
        },
        "type": "String"
      },
      "tagProfileName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagProfileValue": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag value for sg_Resource_ControlTower_Profile",
          "displayName": "sg_Resource_ControlTower_Profile value",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/servers",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "[parameters('tagConfValue')]",
                "field": "[concat('tags[', parameters('tagConfName'), ']')]"
              },
              {
                "equals": "[parameters('tagProfileValue')]",
                "field": "[concat('tags[', parameters('tagProfileName'), ']')]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "exists": "true",
                "field": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections/privateEndpoint.id"
              },
              {
                "equals": "Approved",
                "field": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections/privateLinkServiceConnectionState.status"
              }
            ]
          },
          "type": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:11:07.843078+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:13:42.325077+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The VNET must contain only one subnet and only the Gateway with its NSG. Any other network card is forbidden.",
    "displayName": "AGW-05: The VNET must contain only one subnet and only the Gateway with its NSG.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/AGW-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:11:08.1465696Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:46:05.2080277Z"
    },
    "mode": "All",
    "name": "AGW-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Network/applicationGateways",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                  "where": {
                    "allOf": [
                      {
                        "contains": "[first(field('Microsoft.Network/applicationGateways/gatewayIPConfigurations[*].subnet.id'))]",
                        "field": "Microsoft.Network/virtualNetworks/subnets[*].id"
                      },
                      {
                        "exists": "true",
                        "field": "Microsoft.Network/virtualNetworks/subnets[*].networkSecurityGroup.id"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets[*]"
                },
                "equals": 1
              }
            ]
          },
          "name": "[split(first(field('Microsoft.Network/applicationGateways/gatewayIPConfigurations[*].subnet.id')),'/')[8]]",
          "type": "Microsoft.Network/virtualNetworks"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:11:08.061887+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:46:05.167076+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If using publicSBUS use case, Service Endpoint must be enabled for Service Bus",
    "displayName": "SBUS-10 - If public, Service Endpoint must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SBUS-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:12:49.0061686Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:47:38.439902Z"
    },
    "mode": "All",
    "name": "SBUS-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "networkProfileValues": {
        "allowedValues": [
          "publicSBUS"
        ],
        "defaultValue": [
          "publicSBUS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagResourceProfile": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "exists": true,
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
          },
          {
            "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]",
            "in": "[parameters('networkProfileValues')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.ServiceBus/namespaces/networkrulesets/virtualNetworkRules[*]",
              "where": {
                "equals": "true",
                "field": "Microsoft.ServiceBus/namespaces/networkrulesets/virtualNetworkRules[*].ignoreMissingVnetServiceEndpoint"
              }
            },
            "equals": 0
          },
          "type": "Microsoft.ServiceBus/namespaces/networkrulesets"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:12:48.906380+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:47:38.330134+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In use case 1, if data confidentiality = C2 or SGNET,  all authorized network must be from Private endpoint & No vnet rules must be configured",
    "displayName": "COS-DB-10 - In use case 1, if data = C2 or SGNET, No vnet rules must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/COS-DB-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:14:27.4757141Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:29:05.3713551Z"
    },
    "mode": "All",
    "name": "COS-DB-10-sgct",
    "parameters": {
      "confValue": {
        "allowedValues": [
          "C2"
        ],
        "defaultValue": "C2",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": [
          "sg_Resource_ControlTower_Confidentiality"
        ],
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Confidentiality",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfile": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfileSgnet": {
        "allowedValues": [
          "sg_Resource_ControlTower_Profile"
        ],
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "sg_Resource_ControlTower_Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagResourceProfileValue": {
        "allowedValues": [
          "INTERNET_Application"
        ],
        "defaultValue": "INTERNET_Application",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      },
      "tagResourceProfileValueSgnet": {
        "allowedValues": [
          "SGNET"
        ],
        "defaultValue": "SGNET",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "[parameters('tagResourceProfileValue')]",
                    "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
                  },
                  {
                    "equals": "[parameters('confValue')]",
                    "field": "[concat('tags[', parameters('tagConf'), ']')]"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "[parameters('tagResourceProfileValue')]",
                    "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
                  },
                  {
                    "exists": false,
                    "field": "[concat('tags[', parameters('tagConf'), ']')]"
                  }
                ]
              },
              {
                "equals": "[parameters('tagResourceProfileValueSgnet')]",
                "field": "[concat('tags[', parameters('tagResourceProfileSgnet'), ']')]"
              },
              {
                "exists": false,
                "field": "[concat('tags[', parameters('tagResourceProfile'), ']')]"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.DocumentDB/databaseAccounts/virtualNetworkRules[*]"
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:14:27.376616+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:29:05.342764+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny private endpoints to resources outside of the aad tenant and subscription.",
    "displayName": "APE-01-ENFORCE: Deny private endpoints to resources outside of the aad tenant and subscription.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/APE-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-31T12:29:24.3700421Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-18T11:07:49.860654Z"
    },
    "mode": "All",
    "name": "APE-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/privateEndpoints",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*].privateLinkServiceId",
                        "notEquals": ""
                      },
                      {
                        "notEquals": "[subscription().subscriptionId]",
                        "value": "[split(concat(first(field('Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*].privateLinkServiceId')), '//'), '/')[2]]"
                      }
                    ]
                  }
                },
                "greaterOrEquals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                        "notEquals": ""
                      },
                      {
                        "notEquals": "[subscription().subscriptionId]",
                        "value": "[split(concat(first(field('Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId')), '//'), '/')[2]]"
                      }
                    ]
                  }
                },
                "greaterOrEquals": 1
              }
            ]
          },
          {
            "anyof": [
              {
                "count": {
                  "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*].privateLinkServiceId",
                        "notEquals": ""
                      },
                      {
                        "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*].privateLinkServiceId",
                        "notIn": [
                          "/subscriptions/cc64b61e-161e-4b39-bb70-8b2e0281dd91/resourceGroups/rg-dl-sgdbf-prd-frc/providers/Microsoft.Storage/storageAccounts/stdlsgdbfprd"
                        ]
                      },
                      {
                        "notIn": [
                          "0ac0dc4a-457e-42b4-b4f7-186d4b646f8b"
                        ],
                        "value": "[subscription().subscriptionId]"
                      }
                    ]
                  }
                },
                "greaterOrEquals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                        "notEquals": ""
                      },
                      {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                        "notIn": [
                          "/subscriptions/cc64b61e-161e-4b39-bb70-8b2e0281dd91/resourceGroups/rg-dl-sgdbf-prd-frc/providers/Microsoft.Storage/storageAccounts/stdlsgdbfprd"
                        ]
                      },
                      {
                        "notIn": [
                          "0ac0dc4a-457e-42b4-b4f7-186d4b646f8b"
                        ],
                        "value": "[subscription().subscriptionId]"
                      }
                    ]
                  }
                },
                "greaterOrEquals": 1
              }
            ]
          },
          {
            "anyof": [
              {
                "count": {
                  "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*].privateLinkServiceId",
                        "notEquals": ""
                      },
                      {
                        "anyof": [
                          {
                            "notIn": [
                              "2efbf2bc-1dac-4a7e-a805-fcaf9cb12531"
                            ],
                            "value": "[subscription().subscriptionId]"
                          },
                          {
                            "notIn": [
                              "rg-sgds-analytics-prd-westeurope-01"
                            ],
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*].privateLinkServiceId",
                                "notLike": "/subscriptions/531ae696-2bec-406c-86e9-20230f3dcd02/resourceGroups/rg-sgds-analyticsuat-prd-westeurope-01/*"
                              },
                              {
                                "field": "Microsoft.Network/privateEndpoints/manualprivateLinkServiceConnections[*].privateLinkServiceId",
                                "notLike": "/subscriptions/531ae696-2bec-406c-86e9-20230f3dcd02/resourceGroups/rg-sgds-analyticsuat-prd-westeurope-10/*"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "greaterOrEquals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                        "notEquals": ""
                      },
                      {
                        "anyof": [
                          {
                            "notIn": [
                              "2efbf2bc-1dac-4a7e-a805-fcaf9cb12531"
                            ],
                            "value": "[subscription().subscriptionId]"
                          },
                          {
                            "notIn": [
                              "rg-sgds-analytics-prd-westeurope-01"
                            ],
                            "value": "[resourceGroup().name]"
                          },
                          {
                            "allOf": [
                              {
                                "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                                "notLike": "/subscriptions/531ae696-2bec-406c-86e9-20230f3dcd02/resourceGroups/rg-sgds-analyticsuat-prd-westeurope-01/*"
                              },
                              {
                                "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId",
                                "notLike": "/subscriptions/531ae696-2bec-406c-86e9-20230f3dcd02/resourceGroups/rg-sgds-analyticsuat-prd-westeurope-10/*"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "greaterOrEquals": 1
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-31T12:29:24.301426+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-18T11:07:49.843938+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "List all deployment regions",
    "displayName": "Region-01-sgct - List all deployment regions",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/Region-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-01T14:40:38.0798514Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:57:06.586141Z"
    },
    "mode": "All",
    "name": "Region-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "resourceLocationList": {
        "allowedValues": [
          "eastus",
          "westeurope",
          "brazilsouth",
          "centralindia",
          "southeastasia",
          "francecentral",
          "westus2",
          "westus",
          "indiawest",
          "centralus",
          "UKwest",
          "UKsouth",
          "southindia",
          "centralussouth",
          "southafricanorth",
          "northeurope",
          "japanwest",
          "germanywestcentral",
          "eastus2",
          "eastasia",
          "centralus",
          "australiacentral"
        ],
        "defaultValue": [
          "eastus",
          "westeurope",
          "brazilsouth",
          "centralindia",
          "southeastasia",
          "francecentral",
          "westus2",
          "westus",
          "indiawest",
          "centralus",
          "UKwest",
          "UKsouth",
          "southindia",
          "centralussouth",
          "southafricanorth",
          "northeurope",
          "japanwest",
          "germanywestcentral",
          "eastus2",
          "eastasia",
          "centralus",
          "australiacentral"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of regions to exclude",
          "displayName": "The list of regions to exclude",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "location",
            "notEquals": "XXXY"
          },
          {
            "field": "location",
            "notIn": "[parameters('resourceLocationList')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-01T14:40:38.000836+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:57:06.560806+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Allow Azure services and resources to access this server must be set to  no",
    "displayName": "DB-SQL-21: Allow Azure services and resources to access this server must be set to no",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-21-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-11T12:58:07.4342615Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:44:36.7384936Z"
    },
    "mode": "All",
    "name": "DB-SQL-21-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Sql/servers/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "field": "Microsoft.Sql/servers/firewallRules/startIpAddress",
                "notEquals": "0.0.0.0"
              },
              {
                "field": "Microsoft.Sql/servers/firewallRules/endIpAddress",
                "notEquals": "0.0.0.0"
              }
            ]
          },
          "type": "Microsoft.Sql/servers/firewallRules"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-11T12:58:07.374226+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:44:36.706641+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Static Web App sku must be only standard",
    "displayName": "SWA-09: Static Web App sku must be only standard",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SWA-09",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-26T10:36:54.337461Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:36:53.7119643Z"
    },
    "mode": "All",
    "name": "SWA-09",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/staticSites",
            "field": "type"
          },
          {
            "field": "Microsoft.Web/staticSites/sku.name",
            "notEquals": "standard"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-26T10:36:54.237184+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:36:53.671518+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In case of communication with other services, the WebApp must have a system assigned managed identity",
    "displayName": "SWA-04: In case of communication with other services, the WebApp must have a system assigned managed identity",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SWA-04",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-26T10:36:54.619202Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.6314389Z"
    },
    "mode": "All",
    "name": "SWA-04",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Web/staticSites",
            "field": "type"
          },
          {
            "exists": true,
            "field": "identity.type"
          },
          {
            "field": "identity.type",
            "notEquals": "systemassigned"
          },
          {
            "field": "identity.type",
            "notEquals": "none"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-26T10:36:54.538765+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.546167+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API create/update for Static Web App must be disabled",
    "displayName": "SWA-08: API create/update for Static Web App must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SWA-08",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-26T10:36:54.5587755Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:50:45.2777048Z"
    },
    "mode": "All",
    "name": "SWA-08",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "anyof": [
          {
            "equals": "Microsoft.Web/staticSites/builds/linkedBackends",
            "field": "type"
          },
          {
            "equals": "Microsoft.Web/staticSites/linkedBackends",
            "field": "type"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-26T10:36:54.432472+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:50:45.218798+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Database connection create/update must be disabled",
    "displayName": "SWA-07: Database connection create/update must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SWA-07",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-26T10:36:54.5392515Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:39:58.4905469Z"
    },
    "mode": "All",
    "name": "SWA-07",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "anyof": [
          {
            "equals": "Microsoft.Web/staticSites/builds/databaseConnections",
            "field": "type"
          },
          {
            "equals": "Microsoft.Web/staticSites/databaseConnections",
            "field": "type"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-26T10:36:54.405039+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:39:58.466671+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoint must be configured to manage inbound flows",
    "displayName": "SWA-06: Private endpoint must be configured to manage inbound flows",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SWA-06",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-26T10:36:54.8043449Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:58:34.9649893Z"
    },
    "mode": "All",
    "name": "SWA-06",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Web/staticSites",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Approved",
            "field": "Microsoft.Web/staticSites/privateEndpointConnections/privateLinkServiceConnectionState.status"
          },
          "type": "Microsoft.Web/staticSites/privateEndpointConnections"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-26T10:36:54.679984+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:58:34.927327+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only APPI/APPIO Public spokes with C0/C1 data are allowed for public facing usecases",
    "displayName": "SWA-01: Only APPI/APPIO spokes with C0/C1 data are allowed for public facing usecases",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SWA-01",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-26T10:36:54.7639165Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:00:08.9860774Z"
    },
    "mode": "All",
    "name": "SWA-01",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tags": {
        "allowedValues": null,
        "defaultValue": [
          {
            "tagname": "spoke_type",
            "tagvalue": [
              "APPI",
              "APPIO"
            ]
          },
          {
            "tagname": "confidentiality",
            "tagvalue": [
              "C0",
              "C1"
            ]
          },
          {
            "tagname": "availability",
            "tagvalue": [
              "A1",
              "A2",
              "A3",
              "A4"
            ]
          },
          {
            "tagname": "integrity",
            "tagvalue": [
              "I1",
              "I2",
              "I3",
              "I4"
            ]
          },
          {
            "tagname": "Traceability",
            "tagvalue": [
              "T1",
              "T2",
              "T3",
              "T4"
            ]
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "All tags that Resource Type must have",
          "displayName": "list of tags",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/staticSites",
            "field": "type"
          },
          {
            "anyof": [
              {
                "field": "[toUpper(concat('tags[', parameters('tags')[0].tagname, ']'))]",
                "notin": "[parameters('tags')[0].tagvalue]"
              },
              {
                "allof": [
                  {
                    "field": "[toUpper(concat('tags[', parameters('tags')[0].tagname, ']'))]",
                    "in": "[parameters('tags')[0].tagvalue]"
                  },
                  {
                    "field": "[toUpper(concat('tags[', parameters('tags')[1].tagname, ']'))]",
                    "notin": "[parameters('tags')[1].tagvalue]"
                  }
                ]
              }
            ]
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Web/staticSites/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-26T10:36:54.649718+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:00:08.965619+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deploys the diagnostic settings for Azure Activity to stream subscriptions audit logs to a Log Analytics workspace to monitor subscription-level events",
    "displayName": "LOG-01: Configure Azure Activity logs to stream to specified Log Analytics workspace",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/LOG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-25T16:17:55.9030935Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-25T16:41:39.0521778Z"
    },
    "mode": "All",
    "name": "LOG-01-sgct",
    "parameters": {
      "DiagnosticName": {
        "allowedValues": [
          "SecurityLogs"
        ],
        "defaultValue": "SecurityLogs",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Whether to enable logs stream to the Log Analytics workspace - True or False",
          "displayName": "Enable logs",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "logAnalytics": {
        "allowedValues": [
          "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourceGroups/rg-security-governance-prd-glb/providers/Microsoft.OperationalInsights/workspaces/law-security-governance-prd-glbactivity"
        ],
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourceGroups/rg-security-governance-prd-glb/providers/Microsoft.OperationalInsights/workspaces/law-security-governance-prd-glbactivity",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
          "displayName": "Primary Log Analytics workspace",
          "strongType": "omsWorkspace"
        },
        "type": "String"
      },
      "logsEnabled": {
        "allowedValues": [
          "True",
          "False"
        ],
        "defaultValue": "True",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Whether to enable logs stream to the Log Analytics workspace - True or False",
          "displayName": "Enable logs",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Resources/subscriptions",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "location": "northeurope",
            "properties": {
              "mode": "incremental",
              "parameters": {
                "DiagnosticName": {
                  "value": "[parameters('DiagnosticName')]"
                },
                "logAnalytics": {
                  "value": "[parameters('logAnalytics')]"
                },
                "logsEnabled": {
                  "value": "[parameters('logsEnabled')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                  "DiagnosticName": {
                    "type": "string"
                  },
                  "logAnalytics": {
                    "type": "string"
                  },
                  "logsEnabled": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-05-01-preview",
                    "location": "Global",
                    "name": "[parameters('DiagnosticName')]",
                    "properties": {
                      "logs": [
                        {
                          "category": "Administrative",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "Security",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "ServiceHealth",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "Alert",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "Recommendation",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "Policy",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "Autoscale",
                          "enabled": "[parameters('logsEnabled')]"
                        },
                        {
                          "category": "ResourceHealth",
                          "enabled": "[parameters('logsEnabled')]"
                        }
                      ],
                      "workspaceId": "[parameters('logAnalytics')]"
                    },
                    "type": "Microsoft.Insights/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "deploymentScope": "Subscription",
          "existenceCondition": {
            "allOf": [
              {
                "equals": "[parameters('logsEnabled')]",
                "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
              },
              {
                "equals": "[parameters('logAnalytics')]",
                "field": "Microsoft.Insights/diagnosticSettings/workspaceId"
              }
            ]
          },
          "existenceScope": "Subscription",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
            "/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-25T16:17:55.852353+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-25T16:41:39.038423+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The Role 'Data Purger' must not be assigned.",
    "displayName": "LAW-MGT-02: The Role 'Data Purger' must not be assigned.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/LAW-MGT-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-10T13:14:03.1241762Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LAW-MGT-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Deny, Audit or Disabled the execution of the Policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Authorization/roleAssignments",
            "field": "type"
          },
          {
            "contains": "Microsoft.OperationalInsights/workspaces",
            "field": "Microsoft.Authorization/roleAssignments/scope"
          },
          {
            "equals": "/providers/Microsoft.Authorization/roleDefinitions/150f5e0c-0603-4f03-8c7f-cf70034c4e90",
            "field": "Microsoft.Authorization/roleAssignments/roleDefinitionId"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-10T13:14:03.032348+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-10T13:14:03.032348+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "A log retention should be set for all collected logs, with at least 30 days default from Log Analytics Workspace.",
    "displayName": "LAW-MGT-01: A log retention should be set for all collected logs, with at least 30 days default from Log Analytics Workspace.",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/LAW-MGT-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-10T13:14:03.1938653Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LAW-MGT-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Deny, Audit or Disabled the execution of the Policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "retentionInDays": {
        "allowedValues": null,
        "defaultValue": 30,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "This defines how long logs should be retained for",
          "displayName": "Retention in days",
          "strongType": null
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.OperationalInsights/workspaces",
            "field": "type"
          },
          {
            "field": "microsoft.operationalinsights/workspaces/retentionInDays",
            "less": "[parameters('retentionInDays')]"
          },
          {
            "exists": true,
            "field": "microsoft.operationalinsights/workspaces/retentionInDays"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-10T13:14:02.954190+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-10T13:14:02.954190+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "On All use case, Ensure the Diagnostics features is enabled (Logs and Metrics). The retentions should be 90days",
    "displayName": "ADF-09: Ensure the Diagnostics features is enabled (Logs and Metrics)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-29T12:44:04.3917605Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-01-29T14:48:14.2826799Z"
    },
    "mode": "All",
    "name": "ADF-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.DataFactory/factories",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allof": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "AllLogs",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "greaterOrEquals": 1
              },
              {
                "equals": "true",
                "field": "Microsoft.Insights/diagnosticSettings/metrics[*].enabled"
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-29T12:44:04.222128+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-29T14:48:14.248798+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Vault must use system managed identity",
    "displayName": "RSV-05: Vault must use system managed identity",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:29.9616433Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:29.882878+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:31:29.882878+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Vault immutability must be locked in PRD",
    "displayName": "RSV-13: Vault immutability must be locked in PRD",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:30.1755549Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.RecoveryServices/vaults/securitySettings.immutabilitySettings"
              },
              {
                "field": "Microsoft.RecoveryServices/vaults/securitySettings.immutabilitySettings.state",
                "notEquals": "Locked"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:30.102034+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:31:30.102034+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Encryption at rest with Microsoft-managed keys must be activated (default)",
    "displayName": "RSV-09: Encryption at rest with Microsoft-managed keys must be activated (default)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:30.1648066Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-15T17:10:14.649009Z"
    },
    "mode": "All",
    "name": "RSV-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "exists": "true",
            "field": "Microsoft.RecoveryServices/vaults/encryption.keyVaultProperties.keyUri"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:30.118967+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-15T17:10:14.635449+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled for Core Azure Backup Data and Addon Azure Backup Policy Data categories",
    "displayName": "RSV-14: Diagnostics settings must be enabled for Core Azure Backup Data and Addon Azure Backup Policy Data categories",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:30.2342051Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-13T14:13:45.4224967Z"
    },
    "mode": "All",
    "name": "RSV-14-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.RecoveryServices/vaults",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "CoreAzureBackup",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:29.943417+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-13T14:13:45.406530+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Vault in PRD must rely on a Geo-redundant (GRS) storage account",
    "displayName": "RSV-10: Vault in PRD must rely on a Geo-redundant (GRS) storage account",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:30.3610931Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "field": "Microsoft.RecoveryServices/vaults/redundancySettings.standardTierStorageRedundancy",
            "notEquals": "GeoRedundant"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:30.279734+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:31:30.279734+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource Guard protection must be enabled for PRD recovery service vaults",
    "displayName": "RSV-04: Resource Guard protection must be enabled for PRD recovery service vaults",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:30.4874966Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "field": "Microsoft.RecoveryServices/vaults/securitySettings.multiUserAuthorization",
            "notEquals": "Enabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:30.380664+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:31:30.380664+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Cross Subscription Restore must be enabled in PRD",
    "displayName": "RSV-01: Cross Subscription Restore must be enabled in PRD",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:30.5415813Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.RecoveryServices/vaults/restoreSettings.crossSubscriptionRestoreSettings"
              },
              {
                "field": "Microsoft.RecoveryServices/vaults/restoreSettings.crossSubscriptionRestoreSettings.crossSubscriptionRestoreState",
                "notEquals": "Enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:30.438523+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:31:30.438523+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Always-on soft-delete must be enabled with a minimum period of 14 days",
    "displayName": "RSV-11: Always-on soft-delete must be enabled with a minimum period of 14 days",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:31:30.5981331Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.RecoveryServices/vaults/securitySettings.softDeleteSettings"
              },
              {
                "anyOf": [
                  {
                    "field": "Microsoft.RecoveryServices/vaults/securitySettings.softDeleteSettings.softDeleteState",
                    "notEquals": "Enabled"
                  },
                  {
                    "field": "Microsoft.RecoveryServices/vaults/securitySettings.softDeleteSettings.softDeleteRetentionPeriodInDays",
                    "less": 14
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:31:30.526076+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:31:30.526076+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Vault immutability must be enabled in PRD",
    "displayName": "RSV-12: Vault immutability must be enabled in PRD",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:33:04.4308001Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-17T08:13:47.1121068Z"
    },
    "mode": "All",
    "name": "RSV-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.RecoveryServices/vaults/securitySettings.immutabilitySettings"
              },
              {
                "equals": "Disabled",
                "field": "Microsoft.RecoveryServices/vaults/securitySettings.immutabilitySettings.state"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:33:04.296799+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-17T08:13:47.100527+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public network access must be disabled",
    "displayName": "RSV-07: Public network access must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:33:04.8221843Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "field": "Microsoft.RecoveryServices/vaults/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:33:04.682023+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:33:04.682023+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "A private endpoint must be used",
    "displayName": "RSV-06: A private endpoint must be used",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/RSV-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-01T15:33:05.5223718Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "RSV-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.RecoveryServices/vaults",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.RecoveryServices/vaults/privateEndpointConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.RecoveryServices/vaults/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "equals": "Succeeded",
                    "field": "Microsoft.RecoveryServices/vaults/privateEndpointConnections[*].provisioningState"
                  }
                ]
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-01T15:33:05.435630+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:33:05.435630+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled",
    "displayName": "VAULT-09 - Diagnostics settings must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-22T14:39:12.8806391Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-28T14:56:00.0246251Z"
    },
    "mode": "All",
    "name": "VAULT-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Keyvault/vaults",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category",
                        "in": [
                          "AuditEvent",
                          "AzurePolicyEvaluationDetails"
                        ]
                      }
                    ]
                  }
                },
                "equals": 2
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-22T14:39:12.792323+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-28T14:55:59.973735+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Firewall must be enabled and allow only access of Github runners hosted in Saint-Gobain (APPIO)",
    "displayName": "VAULT-26 - ACL should allow only Github runners IPs (APPIO)",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/VAULT-26-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-16T13:06:29.3984105Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VAULT-26-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "field": "Microsoft.Keyvault/vaults/createMode",
            "notEquals": "recover"
          },
          {
            "in": [
              "APPIO"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.KeyVault/vaults/publicNetworkAccess",
            "notEquals": "Disabled"
          },
          {
            "anyOf": [
              {
                "Exists": "False",
                "field": "Microsoft.KeyVault/vaults/networkAcls"
              },
              {
                "Equals": "Allow",
                "field": "Microsoft.KeyVault/vaults/networkAcls.defaultAction"
              },
              {
                "count": {
                  "field": "Microsoft.KeyVault/vaults/networkAcls.ipRules[*]",
                  "where": {
                    "notEquals": true,
                    "value": "[ipRangeContains('192.109.140.0/24', current('Microsoft.KeyVault/vaults/networkAcls.ipRules[*].value'))]"
                  }
                },
                "notequals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-16T13:06:29.225297+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-16T13:06:29.225297+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any NSG Creation/update External Flows if they are Non-Bussiness and not in SGEC rules Default's",
    "displayName": "SGEC-APPE-05-EXTERNAL",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-05-EXTERNAL-new",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-18T13:16:50.6194903Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-20T15:12:15.6858167Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-05-EXTERNAL-new",
    "parameters": {
      "SGEC-external": {
        "allowedValues": null,
        "defaultValue": [
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromBastion",
            "priority": 200,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromJumpbox",
            "priority": 205,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "DenyRDPSSHfromPublicIP",
            "priority": 210,
            "protocol": "TCP",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "DenyBackendToFrontend",
            "priority": 215,
            "protocol": "*",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "AllowAllInbound",
            "priority": 999,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Outbound",
            "name": "AllowAllOutbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to Add/Replace to NSG",
          "displayName": "SGEC Default Security Rules",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "ipRegions": {
        "allowedValues": null,
        "defaultValue": {
          "Bastion": [
            "10.185.0.128/26",
            "10.34.0.128/26"
          ],
          "External": [
            "10.185.128.0/19",
            "10.34.128.0/19"
          ],
          "FirewallRanges": [
            "10.34.0.41",
            "10.34.0.42"
          ],
          "IncludedRegions": [
            "eastus",
            "westeurope"
          ],
          "Internal": [
            "10.185.160.0/19",
            "10.34.160.0/19"
          ],
          "jumpbox": [
            "10.185.36.224/27",
            "10.34.32.64/27"
          ]
        },
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Ranges based on regions",
          "strongType": null
        },
        "type": "Object"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming  conventionfrom BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      },
      "subnet": {
        "allowedValues": null,
        "defaultValue": [
          "internal",
          "external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Subnet Naming convention",
          "displayName": "Subnet Name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          },
          {
            "notequals": 0,
            "value": "[length(field('Microsoft.Network/networkSecurityGroups/securityRules[*]'))]"
          },
          {
            "count": {
              "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
              "where": {
                "allof": [
                  {
                    "anyof": [
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                        "greater": 2999
                      },
                      {
                        "allof": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                            "greater": 199
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                            "less": 1000
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "anyof": [
                      {
                        "allof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'), 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))))]",
                            "notequals": -1
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name",
                            "notIn": [
                              "DenyBackendToFrontend",
                              "AllowRDPSSHfromBastion",
                              "AllowRDPSSHfromJumpbox",
                              "AllowFWToFrontend"
                            ]
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'DenyBackendToFrontend', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "notequals": -1
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsExternal",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend')),ipRangeContains(current('ipRegionsExternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsInternal",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend')),ipRangeContains(current('ipRegionsInternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "equals": "DenyBackendToFrontend",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "anyof": [
                              {
                                "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromJumpbox', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes','destinationAddressPrefix',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')), createarray(),'destinationAddressPrefixes',createarray()))]",
                                "notequals": -1
                              },
                              {
                                "count": {
                                  "name": "ipRegionsJumpbox",
                                  "value": "[parameters('ipRegions').Jumpbox]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowRDPSSHfromJumpbox')),ipRangeContains(current('ipRegionsJumpbox'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "notequals": "[length(parameters('ipRegions').Jumpbox)]"
                              }
                            ]
                          },
                          {
                            "equals": "AllowRDPSSHfromJumpbox",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "anyof": [
                              {
                                "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromBastion', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'sourceAddressPrefixes', createarray(),'destinationAddressPrefixes',createarray()))]",
                                "notequals": -1
                              },
                              {
                                "count": {
                                  "name": "ipRegionsBastion",
                                  "value": "[parameters('ipRegions').Bastion]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowRDPSSHfromBastion')),ipRangeContains(current('ipRegionsBastion'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "notequals": "[length(parameters('ipRegions').Bastion)]"
                              }
                            ]
                          },
                          {
                            "equals": "AllowRDPSSHfromBastion",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "anyof": [
                              {
                                "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowFWToFrontend', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))))]",
                                "equals": -1
                              },
                              {
                                "count": {
                                  "name": "ipRegionsFirewall",
                                  "value": "[parameters('ipRegions').FirewallRanges]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowFWToFrontend')),ipRangeContains(current('ipRegionsFirewall'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "notequals": "[length(parameters('ipRegions').FirewallRanges)]"
                              },
                              {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                  "where": {
                                    "Greater": 0,
                                    "count": {
                                      "name": "AllowedIP",
                                      "value": "[parameters('ipRegions').FirewallRanges]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowFWToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')))),ipRangeContains(current('AllowedIP'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]'))]"
                              }
                            ]
                          },
                          {
                            "equals": "AllowFWToFrontend",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "notequals": "[length(parameters('SGEC-external'))]"
          },
          {
            "anyof": [
              {
                "contains": "[parameters('subnet')[1]]",
                "field": "Microsoft.Network/networkSecurityGroups/subnets[*].id"
              },
              {
                "field": "name",
                "like": "[concat(parameters('nsgName')[1],'*')]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-18T13:16:50.413448+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T15:12:15.648285+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any SecurityRule Creation/update if they are Non-Bussiness and not in SGEC rules Default's External flow",
    "displayName": "SGEC-APPE-03-EXTERNAL",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-03-EXTERNAL-new",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-18T13:16:51.2741405Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-20T15:12:15.7704113Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-03-EXTERNAL-new",
    "parameters": {
      "SGEC-external": {
        "allowedValues": null,
        "defaultValue": [
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromBastion",
            "priority": 200,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromJumpbox",
            "priority": 205,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "DenyRDPSSHfromPublicIP",
            "priority": 210,
            "protocol": "TCP",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "DenyBackendToFrontend",
            "priority": 215,
            "protocol": "*",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "AllowAllInbound",
            "priority": 999,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Outbound",
            "name": "AllowAllOutbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to Add/Replace to NSG",
          "displayName": "SGEC Default Security Rules",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "ipRegions": {
        "allowedValues": null,
        "defaultValue": {
          "Bastion": [
            "10.185.0.128/26",
            "10.34.0.128/26"
          ],
          "External": [
            "10.185.128.0/19",
            "10.34.128.0/19"
          ],
          "FirewallRanges": [
            "10.34.0.41",
            "10.34.0.42"
          ],
          "IncludedRegions": [
            "eastus",
            "westeurope"
          ],
          "Internal": [
            "10.185.160.0/19",
            "10.34.160.0/19"
          ],
          "jumpbox": [
            "10.185.36.224/27",
            "10.34.32.64/27"
          ]
        },
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Ranges based on regions",
          "strongType": null
        },
        "type": "Object"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming  conventionfrom BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups/SecurityRules",
            "field": "type"
          },
          {
            "anyof": [
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                "greater": 2999
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                    "greater": 199
                  },
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                    "less": 1000
                  }
                ]
              }
            ]
          },
          {
            "allof": [
              {
                "anyof": [
                  {
                    "allof": [
                      {
                        "Value": "[indexof(parameters('SGEC-external'), createObject('name', field('name'), 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes'))))]",
                        "equals": -1
                      },
                      {
                        "field": "name",
                        "notIn": [
                          "DenyBackendToFrontend",
                          "AllowRDPSSHfromBastion",
                          "AllowRDPSSHfromJumpbox",
                          "AllowFWToFrontend"
                        ]
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromBastion', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Bastion]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowRDPSSHfromBastion')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Bastion)]"
                          }
                        ]
                      },
                      {
                        "equals": "AllowRDPSSHfromBastion",
                        "field": "name"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromJumpbox', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Jumpbox]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowRDPSSHfromJumpbox')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Jumpbox)]"
                          }
                        ]
                      },
                      {
                        "equals": "AllowRDPSSHfromJumpbox",
                        "field": "name"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowFWToFrontend', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes'))))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').FirewallRanges]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowFWToFrontend')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').FirewallRanges)]"
                          },
                          {
                            "count": {
                              "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                              "where": {
                                "count": {
                                  "name": "AllowedIP",
                                  "value": "[parameters('ipRegions').FirewallRanges]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'AllowFWToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')))),ipRangeContains(current('AllowedIP'), current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "equals": "[length(parameters('ipRegions').FirewallRanges)]"
                              }
                            },
                            "notequals": 0
                          }
                        ]
                      },
                      {
                        "equals": "AllowFWToFrontend",
                        "field": "name"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'DenyBackendToFrontend', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix'))),equals(field('name'),'DenyBackendToFrontend')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'DenyBackendToFrontend')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          }
                        ]
                      },
                      {
                        "equals": "DenyBackendToFrontend",
                        "field": "name"
                      }
                    ]
                  }
                ]
              },
              {
                "contains": "[concat('networkSecurityGroups/',parameters('nsgName')[1])]",
                "field": "id"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-18T13:16:50.889190+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T15:12:15.679907+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for automation account",
    "displayName": "DIAG-AUT: Enable logging  for Automation Account to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DIAG-AUT-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-02T12:20:29.1594232Z",
      "policyManagement": {
        "communicationDate": "2024-09-24T00:00:00.6702647Z",
        "effectDate": "2024-10-01T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-16T11:15:56.2035083Z"
    },
    "mode": "All",
    "name": "DIAG-AUT-sgct",
    "parameters": {
      "EventHubAuthorizationRuleName": {
        "allowedValues": null,
        "defaultValue": "/authorizationrules/RootManageSharedAccessKey",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "Authorization Rule Name to access the Event Hub",
          "displayName": "Authorizarion Rule Name to access the Event Hub",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubName": {
        "allowedValues": null,
        "defaultValue": "evh-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "EventHubNamespaceName": {
        "allowedValues": null,
        "defaultValue": "/providers/Microsoft.EventHub/namespaces/evh-ns-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "ResourceGroupName": {
        "allowedValues": null,
        "defaultValue": "/subscriptions/ab883f14-0eb6-480b-995f-4b6340159245/resourcegroups/rg-security-governance-prd-",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": true,
          "description": "first part to retrieve the Event Hub corresponding resource group",
          "displayName": "first part to retrieve the Event Hub corresponding resource group",
          "strongType": null
        },
        "type": "String"
      },
      "diagnosticSettingName": {
        "allowedValues": null,
        "defaultValue": "EventHub",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic Setting Name",
          "displayName": "Diagnostic Setting Name",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Automation/automationAccounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "EventHubAuthorizationRuleName": {
                  "value": "[parameters('EventHubAuthorizationRuleName')]"
                },
                "EventHubName": {
                  "value": "[parameters('EventHubName')]"
                },
                "EventHubNamespaceName": {
                  "value": "[parameters('EventHubNamespaceName')]"
                },
                "ResourceGroupName": {
                  "value": "[parameters('ResourceGroupName')]"
                },
                "diagnosticSettingName": {
                  "value": "[parameters('diagnosticSettingName')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "EventHubAuthorizationRuleName": {
                    "type": "string"
                  },
                  "EventHubName": {
                    "type": "string"
                  },
                  "EventHubNamespaceName": {
                    "type": "string"
                  },
                  "ResourceGroupName": {
                    "type": "string"
                  },
                  "diagnosticSettingName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('resourceName'), '-', parameters('diagnosticSettingName'))]",
                    "properties": {
                      "eventHubAuthorizationRuleId": "[concat(parameters('ResourceGroupName'),parameters('location'),parameters('EventHubNamespaceName'),parameters('location'),parameters('EventHubAuthorizationRuleName'))]",
                      "eventHubName": "[concat(parameters('EventHubName'),parameters('location'))]",
                      "logs": [
                        {
                          "category": "JobLogs",
                          "enabled": true
                        },
                        {
                          "category": "DSCNodeStatus",
                          "enabled": true
                        },
                        {
                          "category": "AuditEvent",
                          "enabled": true
                        }
                      ],
                      "metrics": []
                    },
                    "type": "Microsoft.Automation/automationAccounts/providers/diagnosticSettings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category",
                        "in": [
                          "JobLogs",
                          "DSCNodeStatus",
                          "AuditEvent"
                        ]
                      }
                    ]
                  }
                },
                "equals": 3
              },
              {
                "equals": "[concat(parameters('ResourceGroupName'),field('location'),parameters('EventHubNamespaceName'),field('location'),parameters('EventHubAuthorizationRuleName'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubAuthorizationRuleId"
              },
              {
                "equals": "[concat(parameters('EventHubName'),field('location'))]",
                "field": "Microsoft.Insights/diagnosticSettings/eventHubName"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-02T12:20:29.093181+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T11:15:56.216007+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Should only be updated via an Azure DevOps / GitHub pipeline or via a Resource Management template",
    "displayName": "ADF-14: Production factories must not have a Git repository associated with them",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/ADF-14-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T09:39:48.6146093Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-19T10:54:52.6054134Z"
    },
    "mode": "All",
    "name": "ADF-14-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "in": [
                  "PRD",
                  "PROD",
                  "PPR",
                  "PPRD",
                  "PPROD",
                  "PREPROD"
                ],
                "value": "[toUpper(subscription().tags['sg_Subscription_Environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPR",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "like": "*-PREPROD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          },
          {
            "exists": "true",
            "field": "Microsoft.DataFactory/factories/repoConfiguration.repositoryName"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T09:39:48.555258+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T10:54:52.581379+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "'sg_Resource_ControlTower_Profile' : 'APPIO - Single deployment', 'APPIO - Elastic pool deployment'",
    "displayName": "DB-SQL-TAG-05: For 'APPIO', 'sg_Resource_ControlTower_Profile' : 'APPIO - Single deployment', 'APPIO - Elastic pool deployment'",
    "id": "/providers/Microsoft.Management/managementGroups/e339bd4b-2e3b-4035-a452-2112d502f2ff/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-TAG-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-18T07:53:12.9232873Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.2482177Z"
    },
    "mode": "All",
    "name": "DB-SQL-TAG-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "APPIO"
        ],
        "defaultValue": [
          "APPIO"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagValue": {
        "allowedValues": [
          "APPIO - Single deployment",
          "APPIO - Elastic pool deployment"
        ],
        "defaultValue": [
          "APPIO - Single deployment",
          "APPIO - Elastic pool deployment"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "in": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-18T07:53:12.873167+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.184997+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use case, specify the Data confidentiality level in the current use case (sg_Resource_ControlTower_Confidentiality=C0,C1,C2).",
    "displayName": "TAG-01-ENFORCE : Tag sg_Resource_ControlTower_Confidentiality 'C3' value must be replaced by 'C2'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/TAG-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T14:42:01.4794365Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:15:14.5979312Z"
    },
    "mode": "Indexed",
    "name": "TAG-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled",
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "C3",
          "c3"
        ],
        "defaultValue": [
          "C3",
          "c3"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "exists": "true",
            "field": "[concat('tags[', parameters('tagName'), ']')]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "[concat('tags[', parameters('tagName'), ']')]",
              "operation": "addOrReplace",
              "value": "C2"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T14:42:01.394716+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:15:14.566191+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use case, specify the sg_ControlTower_SnowGroup in the current use case (sg_ControlTower_SnowGroup) according to Hardening Guides.",
    "displayName": "TAG-06-ENFORCE : Tag sg_ControlTower_SnowGroup name tag must be set ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/TAG-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T14:42:01.5195214Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:57:06.7108224Z"
    },
    "mode": "Indexed",
    "name": "TAG-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled",
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_ControlTower_SnowGroup",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "exists": "false",
                "field": "[concat('tags[', parameters('tagName'), ']')]"
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.Resources/subscriptions",
                "field": "type"
              },
              {
                "exists": "true",
                "field": "[concat('tags[', parameters('tagName'), ']')]"
              },
              {
                "field": "[concat('tags[', parameters('tagName'), ']')]",
                "notLike": "P06-*"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "conflictEffect": "audit",
          "operations": [
            {
              "field": "[concat('tags[', parameters('tagName'), ']')]",
              "operation": "addOrReplace",
              "value": "P06-DSI-Groupe-Azure-Sentinel"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T14:42:01.425970+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:57:06.685819+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use-cases, ACR should be accessible only through a secure private endpoint",
    "displayName": "ACR-16 - In all use-cases, ACR should be accessible only through a secure private endpoint",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-16-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T16:14:23.0786037Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:50:45.3013917Z"
    },
    "mode": "All",
    "name": "ACR-16-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "equals": "Premium",
            "field": "Microsoft.ContainerRegistry/registries/sku.name"
          },
          {
            "count": {
              "field": "Microsoft.ContainerRegistry/registries/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.ContainerRegistry/registries/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T16:14:22.979473+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:50:45.250051+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol' is 'NFS', 'Root Squash' must be selected",
    "displayName": "FILE-05: If 'sg_Resource_ControlTower_Protocol' is 'NFS', 'Root Squash' must be selected",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T16:14:23.2164068Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:41:31.1966169Z"
    },
    "mode": "All",
    "name": "FILE-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "equals": "NFS",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/fileServices/shares/rootSquash",
            "notEquals": "rootSquash"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T16:14:23.088839+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:41:31.161223+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "App Service FTP based deployment must be disabled (FTPS is allowed)",
    "displayName": "WEBA-22-ENFORCE: App Service FTP based deployment must be disabled (FTPS is allowed)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/WEBA-22-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-01T12:24:07.0234889Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:26:01.5442149Z"
    },
    "mode": "All",
    "name": "WEBA-22-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "equals": "AllAllowed",
            "field": "Microsoft.Web/sites/siteConfig.ftpsState"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-01T12:24:06.925482+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:26:01.438896+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For Azure Container Apps tagged availability A2 or higher , 'Zone redundancy' feature must be enabled",
    "displayName": "ACA-02: For Azure Container Apps tagged availability A2 or higher , 'Zone redundancy' feature must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACA-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T15:21:24.6592628Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:00:09.0679308Z"
    },
    "mode": "All",
    "name": "ACA-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "availability",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Tag Sub Name",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "A2",
          "A3",
          "A4"
        ],
        "defaultValue": [
          "A2",
          "A3",
          "A4"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.App/managedEnvironments",
            "field": "type"
          },
          {
            "in": "[parameters('tagValue')]",
            "value": "[toUpper(subscription().tags[parameters('tagName')])]"
          },
          {
            "field": "Microsoft.App/managedEnvironments/zoneRedundant",
            "notEquals": true
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T15:21:24.603795+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:00:09.028122+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only 'Workload profiles architecture' type must be used",
    "displayName": "ACA-13: Only 'Workload profiles architecture' type must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACA-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T15:21:24.9531056Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:12:10.4264093Z"
    },
    "mode": "All",
    "name": "ACA-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.App/managedEnvironments",
            "field": "type"
          },
          {
            "equals": "",
            "field": "Microsoft.App/managedEnvironments/workloadProfiles"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T15:21:24.869426+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:12:10.333985+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "'InternalOnly' setting must be set to true on all Azure Container Environnements (Networking : internal-only access)",
    "displayName": "ACA-03: 'InternalOnly' setting must be set to true on all Azure Container Environnements",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACA-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T15:21:24.9961111Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:30:43.5361049Z"
    },
    "mode": "All",
    "name": "ACA-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.App/managedEnvironments",
            "field": "type"
          },
          {
            "field": "Microsoft.App/managedEnvironments/vnetConfiguration.internal",
            "notEquals": true
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T15:21:24.900676+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:30:43.502496+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "All activity logs must be monitored and exported to the existing central cybersecurity LAW (Log Analytics Workspace)",
    "displayName": "ACA-05: All activity logs must be monitored and exported to the existing central cybersecurity LAW",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACA-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T15:21:25.1662334Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:53:55.947729Z"
    },
    "mode": "All",
    "name": "ACA-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.App/managedEnvironments",
            "field": "type"
          },
          {
            "exists": false,
            "field": "Microsoft.App/managedEnvironments/appLogsConfiguration.destination"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T15:21:25.103912+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:53:55.921414+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure defender for storage must be enabled",
    "displayName": "STO-52: Azure defender for storage must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-52-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.5599808Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:09:06.6478178Z"
    },
    "mode": "All",
    "name": "STO-52-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Standard",
            "field": "Microsoft.Security/pricings/pricingTier"
          },
          "existenceScope": "subscription",
          "name": "StorageAccounts",
          "type": "Microsoft.Security/pricings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.498454+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:09:06.539288+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'confidentiality' is >= C2, 'High business impact workspace' option must be selected",
    "displayName": "AML-01 - If 'confidentiality' is >= C2, 'High business impact workspace' option must be selected",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.6086231Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:12:10.504901Z"
    },
    "mode": "All",
    "name": "AML-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces",
            "field": "type"
          },
          {
            "equals": "false",
            "field": "Microsoft.MachineLearningServices/workspaces/hbiWorkspace"
          },
          {
            "equals": "C2",
            "value": "[toUpper(subscription().tags['confidentiality'])]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.529705+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:12:10.427731+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Premium pricing tier must be chosen",
    "displayName": "SBUS-17: Premium pricing tier must be chosen",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SBUS-17-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.709412Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:38:26.1362766Z"
    },
    "mode": "All",
    "name": "SBUS-17-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.ServiceBus/namespaces/sku.tier",
                "notEquals": "Premium"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.607833+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:38:26.084756+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For APPI/APPS, a Private Endpoint must be used",
    "displayName": "COS-DB-15-ENFORCE: For APPI/APPS, a Private Endpoint must be used (no public access)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/COS-DB-15-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.7668981Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:50:47.6117892Z"
    },
    "mode": "All",
    "name": "COS-DB-15-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.701581+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:50:47.578863+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure defender for storage must be enabled",
    "displayName": "STO-52-ENFORCE: Azure defender for storage must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-52-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.7860795Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.37752Z"
    },
    "mode": "All",
    "name": "STO-52-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Deny"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "APPI"
        ],
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "In": "[parameters('tagValue')]",
            "field": "tags.sg_Resource_ControlTower_Profile"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "storageAccountName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "storageAccountName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2019-01-01",
                    "name": "[concat(parameters('storageAccountName'), '/Microsoft.Security/current')]",
                    "properties": {
                      "isEnabled": true
                    },
                    "type": "Microsoft.Storage/storageAccounts/providers/advancedThreatProtectionSettings"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Security/advancedThreatProtectionSettings/isEnabled"
          },
          "name": "current",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Security/advancedThreatProtectionSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.717205+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.341257+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable georedundency for A2 data and higher.",
    "displayName": "STO-53: Enable georedundency for A2 data and higher.",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-53-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.8265636Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:36:48.5698152Z"
    },
    "mode": "All",
    "name": "STO-53-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "in": [
              "A2",
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/sku.name",
            "notIn": [
              "Standard_RAGRS",
              "Standard_GRS"
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.764082+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:36:48.517058+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable georedundency for A2 data and higher.",
    "displayName": "STO-53-ENFORCE: Enable georedundency for A2 data and higher.",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-53-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.9028097Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:29:11.0387812Z"
    },
    "mode": "All",
    "name": "STO-53-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "in": [
              "A2",
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/sku.name",
            "notIn": [
              "Standard_RAGRS",
              "Standard_GRS"
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.779712+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:29:10.995392+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Built-in Admin user Access account must be disabled for use-case 1 : APPI & use-case 2 : APPS",
    "displayName": "ACR-24-ENFORCE-sgct - Built-in Admin user Access account must be disabled for use-case 1 : APPI & use-case 2 : APPS",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-24-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:50.9730683Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-23T09:17:58.1117706Z"
    },
    "mode": "All",
    "name": "ACR-24-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Modify"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "field": "tags.sg_Resource_ControlTower_Profile",
            "notIn": [
              "APPS-AML",
              "APPI-AML"
            ]
          },
          {
            "in": [
              "APPI",
              "APPS"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": true,
            "field": "Microsoft.ContainerRegistry/registries/adminUserEnabled"
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "Microsoft.ContainerRegistry/registries/adminUserEnabled",
              "operation": "addOrReplace",
              "value": false
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.639083+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-23T09:17:58.067686+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System-assigned managed identity must be used for use-case 1 : APPI & use-case 2 : APPS (Private access).",
    "displayName": "ACR-23-sgct - System-assigned managed identity must be used for use-case 1 : APPI & use-case 2 : APPS (Private access).",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-23-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:34:51.0300924Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:22:55.5960128Z"
    },
    "mode": "All",
    "name": "ACR-23-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPS"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:34:50.889089+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:22:55.519500+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Premium pricing tier must be chosen",
    "displayName": "SBUS-17-ENFORCE: Premium pricing tier must be chosen",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SBUS-17-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:36:23.0001431Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-09T09:36:48.7705166Z"
    },
    "mode": "All",
    "name": "SBUS-17-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.ServiceBus/namespaces/sku.tier",
                "notEquals": "Premium"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:36:22.890229+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-09T09:36:48.745564+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service bus namespace must have a system-assigned managed identity",
    "displayName": "SBUS-20: Service bus namespace must have a system-assigned managed identity",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SBUS-20-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:36:23.3860597Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-16T16:22:27.2715445Z"
    },
    "mode": "All",
    "name": "SBUS-20-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "equals": "Premium",
            "field": "Microsoft.ServiceBus/namespaces/sku.tier"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:36:23.327726+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-16T16:22:27.251407+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Disabling Public Network Access will require to put the service in a virtual network (APPI, APPS)",
    "displayName": "APIM-18: Disable Public Network Access (APPI, APPS, APIM4SG)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:36:23.5910319Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T12:19:34.5756584Z"
    },
    "mode": "All",
    "name": "APIM-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.ApiManagement/service/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:36:23.499602+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T12:19:34.559845+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Soft delete must be activated",
    "displayName": "STO-54: Soft delete must be activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-54-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:36:23.7904395Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-26T11:15:53.2913064Z"
    },
    "mode": "All",
    "name": "STO-54-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": true,
            "value": "[if(equals(length(resourcegroup().managedBy),0),bool('true'),bool('false'))]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Storage/storageAccounts/blobServices/default.containerDeleteRetentionPolicy.enabled"
                  },
                  {
                    "equals": true,
                    "field": "Microsoft.Storage/storageAccounts/blobServices/default.deleteRetentionPolicy.enabled"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Storage/storageAccounts/blobServices/default.containerDeleteRetentionPolicy.enabled"
                  },
                  {
                    "equals": true,
                    "value": "[field('Microsoft.Storage/storageAccounts/isHnsEnabled')]"
                  }
                ]
              }
            ]
          },
          "type": "Microsoft.Storage/storageAccounts/blobServices"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:36:23.468351+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-26T11:15:53.265237+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service bus namespace must have a system-assigned managed identity",
    "displayName": "SBUS-20-ENFORCE: Service bus namespace must have a system-assigned managed identity",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SBUS-20-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:36:23.8445005Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:49:15.1131618Z"
    },
    "mode": "All",
    "name": "SBUS-20-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "equals": "Premium",
            "field": "Microsoft.ServiceBus/namespaces/sku.tier"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "namespaceName": {
                  "value": "[field('name')]"
                },
                "resourceGroupName": {
                  "value": "[resourceGroup().name]"
                }
              },
              "template": {
                "$schema": "https://urldefense.com/v3/__https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json*__;Iw!!KGJDJXFb8WjZ!G0dJ27L35xZqkf2pOe7dlEsmvJFVU0SxInOYNwVkDaNBsLGAA0ErN77Et8l0kTwDzyGzx-2AD5WkBmyVKkF5sXpvjYzhWrL-DaE$ ",
                "contentVersion": "1.0.0.0",
                "functions": [],
                "outputs": {},
                "parameters": {
                  "guidValue": {
                    "defaultValue": "[newGuid()]",
                    "type": "string"
                  },
                  "namespaceName": {
                    "type": "string"
                  },
                  "resourceGroupName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2020-06-01",
                    "name": "[variables('resourceGetDeploymentName')]",
                    "properties": {
                      "mode": "Incremental",
                      "template": {
                        "$schema": "https://urldefense.com/v3/__http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json*__;Iw!!KGJDJXFb8WjZ!G0dJ27L35xZqkf2pOe7dlEsmvJFVU0SxInOYNwVkDaNBsLGAA0ErN77Et8l0kTwDzyGzx-2AD5WkBmyVKkF5sXpvjYzhxqwPCDE$ ",
                        "contentVersion": "1.0.0.0",
                        "outputs": {
                          "namespace": {
                            "type": "object",
                            "value": "[reference(resourceId(parameters('resourceGroupName'), 'Microsoft.ServiceBus/namespaces', parameters('namespaceName')), '2022-10-01-preview', 'Full')]"
                          }
                        },
                        "resources": []
                      }
                    },
                    "type": "Microsoft.Resources/deployments"
                  },
                  {
                    "apiVersion": "2020-06-01",
                    "name": "[variables('resourceUpdateDeploymentName')]",
                    "properties": {
                      "expressionEvaluationOptions": {
                        "scope": "inner"
                      },
                      "mode": "Incremental",
                      "parameters": {
                        "namespaceContent": {
                          "value": "[reference(variables('resourceGetDeploymentName')).outputs.namespace.value]"
                        },
                        "updateDeploymentNamespaceName": {
                          "value": "[parameters('namespaceName')]"
                        }
                      },
                      "template": {
                        "$schema": "https://urldefense.com/v3/__https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json*__;Iw!!KGJDJXFb8WjZ!G0dJ27L35xZqkf2pOe7dlEsmvJFVU0SxInOYNwVkDaNBsLGAA0ErN77Et8l0kTwDzyGzx-2AD5WkBmyVKkF5sXpvjYzhWrL-DaE$ ",
                        "contentVersion": "1.0.0.0",
                        "outputs": {
                          "hasBothAssigned": {
                            "type": "bool",
                            "value": "[variables('hasBothAssigned')]"
                          },
                          "hasIdentity": {
                            "type": "bool",
                            "value": "[variables('hasIdentity')]"
                          },
                          "hasOnlySystemAssigned": {
                            "type": "bool",
                            "value": "[variables('hasOnlySystemAssigned')]"
                          },
                          "hasOnlyUserAssigned": {
                            "type": "bool",
                            "value": "[variables('hasOnlyUserAssigned')]"
                          },
                          "hasSystemAssignedIdentity": {
                            "type": "bool",
                            "value": "[variables('hasSystemAssignedIdentity')]"
                          },
                          "hasUserAssignedIdentity": {
                            "type": "bool",
                            "value": "[variables('hasUserAssignedIdentity')]"
                          },
                          "newIdentity": {
                            "type": "object",
                            "value": "[variables('identity')]"
                          },
                          "oldIdentity": {
                            "type": "string",
                            "value": "[variables('oldIdentityAsString')]"
                          }
                        },
                        "parameters": {
                          "namespaceContent": {
                            "type": "object"
                          },
                          "updateDeploymentNamespaceName": {
                            "type": "string"
                          }
                        },
                        "resources": [
                          {
                            "apiVersion": "2022-10-01-preview",
                            "identity": "[variables('identity')]",
                            "location": "[parameters('namespaceContent').location]",
                            "name": "[parameters('updateDeploymentNamespaceName')]",
                            "properties": "[parameters('namespaceContent').properties]",
                            "sku": "[if(contains(parameters('namespaceContent'), 'sku'), parameters('namespaceContent').sku, json('null'))]",
                            "tags": "[if(contains(parameters('namespaceContent'), 'tags'), parameters('namespaceContent').tags, json('null'))]",
                            "type": "Microsoft.ServiceBus/namespaces"
                          }
                        ],
                        "variables": {
                          "hasBothAssigned": "[and(variables('hasSystemAssignedIdentity'),variables('hasUserAssignedIdentity'))]",
                          "hasIdentity": "[contains(parameters('namespaceContent'),'identity')]",
                          "hasOnlySystemAssigned": "[and(variables('hasSystemAssignedIdentity'),not(variables('hasUserAssignedIdentity')))]",
                          "hasOnlyUserAssigned": "[and(not(variables('hasSystemAssignedIdentity')),variables('hasUserAssignedIdentity'))]",
                          "hasSystemAssignedIdentity": "[and(variables('hasIdentity'),contains(parameters('namespaceContent').identity.type,'SystemAssigned'))]",
                          "hasUserAssignedIdentity": "[and(variables('hasIdentity'),contains(parameters('namespaceContent').identity.type,'UserAssigned'))]",
                          "identity": "[if(variables('hasBothAssigned'),parameters('namespaceContent').identity,                          if(variables('hasOnlySystemAssigned'),parameters('namespaceContent').identity,                          if(variables('hasOnlyUserAssigned'),variables('identityUserAndSystemAssigned'),                          variables('identityOnlySystemAssigned'))))]",
                          "identityOnlySystemAssigned": {
                            "type": "SystemAssigned"
                          },
                          "identityUserAndSystemAssigned": "[if(variables('hasOnlyUserAssigned'),json(replace(variables('oldIdentityAsString'),'UserAssigned','SystemAssigned, UserAssigned')),json('null'))]",
                          "oldIdentityAsString": "[if(variables('hasIdentity'),string(parameters('namespaceContent').identity),'')]"
                        }
                      }
                    },
                    "type": "Microsoft.Resources/deployments"
                  }
                ],
                "variables": {
                  "resourceGetDeploymentName": "[concat('PolicyD-Get-', parameters('namespaceName'),uniqueString(parameters('guidValue')))]",
                  "resourceUpdateDeploymentName": "[concat('PolicyD-Update-', parameters('namespaceName'),uniqueString(parameters('guidValue')))]"
                }
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "contains": "SystemAssigned",
                "field": "identity.type"
              }
            ]
          },
          "name": "[field('name')]",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.ServiceBus/namespaces"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:36:23.390386+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:49:15.087388+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "NSG rules DenyRDPSSHfromAny, AllowRDPSSHfromJumpbox, AllowRDPSSHfromBastion must exist on the VM subnet",
    "displayName": "VM-18: NSG rules DenyRDPSSHfromAny, AllowRDPSSHfromJumpbox, AllowRDPSSHfromBastion must exist on the VM subnet",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T12:56:43.5608269Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:13:42.5136978Z"
    },
    "mode": "All",
    "name": "VM-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name",
                "notEquals": "DenyRDPSSHfromAny"
              },
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name",
                "notEquals": "AllowRDPSSHfromJumpbox"
              },
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name",
                "notEquals": "AllowRDPSSHfromBastion"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T12:56:43.423425+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:13:42.481336+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "OS and Data disks must be encrypted at rest",
    "displayName": "VM-05: OS and Data disks must be encrypted at rest",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T12:56:43.6122734Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:53:55.9807547Z"
    },
    "mode": "All",
    "name": "VM-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/disks",
            "field": "type"
          },
          {
            "exists": false,
            "field": "Microsoft.Compute/disks/encryption.type"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T12:56:43.470299+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:53:55.952665+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Microsoft Defender for Servers (plan 1 CSPM free tier) should be enabled in Production",
    "displayName": "VM-11: Microsoft Defender for Servers should be enabled in Production",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T12:56:43.6572494Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:50:47.6703934Z"
    },
    "mode": "All",
    "name": "VM-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": [
          "environment"
        ],
        "defaultValue": "environment",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "environment",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "prd"
        ],
        "defaultValue": "prd",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Compute/virtualMachines",
              "Microsoft.ClassicCompute/virtualMachines"
            ]
          },
          {
            "equals": "[parameters('tagValue')]",
            "value": "[subscription().tags[parameters('tagName')]]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Standard",
            "field": "Microsoft.Security/pricings/pricingTier"
          },
          "existenceScope": "subscription",
          "name": "virtualMachines",
          "type": "Microsoft.Security/pricings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T12:56:43.532802+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:50:47.625741+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System-assigned identity must be used",
    "displayName": "VM-10-ENFORCE: System-assigned identity must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-10-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T12:56:43.7481383Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-07T17:31:16.9490651Z"
    },
    "mode": "All",
    "name": "VM-10-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notContains": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T12:56:43.610929+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-07T17:31:16.923501+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "App Service Public access must be disabled",
    "displayName": "WEBA-24 - App Service Public access must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/WEBA-24-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-21T14:47:44.2803673Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-22T13:03:28.1759254Z"
    },
    "mode": "All",
    "name": "WEBA-24-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "notEquals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Web/sites/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-21T14:47:44.152809+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-22T13:03:28.147281+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private Endpoints for Azure File Share must only be attached to a backend subnet id",
    "displayName": "FILE-16: File Share private endpoint must only be attached to a backend subnet",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-16-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-14T13:34:23.36452Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-11-15T20:06:13.7972444Z"
    },
    "mode": "All",
    "name": "FILE-16-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/privateEndpoints",
            "field": "type"
          },
          {
            "equals": "APPE",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "count": {
              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "contains": "providers/Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId"
                  },
                  {
                    "contains": "file",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"
                  }
                ]
              }
            },
            "greater": 0
          },
          {
            "field": "Microsoft.Network/privateEndpoints/subnet.id",
            "notContains": "subnets/subnet-internal"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-14T13:34:23.131233+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-15T20:06:13.760485+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Access key must be disabled",
    "displayName": "FILE-15: Access key must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-15T20:06:13.9132298Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-26T14:46:32.6898133Z"
    },
    "mode": "All",
    "name": "FILE-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "equals": "APPS",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allof": [
              {
                "contains": "[split(field('id'),'/')[8]]",
                "field": "id"
              },
              {
                "equals": "false",
                "field": "Microsoft.Storage/storageAccounts/allowSharedKeyAccess"
              }
            ]
          },
          "type": "Microsoft.Storage/storageAccounts"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-15T20:06:13.807410+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-26T14:46:32.664692+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only 8.x versions of RHEL are authorized on the Cloud",
    "displayName": "VM-RH-02 - Only 8.x versions of RHEL are authorized on the Cloud",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-05T10:32:39.1504062Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VM-RH-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "like": "RedHat"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Compute/imageSku",
                "notLike": "8*"
              },
              {
                "count": {
                  "name": "digit",
                  "value": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "9"
                  ],
                  "where": {
                    "allOf": [
                      {
                        "notEquals": -1,
                        "value": "[indexOf(first(field('Microsoft.Compute/imageSku')), current('digit'))]"
                      },
                      {
                        "greater": "[indexOf(first(field('Microsoft.Compute/imageSku')), current('digit'))]",
                        "value": "[indexOf(first(field('Microsoft.Compute/imageSku')), '8')]"
                      }
                    ]
                  }
                },
                "greater": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-05T10:32:39.036150+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-12-05T10:32:39.036150+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Digital Twins must only accept traffic from Private Endpoints",
    "displayName": "DTW-05 : Azure Digital Twins must only accept traffic from Private Endpoints",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DTW-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-31T10:42:57.2591342Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DTW-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DigitalTwins/digitalTwinsInstances",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections"
              },
              {
                "count": {
                  "field": "Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections[*]"
                },
                "equals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-31T10:42:57.196270+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-31T10:42:57.196270+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Encryption at rest with Microsoft-managed keys must be activated (by default)",
    "displayName": "IOT-HUB-11: Encryption at rest with Microsoft-managed keys must be activated (by default)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-13T09:45:36.5306816Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Devices/IotHubs/encryption.keyVaultProperties[*]",
              "where": {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.Devices/IotHubs/encryption.keyVaultProperties[*].keyIdentifier"
                  },
                  {
                    "field": "Microsoft.Devices/IotHubs/encryption.keyVaultProperties[*].keyIdentifier",
                    "notequals": ""
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-13T09:45:36.445345+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-13T09:45:36.445345+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Encryption at rest with Microsoft-managed keys must be activated (by default)",
    "displayName": "IOT-HUB-13: Diagnostics settings must be enabled for audit category logs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-13T09:45:36.5193307Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "allOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                  },
                  {
                    "equals": "audit",
                    "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                  }
                ]
              }
            },
            "equals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-13T09:45:36.425034+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-13T09:45:36.425034+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure IoT Hub must use system-managed identity to send messages through custom endpoints",
    "displayName": "IOT-HUB-05: Azure IoT Hub must use system-managed identity to send messages through custom endpoints",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-13T09:45:36.795404Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-13T09:45:36.737141+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-13T09:45:36.737141+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Permissions for all authenticated users and groups option must be disabled",
    "displayName": "ADDS-03: Permissions for all authenticated users and groups option must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADDS-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-26T14:46:32.7360862Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-08T14:19:30.6478371Z"
    },
    "mode": "All",
    "name": "ADDS-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.Storage/storageAccounts/azureFilesIdentityBasedAuthentication"
              },
              {
                "equals": "AADDS",
                "field": "Microsoft.Storage/storageAccounts/azureFilesIdentityBasedAuthentication.directoryServiceOptions"
              },
              {
                "field": "Microsoft.Storage/storageAccounts/azureFilesIdentityBasedAuthentication.defaultSharePermission",
                "notEquals": "None"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-26T14:46:32.667609+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-08T14:19:30.592976+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoints in ASA Clusters for storage Accounts private connection",
    "displayName": "STMA-05-A: Private endpoints in ASA Clusters for storage Accounts private connection",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-05-A-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-11T16:54:45.3177504Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STMA-05-A-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.StreamAnalytics/clusters/privateEndpoints",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "SetUpComplete",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceId"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/privateEndpointConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Storage/storageAccounts/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "[concat('Microsoft.Network/privateEndpoints/',field('name'))]",
                    "field": "Microsoft.Storage/storageAccounts/privateEndpointConnections[*].privateEndpoint.id"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Storage/storageAccounts"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-11T16:54:45.255696+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-11T16:54:45.255696+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoints in ASA Clusters for SQL Databases private connection",
    "displayName": "STMA-05-C: Private endpoints in ASA Clusters for SQL Databases private connection",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-05-C-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-11T16:54:45.3348572Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STMA-05-C-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.StreamAnalytics/clusters/privateEndpoints",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "SetUpComplete",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "Microsoft.Sql/servers",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceId"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Sql/servers/privateEndpointConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Sql/servers/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "[concat('Microsoft.Network/privateEndpoints/',field('name'))]",
                    "field": "Microsoft.Sql/servers/privateEndpointConnections[*].privateEndpoint.id"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Sql/servers"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-11T16:54:45.264320+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-11T16:54:45.264320+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoints must be used to connect to allowed services, when deploying Stream Analytics Clusters",
    "displayName": "STMA-05-D: Private endpoints must be used to connect to allowed services, when deploying Stream Analytics Clusters",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-05-D-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-11T16:54:45.3054693Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STMA-05-D-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.StreamAnalytics/clusters/privateEndpoints",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "SetUpComplete",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "Microsoft.Devices/IotHubs",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceId"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Devices/IotHubs/privateEndpointConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Devices/IotHubs/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "[concat('Microsoft.Network/privateEndpoints/',field('name'))]",
                    "field": "Microsoft.Devices/IotHubs/privateEndpointConnections[*].privateEndpoint.id"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Devices/IotHubs"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-11T16:54:45.226921+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-11T16:54:45.226921+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Stream Analytics job must use system-assigned managed identity",
    "displayName": "STMA-02: Stream Analytics job must use system-assigned managed identity",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-11T16:56:16.9164563Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STMA-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.StreamAnalytics/streamingjobs",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-11T16:56:16.826822+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-11T16:56:16.826822+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoints must be used to connect to allowed services, when deploying SA Clusters",
    "displayName": "STMA-05: Private endpoints must be used to connect to allowed services, when deploying SA Clusters",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-11T16:56:16.8722075Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STMA-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.StreamAnalytics/clusters",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "SetUpComplete",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  }
                ]
              }
            },
            "notequals": 0
          },
          "type": "Microsoft.StreamAnalytics/clusters/privateEndpoints"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-11T16:56:16.797557+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-11T16:56:16.797557+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public Access must be disabled by using Microsoft Purview firewall",
    "displayName": "PVW-08-sgct : Public Access must be disabled by using Microsoft Purview firewall",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/PVW-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-13T10:52:04.1500743Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "PVW-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTypeValue": {
        "allowedValues": null,
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Allowed spoke type for this policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Purview/accounts",
            "field": "type"
          },
          {
            "in": "[parameters('spokeTypeValue')]",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.Purview/accounts/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-13T10:52:04.084806+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-13T10:52:04.084806+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public Access must be disabled by using Microsoft Purview firewall",
    "displayName": "PVW-08-ENFORCE-sgct : Public Access must be disabled by using Microsoft Purview firewall",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/PVW-08-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-13T10:52:04.3821037Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "PVW-08-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTypeValue": {
        "allowedValues": null,
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Allowed spoke type for this policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Purview/accounts",
            "field": "type"
          },
          {
            "in": "[parameters('spokeTypeValue')]",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.Purview/accounts/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-13T10:52:04.320404+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-13T10:52:04.320404+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Logic App must use system managed identity",
    "displayName": "LGC-03-sgct : Azure Logic App must use system managed identity ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:30:08.9939646Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LGC-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:30:08.903294+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-18T14:30:08.903294+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Logic App must only accept traffic from Private Endpoints",
    "displayName": "LGC-06-sgct : Azure Logic App must only accept traffic from Private Endpoints",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:30:09.0476156Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-30T13:09:49.0566788Z"
    },
    "mode": "All",
    "name": "LGC-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Approved",
            "field": "Microsoft.Web/sites/privateEndpointConnections/privateLinkServiceConnectionState.status"
          },
          "type": "Microsoft.Web/sites/privateEndpointConnections"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:30:08.938710+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-30T13:09:49.048094+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Logic App must disable public access",
    "displayName": "LGC-05-sgct : Azure Logic App must disable public access",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:30:09.0488743Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LGC-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "field": "Microsoft.Web/sites/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:30:08.969553+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-18T14:30:08.969553+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Consumption service plan must be forbidden for production environments",
    "displayName": "LGC-19-sgct : Consumption service plan must be forbidden for production environments ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-19-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:30:09.0093803Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LGC-19-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Logic/workflows",
            "field": "type"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:30:08.920060+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-18T14:30:08.920060+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Encryption at rest with Microsoft-managed keys must be activated (by default)",
    "displayName": "STO-55: Encryption at rest with Microsoft-managed keys must be activated (by default)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-55-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-26T15:39:06.6424132Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-55-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "Microsoft.Keyvault",
            "field": "Microsoft.Storage/storageAccounts/encryption.keySource"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-26T15:39:06.567169+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-26T15:39:06.567169+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using Logs category groups to route logs to a Log Analytics workspace for StreamAnalyticsJob",
    "displayName": "STMA-11: Enable logging by category group for StreamAnalyticsJob to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-04-08T14:05:51.1074417Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-08T15:24:23.4696845Z"
    },
    "mode": "All",
    "name": "STMA-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.StreamAnalytics/streamingjobs",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "allLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "anyOf": [
                          {
                            "equals": "Authoring",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          },
                          {
                            "equals": "Execution",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          }
                        ]
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 2
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-04-08T14:05:51.028666+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-08T15:24:23.452107+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "vNET rules must not be used",
    "displayName": "STO-65a: in APPI/APPE vNET rules must not be used and public access must be disabled ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-65a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-18T16:47:58.9525655Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-06-25T08:55:13.5857689Z"
    },
    "mode": "All",
    "name": "STO-65a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "name": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2023-01-01",
                    "location": "[parameters('location')]",
                    "name": "[parameters('name')]",
                    "properties": {
                      "networkAcls": {
                        "defaultAction": "Deny"
                      }
                    },
                    "type": "Microsoft.Storage/storageAccounts"
                  }
                ]
              }
            }
          },
          "evaluationDelay": "PT3M",
          "existenceCondition": {
            "equals": "Deny",
            "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction"
          },
          "name": "[field('name')]",
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Storage/storageAccounts"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-18T16:47:58.875258+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-25T08:55:13.559561+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System managed identity must be used on Azure Automation account",
    "displayName": "AUT-11-ENFORCE : System managed identity must be used on Azure Automation account",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AUT-11-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-17T09:56:50.6235365Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AUT-11-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Automation/automationAccounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "resourceName": {
                  "value": "[field('name')]"
                },
                "sku": {
                  "value": "[field('Microsoft.Automation/automationAccounts/sku.name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "resourceName": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2020-01-13-preview",
                    "identity": {
                      "type": "SystemAssigned"
                    },
                    "location": "[parameters('location')]",
                    "name": "[parameters('resourceName')]",
                    "properties": {
                      "disableLocalAuth": true,
                      "publicNetworkAccess": false,
                      "sku": {
                        "name": "[parameters('sku')]"
                      }
                    },
                    "type": "Microsoft.Automation/automationAccounts"
                  }
                ],
                "variables": {}
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "exists": "true",
                "field": "identity.type"
              },
              {
                "equals": "SystemAssigned",
                "field": "identity.type"
              }
            ]
          },
          "name": "[field('name')]",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Automation/automationAccounts"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-17T09:56:50.513163+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-17T09:56:50.513163+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "A private endpoint specific to the sub-resources (Blob) must be used",
    "displayName": "STO-50a : A private endpoint specific to the sub-resources (Blob) must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-50a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T09:20:59.6440516Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-08T12:13:51.6450958Z"
    },
    "mode": "All",
    "name": "STO-50a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "providers/Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId"
                  },
                  {
                    "equals": "['blob']",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"
                  },
                  {
                    "equals": "[split(current('Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId'),'/')[8]]",
                    "value": "[split(field('id'),'/')[8]]"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Network/privateEndpoints"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T09:20:59.570616+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-08T12:13:51.623663+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "A private endpoint specific to the sub-resources (Queue) must be used",
    "displayName": "STO-50d : A private endpoint specific to the sub-resources (Queue) must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-50d-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T09:22:30.8617754Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-50d-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "providers/Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId"
                  },
                  {
                    "equals": "['queue']",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"
                  },
                  {
                    "equals": "[split(current('Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId'),'/')[8]]",
                    "value": "[split(field('id'),'/')[8]]"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Network/privateEndpoints"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T09:22:30.785164+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T09:22:30.785164+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Subnet that contain a SEP for Storage Account, corresponding scope must be on the same subscription of subnet",
    "displayName": "SEP-03 - Subnet that contain a SEP for Storage Account, corresponding scope must be on the same subscription of subnet",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SEP-03-OXYGEN",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-26T09:33:05.8069799Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-26T12:17:07.5210949Z"
    },
    "mode": "All",
    "name": "SEP-03-OXYGEN",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks/subnets",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*]"
            },
            "notequals": 0
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*]",
              "where": {
                "equals": "Microsoft.Storage",
                "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*].service"
              }
            },
            "notequals": 0
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*]",
              "where": {
                "equals": true,
                "value": "[startsWith(string(first(field('Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*].id'))),concat('/subscriptions/', subscription().subscriptionId))]"
              }
            },
            "notEquals": "[length(field('Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*]'))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-26T09:33:05.704809+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-26T12:17:07.490311+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable MySQL  server parameters audit_log_enabled",
    "displayName": "DB-FLEX-MYSQL-06- Enable MySQL  server parameters audit_log_enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-06-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T11:10:50.6573911Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-06-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value"
          },
          "name": "audit_log_enabled",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T11:10:50.558128+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T11:10:50.558128+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing logging and monitoring, Advanced Data Security must be configured",
    "displayName": "DB-SQL-08: Advanced Data Security must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-08-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T16:34:24.8023698Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-SQL-08-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          },
          {
            "equals": "Microsoft.Sql/servers",
            "field": "type"
          },
          {
            "field": "kind",
            "notContains": "analytics"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Enabled",
            "field": "Microsoft.Sql/servers/securityAlertPolicies/state"
          },
          "name": "Default",
          "type": "Microsoft.Sql/servers/securityAlertPolicies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T16:34:24.671913+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T16:34:24.671913+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing data protection strategy, vulnerability assessment must be configured",
    "displayName": "MI-SQL-12: vulnerability assessment must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-12-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-20T13:39:41.1597502Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "MI-SQL-12-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          },
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "field": "kind",
            "notContains": "analytics"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "True",
            "field": "Microsoft.Sql/managedInstances/vulnerabilityAssessments/recurringScans.isEnabled"
          },
          "name": "default",
          "type": "Microsoft.Sql/managedInstances/vulnerabilityAssessments"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-20T13:39:41.087357+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T13:39:41.087357+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SGEC-Tags-Traceability: SGEC spokes must have a Traceability classification",
    "displayName": "SGEC-Tags-Traceability: SGEC spokes must have a Traceability classification",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-Tags-Traceability",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T14:22:36.7905276Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:38:26.2299961Z"
    },
    "mode": "All",
    "name": "SGEC-Tags-Traceability",
    "parameters": {
      "tagName": {
        "allowedValues": null,
        "defaultValue": null,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag, such as 'traceability'",
          "displayName": "Tag Name",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notEquals": "[toUpper(subscription().tags[parameters('tagName')])]"
          },
          {
            "field": "type",
            "notIn": [
              "Microsoft.Resources/subscriptions"
            ]
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "[concat('tags[', parameters('tagName'), ']')]",
              "operation": "addOrReplace",
              "value": "[toUpper(subscription().tags[parameters('tagName')])]"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "modify"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T14:22:36.702790+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:38:26.162891+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SGEC-Tags-Confidentiality: SGEC spokes must have a Confidentiality classification",
    "displayName": "SGEC-Tags-Confidentiality: SGEC spokes must have a Confidentiality classification",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-Tags-Confidentiality",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T14:22:37.0941129Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:06:28.5225979Z"
    },
    "mode": "All",
    "name": "SGEC-Tags-Confidentiality",
    "parameters": {
      "tagName": {
        "allowedValues": null,
        "defaultValue": null,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag, such as 'confidentiality'",
          "displayName": "Tag Name",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notEquals": "[toUpper(subscription().tags[parameters('tagName')])]"
          },
          {
            "field": "type",
            "notIn": [
              "Microsoft.Resources/subscriptions"
            ]
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "[concat('tags[', parameters('tagName'), ']')]",
              "operation": "addOrReplace",
              "value": "[toUpper(subscription().tags[parameters('tagName')])]"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "modify"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T14:22:36.952805+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:06:28.509266+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SGEC-Tags-SpokeType: SGEC spokes must have a Spoke Type classification",
    "displayName": "SGEC-Tags-SpokeType: SGEC spokes must have a Spoke Type classification",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-Tags-SpokeType",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T14:22:37.1306716Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:32:15.4176009Z"
    },
    "mode": "All",
    "name": "SGEC-Tags-SpokeType",
    "parameters": {
      "tagName": {
        "allowedValues": null,
        "defaultValue": null,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag, such as 'spoke_type'",
          "displayName": "Tag Name",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notEquals": "[toUpper(subscription().tags[parameters('tagName')])]"
          },
          {
            "field": "type",
            "notIn": [
              "Microsoft.Resources/subscriptions"
            ]
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "[concat('tags[', parameters('tagName'), ']')]",
              "operation": "addOrReplace",
              "value": "[toUpper(subscription().tags[parameters('tagName')])]"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "modify"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T14:22:37.015401+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:32:15.368936+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SGEC-Tags-Integrity: SGEC spokes must have an Integrity classification",
    "displayName": "SGEC-Tags-Integrity: SGEC spokes must have an Integrity classification",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-Tags-Integrity",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T14:22:37.2997977Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:38:20.8608731Z"
    },
    "mode": "All",
    "name": "SGEC-Tags-Integrity",
    "parameters": {
      "tagName": {
        "allowedValues": null,
        "defaultValue": null,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag, such as 'integrity'",
          "displayName": "Tag Name",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notEquals": "[toUpper(subscription().tags[parameters('tagName')])]"
          },
          {
            "field": "type",
            "notIn": [
              "Microsoft.Resources/subscriptions"
            ]
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "[concat('tags[', parameters('tagName'), ']')]",
              "operation": "addOrReplace",
              "value": "[toUpper(subscription().tags[parameters('tagName')])]"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "modify"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T14:22:37.218443+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:38:20.836390+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SGEC-Tags-Availability: SGEC spokes must have an Availability classification",
    "displayName": "SGEC-Tags-Availability: SGEC spokes must have an Availability classification",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-Tags-Availability",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T14:22:37.3046168Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:15:14.5277875Z"
    },
    "mode": "All",
    "name": "SGEC-Tags-Availability",
    "parameters": {
      "tagName": {
        "allowedValues": null,
        "defaultValue": null,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag, such as 'availability'",
          "displayName": "Tag Name",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notEquals": "[toUpper(subscription().tags[parameters('tagName')])]"
          },
          {
            "field": "type",
            "notIn": [
              "Microsoft.Resources/subscriptions"
            ]
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "[concat('tags[', parameters('tagName'), ']')]",
              "operation": "addOrReplace",
              "value": "[toUpper(subscription().tags[parameters('tagName')])]"
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "modify"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T14:22:37.140315+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:15:14.488062+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Functions App and service plan criticity must match",
    "displayName": "FUNC-10: Functions App and service plan criticity must match",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FUNC-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:15.5352102Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.5611869Z"
    },
    "mode": "All",
    "name": "FUNC-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "confidentiality",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "confidentiality",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp*"
          }
        ]
      },
      "then": {
        "details": {
          "ResourceGroupName": "[split(field('Microsoft.Web/sites/serverFarmId'),'/')[4]]",
          "existenceCondition": {
            "equals": "[field(concat('tags[', parameters('tagName'), ']'))]",
            "field": "[concat('tags[', parameters('tagName'), ']')]"
          },
          "name": "[last(split(field('Microsoft.Web/sites/serverFarmId'),'/'))]",
          "type": "Microsoft.Web/serverfarms"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:15.428729+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.521322+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics logs are exported to a dedicated storage account or Logs Analytics (Dependency with SIEM Project) ",
    "displayName": "APIM-14: Diagnostics logs must enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:15.8124731Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T12:19:34.5678969Z"
    },
    "mode": "All",
    "name": "APIM-14-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              },
              {
                "exists": true,
                "field": "Microsoft.Insights/diagnosticSettings/workspaceId"
              },
              {
                "contains": "Microsoft.OperationalInsights/workspaces",
                "field": "Microsoft.Insights/diagnosticSettings/workspaceId"
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:15.756949+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T12:19:34.545900+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "TLS 1.2 must be selected on the SQL server",
    "displayName": "DB-FLEX-MYSQL-03 : TLS 1.2 must be selected on the SQL server",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:15:16.2032933Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:57:01.3254217Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-03-sgct",
    "parameters": {
      "allowedValues": {
        "allowedValues": [
          "TLSV1.2",
          "TLSV1.3"
        ],
        "defaultValue": [
          "TLSV1.2",
          "TLSV1.3"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed TLS Versions",
          "displayName": "TLS Value",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "evaluationDelay": "PT5M",
          "existenceCondition": {
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value",
            "in": "[parameters('allowedValues')]"
          },
          "name": "tls_version",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:15:16.147551+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:57:01.263981+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoint must be enabled and assigned to all Azure ML workspaces",
    "displayName": "AML-06 - Private endpoint must be enabled and assigned to all Azure ML workspaces",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:16:49.3793747Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:24:28.3965072Z"
    },
    "mode": "All",
    "name": "AML-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:16:49.313209+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:24:28.307266+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Managed Service Identity that should be configured on this SQL Managed Instance.",
    "displayName": "MI-SQL-05: Managed Service Identity that should be configured on this SQL Managed Instance.",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:16:49.4974245Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:47:38.5920294Z"
    },
    "mode": "All",
    "name": "MI-SQL-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "notEquals": "SystemAssigned",
            "value": "[field('identity.type')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:16:49.438308+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:47:38.455144+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public network access must be disabled for MySQL  Flexible servers",
    "displayName": "DB-FLEX-MYSQL-02 - Public network access must be disabled for MySQL  Flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:18:23.7011192Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:38:26.2538489Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.DBforMySQL/flexibleServers/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:18:23.603785+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:38:26.194078+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In server parameters, 'audit_log_exclude_users' must be set to '' (None)",
    "displayName": "DB-FLEX-MYSQL-08- In server parameters, 'audit_log_exclude_users' must be set to '' (None)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:18:24.8755037Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:57:06.7000326Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "",
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value"
          },
          "name": "audit_log_exclude_users",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:18:24.822704+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:57:06.670203+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable Authenticate with client certificate (API Policies)",
    "displayName": "APIM-10c: Disable Authenticate with client certificate (API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-10c-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:19:58.6121111Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.8009888Z"
    },
    "mode": "All",
    "name": "APIM-10c-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/apis/policies",
            "field": "type"
          },
          {
            "contains": "authentication-certificate",
            "field": "Microsoft.ApiManagement/service/apis/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:19:58.534926+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.751112+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing logging and monitoring, diagnostics logs for Azure Synapse must be activated stored at least 90days on a Log Analytics workspace",
    "displayName": "ASA-30: Diagnostics logs for Azure Synapse must be activated stored at least 90days",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ASA-30-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:19:58.8489412Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:38:26.0044145Z"
    },
    "mode": "All",
    "name": "ASA-30-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "requiredRetentionDays": {
        "allowedValues": null,
        "defaultValue": 89,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Mandatory retention of diagnostics logs in days",
          "displayName": "Mandatory retention (days)",
          "strongType": null
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Synapse/workspaces",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "true",
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
                  },
                  {
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                    "greater": "[parameters('requiredRetentionDays')]"
                  },
                  {
                    "equals": "true",
                    "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                  }
                ]
              }
            },
            "greaterOrEquals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:19:58.800579+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:38:25.928521+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing access control, in all case, the SQL server admin (AAD) must be an A93, A94, A95, A96, A98 or AZYEL account",
    "displayName": "MI-SQL-02: The SQL server admin (AAD) must not be a standard account",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:21:33.0965487Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:53:55.8443222Z"
    },
    "mode": "All",
    "name": "MI-SQL-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "exists": true,
            "field": "Microsoft.Sql/managedInstances/administrators"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A93"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A94"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A95"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A96"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A98"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "AZYEL"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "AZGRE"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "AZRED"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A89"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:21:33.044058+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:53:55.796405+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Maintenance settings must be set on System-managed-schedule or scheduled at least every week in user managed mode",
    "displayName": "DB-FLEX-PGSQL-11 : Maintenance settings must be set on System-managed-schedule or scheduled every week",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:21:33.9446412Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:33:42.7256687Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.DBForPostgreSql/flexibleServers/maintenanceWindow.customWindow"
          },
          {
            "equals": 0,
            "field": "Microsoft.DBForPostgreSql/flexibleServers/maintenanceWindow.dayOfWeek"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:21:33.872263+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:33:42.660488+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "All activity logs must be monitored and exported to a LAW (Log Analytics Workspace).",
    "displayName": "ACR-22-sgct - All activity logs  exported to a LAW (Log Analytics Workspace) must be kept at least 90 days.",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-22-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:21:34.1149095Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.6864734Z"
    },
    "mode": "All",
    "name": "ACR-22-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "requiredRetentionDays": {
        "allowedValues": null,
        "defaultValue": 89,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Mandatory retention of diagnostics logs in days",
          "displayName": "Mandatory retention (days)",
          "strongType": null
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ContainerRegistry/registries",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "equals": "true",
                "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
              },
              {
                "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                "greater": "[parameters('requiredRetentionDays')]"
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:21:34.059780+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.624305+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For data availability A3 (or A4), secondary namespace for Geo-Disaster Recovery must be configured",
    "displayName": "SBUS-21: For data availability A3 (or A4), secondary namespace for Geo-Disaster Recovery must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SBUS-21-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:23:07.5730059Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:49:14.803039Z"
    },
    "mode": "All",
    "name": "SBUS-21-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "In": [
              "A3",
              "A4"
            ],
            "field": "tags.sg_Resource_ControlTower_Availability"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "exists": "true",
            "field": "Microsoft.ServiceBus/namespaces/disasterrecoveryconfigs/partnerNamespace"
          },
          "type": "Microsoft.ServiceBus/namespaces/disasterrecoveryconfigs"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:23:07.521871+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:49:14.774855+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SSL connection must be enabled for Azure Database for MySQL  servers",
    "displayName": "DB-FLEX-MYSQL-01 - SSL connection must be enabled for Azure Database for MySQL  servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:23:07.9493647Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:09:06.6767872Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "evaluationDelay": "PT5M",
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value"
          },
          "name": "require_secure_transport",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:23:07.897032+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:09:06.539288+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol' is 'SMB', NTLM v2 authentication mechanism must be forbidden",
    "displayName": "FILE-07: If 'sg_Resource_ControlTower_Protocol' is 'SMB', NTLM v2 authentication mechanism must be forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:26:19.6070096Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:04:50.3523716Z"
    },
    "mode": "All",
    "name": "FILE-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices",
            "field": "type"
          },
          {
            "equals": "SMB",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "anyOf": [
              {
                "equals": "NTLMv2;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.authenticationMethods"
              },
              {
                "equals": "NTLMv2;Kerberos;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.authenticationMethods"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:26:18.977631+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:04:50.314559+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Flexible MySQL  is the only authorized server deployment",
    "displayName": "DB-FLEX-MYSQL-11 : Flexible MySQL  is the only authorized server deployment",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:26:20.1251815Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-11-29T10:57:22.4903811Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL",
            "field": "type"
          },
          {
            "field": "type",
            "notEquals": "*/flexibleServers"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:26:19.915219+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-29T10:57:22.469513+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Configure your Azure API Management instance to protect your APIs by using the OAuth 2.0 protocol with Azure AD. For non MSI eligible resources",
    "displayName": "APIM-11: Configure your Azure APIM by using the OAuth 2.0 protocol with Azure AD",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:29:30.0667737Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:46:05.3185311Z"
    },
    "mode": "All",
    "name": "APIM-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ApiManagement/service",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "exists": true,
            "field": "Microsoft.ApiManagement/service/apis/authenticationSettings.oAuth2.authorizationServerId"
          },
          "type": "Microsoft.ApiManagement/service/apis"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:29:30.014048+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:46:05.198328+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "displayName": "DB-FLEX-PGSQL-09 - Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:29:30.544231Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-14T09:38:14.6929302Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "exists": "false",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/network.delegatedSubnetResourceId"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:29:30.467139+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-14T09:38:14.669975+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable MySQL  server parameters audit_log_enabled",
    "displayName": "DB-FLEX-MYSQL-06- Enable MySQL  server parameters audit_log_enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:31:07.4780909Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:44:32.2605308Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "ON",
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value"
          },
          "name": "audit_log_enabled",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:31:07.399348+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:44:32.222782+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private cluster must be enabled",
    "displayName": "AKS-04-sgct - Private cluster must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:31:07.5337241Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:10:38.3641027Z"
    },
    "mode": "All",
    "name": "AKS-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster",
            "notEquals": "true"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:31:07.461854+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:10:38.327251+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable Diagnostic Settings and export logs to relevant storage - min 30 days of log retention",
    "displayName": "AML-04 - Enable Diagnostic Settings and export logs to relevant storage",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:32:43.9803277Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:03:16.4849971Z"
    },
    "mode": "All",
    "name": "AML-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "requiredRetentionDays": {
        "allowedValues": null,
        "defaultValue": 30,
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Mandatory retention of diagnostics logs in days",
          "displayName": "Mandatory retention (days)",
          "strongType": null
        },
        "type": "Integer"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.MachineLearningServices/workspaces",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
                      },
                      {
                        "equals": "[parameters('requiredRetentionDays')]",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days"
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                            "notEquals": "true"
                          },
                          {
                            "exists": false,
                            "field": "Microsoft.Insights/diagnosticSettings/storageAccountId"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "greaterOrEquals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:32:43.878083+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:03:16.448270+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Enforce JWT verification (Global API Policies)",
    "displayName": "APIM-08a: Enforce JWT verification (Global API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-08a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:32:44.2607233Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T12:18:02.3997226Z"
    },
    "mode": "All",
    "name": "APIM-08a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ApiManagement/service",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "contains": "<validate-jwt header-name=",
            "field": "Microsoft.ApiManagement/service/policies/value"
          },
          "type": "Microsoft.ApiManagement/service/policies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:32:44.190556+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T12:18:02.382552+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, make sur Azure Monitor is activated",
    "displayName": "VM-RH-07 Azure Monitor is activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:32:44.4779118Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:57:01.3502282Z"
    },
    "mode": "All",
    "name": "VM-RH-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "equals": "RedHat",
            "field": "Microsoft.Compute/imagePublisher"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "equals": "AzureMonitorLinuxAgent",
                "field": "Microsoft.Compute/virtualMachines/extensions/type"
              },
              {
                "equals": "Microsoft.Azure.Monitor",
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher"
              },
              {
                "equals": "Succeeded",
                "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState"
              }
            ]
          },
          "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:32:44.393745+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:57:01.279656+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The Managed VNET will be fully managed by ADF and there is not need to create subnets or managed scaling",
    "displayName": "ADF-15: The ADF should be deployed with Managed VNET enabled when tag='AzureIR'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADF-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:32:44.5324341Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:41:31.238814Z"
    },
    "mode": "All",
    "name": "ADF-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "integrationRuntimeValues": {
        "allowedValues": [
          "AzureIR",
          "SHIR"
        ],
        "defaultValue": [
          "AzureIR",
          "SHIR"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource profile tags involved in this policy",
          "displayName": "Resource profile tag value",
          "strongType": null
        },
        "type": "array"
      },
      "tagIntegrationRuntime": {
        "allowedValues": null,
        "defaultValue": "integrationRuntime",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Resource profile tag",
          "displayName": "integrationRuntime",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagIntegrationRuntime'), ']')]",
            "in": "[parameters('integrationRuntimeValues')]"
          }
        ]
      },
      "then": {
        "details": {
          "existencecondition": {
            "exists": "True",
            "field": "Microsoft.DataFactory/factories/managedVirtualNetworks/vNetId"
          },
          "type": "Microsoft.DataFactory/factories/managedVirtualNetworks"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:32:44.456208+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:41:31.208171+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In server parameters, 'audit_log_events' must be set to 'CONNECTION, DDL, DCL, ADMIN'",
    "displayName": "DB-FLEX-MYSQL-07- In server parameters, 'audit_log_events' must be set to 'CONNECTION, DDL, DCL, ADMIN'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:32:44.9756798Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.6487534Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "CONNECTION,DDL,DCL,ADMIN",
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value"
          },
          "name": "audit_log_events",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:32:44.893750+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.521322+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "VNET integration must be enabled on Function App",
    "displayName": "FUNC-26: VNET integration must be enabled on Function App",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FUNC-26-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:34:19.2626046Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-23T15:41:22.2575378Z"
    },
    "mode": "All",
    "name": "FUNC-26-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "contains": "functionapp",
            "field": "kind"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "equals": "",
                "field": "Microsoft.Web/sites/virtualNetworkSubnetId"
              },
              {
                "exists": false,
                "field": "Microsoft.Web/sites/virtualNetworkSubnetId"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:34:19.184453+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-23T15:41:22.231958+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Locally-redundant storage (LRS) is forbidden",
    "displayName": "FILE-10: Locally-redundant storage (LRS) is forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:34:19.9572512Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:47:42.4255751Z"
    },
    "mode": "All",
    "name": "FILE-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "field": "Microsoft.Storage/storageAccounts/sku.name",
            "notIn": [
              "Standard_LRS",
              "Premium_LRS"
            ]
          },
          "type": "Microsoft.Storage/storageAccounts"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:34:19.887649+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:47:42.392757+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " Function App must be accessible only through a secure private endpoint from the hub",
    "displayName": "FUNC-25:  Function App must be accessible only through a secure private endpoint from the hub",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FUNC-25-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:35:54.6197418Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-07-30T08:27:19.6262813Z"
    },
    "mode": "All",
    "name": "FUNC-25-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "contains": "functionapp",
            "field": "kind"
          },
          {
            "field": "kind",
            "notContains": "workflowapp"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Approved",
            "field": "Microsoft.Web/sites/privateEndpointConnections/privateLinkServiceConnectionState.status"
          },
          "type": "Microsoft.Web/sites/privateEndpointConnections"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:35:54.521973+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-30T08:27:19.615035+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol' is 'NFS', secure transfer must be disabled ",
    "displayName": "FILE-03: If 'sg_Resource_ControlTower_Protocol' is 'NFS', secure transfer must be disabled ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:35:55.2576769Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:47:42.1219675Z"
    },
    "mode": "All",
    "name": "FILE-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "NFS",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "equals": "True",
            "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:35:55.178287+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:47:42.095861+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, make sure diagnostic settings are activated",
    "displayName": "MI-SQL-01: diagnostic settings are activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:35:55.5023538Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:35:20.9573058Z"
    },
    "mode": "All",
    "name": "MI-SQL-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:35:55.428364+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:35:20.898827+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The cluster's automatic upgrade parameter must be set to 'Enabled with patch' or 'Enabled with stable' and upgrade scope must be 'control plane + all node pools'",
    "displayName": "AKS-02-sgct - The cluster's automatic upgrade parameter must be set to 'patch' or 'stable'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:32.2830704Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:57:01.3764854Z"
    },
    "mode": "All",
    "name": "AKS-02-sgct",
    "parameters": {
      "confValues": {
        "allowedValues": [
          "patch",
          "stable"
        ],
        "defaultValue": [
          "patch",
          "stable"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of confidentiality profile tags involved in this policy",
          "displayName": "Confidentiality profile tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "Microsoft.ContainerService/managedClusters/autoUpgradeProfile.upgradeChannel",
            "notIn": "[parameters('confValues')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:32.187723+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:57:01.326487+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Enforce JWT verification (API Policies)",
    "displayName": "APIM-08c: Enforce JWT verification (API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-08c-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:33.2562783Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T12:18:02.5272231Z"
    },
    "mode": "All",
    "name": "APIM-08c-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/apis/policies",
            "field": "type"
          },
          {
            "field": "Microsoft.ApiManagement/service/apis/policies/value",
            "notContains": "<validate-jwt header-name="
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:33.187830+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T12:18:02.508522+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Cognitive Search service must have a System Managed Identity (MSI)",
    "displayName": "ACS-15: Cognitive Search service must have a System Managed Identity (MSI)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACS-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:37:33.3331659Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:06:28.8554124Z"
    },
    "mode": "All",
    "name": "ACS-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Search/searchServices",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:37:33.266021+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:06:28.743661+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace with audit category group",
    "displayName": "DB-FLEX-MYSQL-04 - Diagnostic Settings must be configured to GDI Log Analytics workspace",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:39:11.440642Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-11-29T10:57:22.6555072Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:39:11.369164+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-29T10:57:22.625766+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Underlying data lake storage gen2 must reside in same spoke",
    "displayName": "ASA-25: Underlying data lake storage gen2 must reside in same spoke",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ASA-25-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:40:48.386374Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-16T10:36:23.9123053Z"
    },
    "mode": "All",
    "name": "ASA-25-sgct",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Synapse/workspaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "[concat(field('Microsoft.Synapse/workspaces/defaultDataLakeStorage.accountUrl'),'/')]",
            "field": "Microsoft.Storage/storageAccounts/primaryEndpoints.dfs"
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Storage/storageAccounts"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:40:48.331634+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-16T10:36:23.890010+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The use of User Managed Identities is forbidden for resource providers other than Azure Kuberneted Services",
    "displayName": "UAMI-01: The use of User Managed Identities is forbidden for resource providers other than Azure Kuberneted Services",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/UAMI-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-18T16:55:46.4789507Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-08T10:15:01.1852469Z"
    },
    "mode": "All",
    "name": "UAMI-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "type",
                "notin": [
                  "Microsoft.Compute/virtualMachineScaleSets",
                  "Microsoft.Batch/batchAccounts",
                  "Microsoft.Databricks/workspaces"
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Microsoft.Compute/virtualMachineScaleSets",
                    "field": "type"
                  },
                  {
                    "notEquals": true,
                    "value": "[startsWith(field('name'), 'aks')]"
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "anyOf": [
                  {
                    "exists": true,
                    "field": "identity.userAssignedIdentities"
                  },
                  {
                    "contains": "UserAssigned",
                    "field": "identity.type"
                  },
                  {
                    "contains": "userassigned",
                    "value": "[toLower(string(field('identity.type')))]"
                  }
                ]
              },
              {
                "anyOf": [
                  {
                    "equals": false,
                    "value": "[contains(field('identity.userAssignedIdentities'),'/subscriptions/e45678c8-c0cf-4188-8d90-cebac8052b4d/resourceGroups/rg-001-853-prod-frc-sentinel/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AMAUserAssignedIdentity')]"
                  },
                  {
                    "greater": 1,
                    "value": "[length(field('identity.userAssignedIdentities'))]"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-18T16:55:46.394348+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-08T10:15:01.152923+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The link of User Managed Identitieswith Federated Credentials is forbidden on the SG's Azure tenant",
    "displayName": "UAMI-02 : The link of User Managed Identitieswith Federated Credentials is forbidden on the SG's Azure tenant",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/UAMI-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-18T16:55:46.5507182Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-20T14:57:37.5698666Z"
    },
    "mode": "All",
    "name": "UAMI-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "exists": true,
            "field": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials/issuer"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-18T16:55:46.503738+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-20T14:57:37.549220+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace: ModelsOperation, DigitalTwinsOperation",
    "displayName": "DTW-09: Enable logging by category group audit for digital twins to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DTW-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:07:37.4097975Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DTW-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.DigitalTwins/digitalTwinsInstances",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.Insights/diagnosticSettings/storageAccountId"
              },
              {
                "Equals": 2,
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "DigitalTwinsOperation",
                          "ModelsOperation"
                        ]
                      },
                      {
                        "equals": "True",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled"
                      }
                    ]
                  }
                }
              },
              {
                "Equals": 2,
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "DigitalTwinsOperation",
                          "ModelsOperation"
                        ]
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                        "greater": 6
                      }
                    ]
                  }
                }
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:07:37.350970+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:07:37.350970+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " Public Network must be disabled on storage account",
    "displayName": "STO-77-OXYGEN: Public Network must be disabled on storage account",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-77-OXYGEN",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-17T11:42:18.0930538Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-77-OXYGEN",
    "parameters": {
      "allowedstorage": {
        "allowedValues": null,
        "defaultValue": [
          {
            "stoName": "",
            "subId": ""
          }
        ],
        "metadata": null,
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/publicNetworkAccess",
            "notEquals": "Disabled"
          },
          {
            "count": {
              "value": "[parameters('allowedstorage')]",
              "where": {
                "allof": [
                  {
                    "contains": "[current().subid]",
                    "field": "id"
                  },
                  {
                    "contains": "[current().stoName]",
                    "field": "id"
                  }
                ]
              }
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-17T11:42:17.966868+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-17T11:42:17.966868+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Built-in Admin user Access account must be disabled for use-case 1 : APPI & use-case 2 : APPS",
    "displayName": "ACR-24-sgct - Built-in Admin user Access account must be disabled for use-case 1 : APPI & use-case 2 : APPS",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-24-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T08:49:00.9529604Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-23T09:17:58.2268948Z"
    },
    "mode": "All",
    "name": "ACR-24-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Modify"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "field": "tags.sg_Resource_ControlTower_Profile",
            "notIn": [
              "APPS-AML",
              "APPI-AML"
            ]
          },
          {
            "in": [
              "APPI",
              "APPS"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": true,
            "field": "Microsoft.ContainerRegistry/registries/adminUserEnabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T08:49:00.750806+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-23T09:17:58.192689+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS access must not be used",
    "displayName": "STO-66a: For storage account blob services CORS access must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-66a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-04T12:26:44.4041375Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:00:09.1084371Z"
    },
    "mode": "All",
    "name": "STO-66a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/blobServices",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/blobServices/cors.corsRules[*]"
            },
            "greaterOrEquals": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-04T12:26:44.300224+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:00:09.075003+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS access must not be used",
    "displayName": "STO-66d: For storage account queue services CORS access must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-66d-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-04T12:26:44.4831784Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:47:38.2653361Z"
    },
    "mode": "All",
    "name": "STO-66d-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/queueServices",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/queueServices/cors.corsRules[*]"
            },
            "greaterOrEquals": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-04T12:26:44.393975+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:47:38.236379+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS access must not be used",
    "displayName": "STO-66b: For storage account file services CORS access must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-66b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-04T12:26:44.4575704Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:32:15.4792505Z"
    },
    "mode": "All",
    "name": "STO-66b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/fileServices/cors.corsRules[*]"
            },
            "greaterOrEquals": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-04T12:26:44.300224+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:32:15.447066+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS access must not be used",
    "displayName": "STO-66c: For storage account table services CORS access must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-66c-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-09-04T12:28:16.7541527Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:36:48.5861669Z"
    },
    "mode": "All",
    "name": "STO-66c-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/tableServices",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/tableServices/cors.corsRules[*]"
            },
            "greaterOrEquals": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-09-04T12:28:16.645174+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:36:48.548312+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any NSG Creation/update External Flows if they are Non-Bussiness and not in SGEC rules Default's",
    "displayName": "SGEC-APPE-05-EXTERNAL",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-05-EXTERNAL",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:03.8766684Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-20T15:12:15.7742118Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-05-EXTERNAL",
    "parameters": {
      "SGEC-external": {
        "allowedValues": null,
        "defaultValue": [
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromBastion",
            "priority": 200,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromJumpbox",
            "priority": 205,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "DenyRDPSSHfromPublicIP",
            "priority": 210,
            "protocol": "TCP",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "DenyBackendToFrontend",
            "priority": 215,
            "protocol": "*",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "AllowAllInbound",
            "priority": 999,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Outbound",
            "name": "AllowAllOutbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to Add/Replace to NSG",
          "displayName": "SGEC Default Security Rules",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "ipRegions": {
        "allowedValues": null,
        "defaultValue": {
          "Bastion": [
            "10.185.0.128/26",
            "10.34.0.128/26"
          ],
          "External": [
            "10.185.128.0/19",
            "10.34.128.0/19"
          ],
          "IncludedRegions": [
            "eastus",
            "westeurope"
          ],
          "Internal": [
            "10.185.160.0/19",
            "10.34.160.0/19"
          ],
          "jumpbox": [
            "10.185.36.224/27",
            "10.34.32.64/27"
          ]
        },
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Ranges based on regions",
          "strongType": null
        },
        "type": "Object"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming  conventionfrom BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      },
      "subnet": {
        "allowedValues": null,
        "defaultValue": [
          "internal",
          "external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Subnet Naming convention",
          "displayName": "Subnet Name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          },
          {
            "notequals": 0,
            "value": "[length(field('Microsoft.Network/networkSecurityGroups/securityRules[*]'))]"
          },
          {
            "count": {
              "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
              "where": {
                "allof": [
                  {
                    "anyof": [
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                        "greater": 2999
                      },
                      {
                        "allof": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                            "greater": 199
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                            "less": 1000
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "anyof": [
                      {
                        "allof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'), 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))))]",
                            "notequals": -1
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name",
                            "notIn": [
                              "DenyBackendToFrontend",
                              "AllowRDPSSHfromBastion",
                              "AllowRDPSSHfromJumpbox"
                            ]
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'DenyBackendToFrontend', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "notequals": -1
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsExternal",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend')),ipRangeContains(current('ipRegionsExternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsInternal",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend')),ipRangeContains(current('ipRegionsInternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "equals": "DenyBackendToFrontend",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "anyof": [
                              {
                                "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromJumpbox', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes','destinationAddressPrefix',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')), createarray(),'destinationAddressPrefixes',createarray()))]",
                                "notequals": -1
                              },
                              {
                                "count": {
                                  "name": "ipRegionsJumpbox",
                                  "value": "[parameters('ipRegions').Jumpbox]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowRDPSSHfromJumpbox')),ipRangeContains(current('ipRegionsJumpbox'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "notequals": "[length(parameters('ipRegions').Jumpbox)]"
                              }
                            ]
                          },
                          {
                            "equals": "AllowRDPSSHfromJumpbox",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "anyof": [
                              {
                                "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromBastion', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'sourceAddressPrefixes', createarray(),'destinationAddressPrefixes',createarray()))]",
                                "notequals": -1
                              },
                              {
                                "count": {
                                  "name": "ipRegionsBastion",
                                  "value": "[parameters('ipRegions').Bastion]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowRDPSSHfromBastion')),ipRangeContains(current('ipRegionsBastion'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "notequals": "[length(parameters('ipRegions').Bastion)]"
                              }
                            ]
                          },
                          {
                            "equals": "AllowRDPSSHfromBastion",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "notequals": "[length(parameters('SGEC-external'))]"
          },
          {
            "anyof": [
              {
                "contains": "[parameters('subnet')[1]]",
                "field": "Microsoft.Network/networkSecurityGroups/subnets[*].id"
              },
              {
                "field": "name",
                "like": "[concat(parameters('nsgName')[1],'*')]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.748504+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T15:12:15.701524+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any NSG Creation/update Internal Flows if they are Non-Bussiness and not in SGEC rules Default's",
    "displayName": "SGEC-APPE-05-INTERNAL",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-05-INTERNAL",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:03.9136781Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-20T15:12:15.689866Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-05-INTERNAL",
    "parameters": {
      "SGEC-internal": {
        "allowedValues": null,
        "defaultValue": [
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromBastion",
            "priority": 200,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "80",
              "443"
            ],
            "direction": "Inbound",
            "name": "AllowFrontendToCore",
            "priority": 215,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "80",
              "443"
            ]
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "DenyFrontendToBackend",
            "priority": 3005,
            "protocol": "*",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromJumpbox",
            "priority": 205,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "DenyRDPSSHfromPublicIP",
            "priority": 210,
            "protocol": "TCP",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "AllowAllInbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Outbound",
            "name": "AllowAllOutbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to Add/Replace to NSG",
          "displayName": "SGEC Default Security Rules",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "ipRegions": {
        "allowedValues": null,
        "defaultValue": {
          "Bastion": [
            "10.185.0.128/26",
            "10.34.0.128/26"
          ],
          "External": [
            "10.185.128.0/19",
            "10.34.128.0/19"
          ],
          "IncludedRegions": [
            "eastus",
            "westeurope"
          ],
          "Internal": [
            "10.185.160.0/19",
            "10.34.160.0/19"
          ],
          "jumpbox": [
            "10.185.36.224/27",
            "10.34.32.64/27"
          ]
        },
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Ranges based on regions",
          "strongType": null
        },
        "type": "Object"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming  conventionfrom BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      },
      "subnet": {
        "allowedValues": null,
        "defaultValue": [
          "internal",
          "external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Subnet Naming convention",
          "displayName": "Subnet Name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          },
          {
            "notequals": 0,
            "value": "[length(field('Microsoft.Network/networkSecurityGroups/securityRules[*]'))]"
          },
          {
            "count": {
              "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
              "where": {
                "allof": [
                  {
                    "anyof": [
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                        "greater": 2999
                      },
                      {
                        "allof": [
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                            "greater": 199
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                            "less": 1000
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "anyof": [
                      {
                        "allof": [
                          {
                            "Value": "[indexof(parameters('SGEC-internal'), createObject('name', current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'), 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))))]",
                            "notequals": -1
                          },
                          {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name",
                            "notIn": [
                              "AllowFrontendToCore",
                              "DenyFrontendToBackend",
                              "AllowRDPSSHfromBastion",
                              "AllowRDPSSHfromJumpbox"
                            ]
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'DenyFrontendToBackend', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "notequals": -1
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsInternal",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyFrontendToBackend')),ipRangeContains(current('ipRegionsInternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyFrontendToBackend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsExternal",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyFrontendToBackend')),ipRangeContains(current('ipRegionsExternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'DenyFrontendToBackend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "equals": "DenyFrontendToBackend",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'AllowFrontendToCore', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "notequals": -1
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsInternal",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowFrontendToCore')),ipRangeContains(current('ipRegionsInternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').Internal]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowFrontendToCore'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "ipRegionsExternal",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowFrontendToCore')),ipRangeContains(current('ipRegionsExternal'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "equals": 1
                              },
                              {
                                "count": {
                                  "name": "IpRanges",
                                  "value": "[parameters('ipRegions').External]",
                                  "where": {
                                    "Equals": "[length(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes'))]",
                                    "count": {
                                      "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                      "where": {
                                        "equals": true,
                                        "value": "[if(and(equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowFrontendToCore'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]')),bool('true'))]"
                                      }
                                    }
                                  }
                                },
                                "equals": 1
                              }
                            ]
                          },
                          {
                            "equals": "AllowFrontendToCore",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "anyof": [
                              {
                                "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'AllowRDPSSHfromJumpbox', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes','destinationAddressPrefix',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')), createarray(),'destinationAddressPrefixes',createarray()))]",
                                "notequals": -1
                              },
                              {
                                "count": {
                                  "name": "ipRegionsJumpbox",
                                  "value": "[parameters('ipRegions').Jumpbox]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowRDPSSHfromJumpbox')),ipRangeContains(current('ipRegionsJumpbox'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "notequals": "[length(parameters('ipRegions').Jumpbox)]"
                              }
                            ]
                          },
                          {
                            "equals": "AllowRDPSSHfromJumpbox",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "anyof": [
                              {
                                "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'AllowRDPSSHfromBastion', 'access', current('Microsoft.Network/networkSecurityGroups/securityRules[*].access'),'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', '','destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'sourceAddressPrefixes', createarray(),'destinationAddressPrefixes',createarray()))]",
                                "notequals": -1
                              },
                              {
                                "count": {
                                  "name": "ipRegionsBastion",
                                  "value": "[parameters('ipRegions').Bastion]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix'))),equals(current('Microsoft.Network/networkSecurityGroups/securityRules[*].name'),'AllowRDPSSHfromBastion')),ipRangeContains(current('ipRegionsBastion'), current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),bool('true'))]"
                                  }
                                },
                                "notequals": "[length(parameters('ipRegions').Bastion)]"
                              }
                            ]
                          },
                          {
                            "equals": "AllowRDPSSHfromBastion",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "notequals": "[if(equals(last(split(field('name'),'-')),'core'),length(parameters('SGEC-internal')),sub(length(parameters('SGEC-internal')),1))]"
          },
          {
            "anyof": [
              {
                "contains": "[parameters('subnet')[0]]",
                "field": "Microsoft.Network/networkSecurityGroups/subnets[*].id"
              },
              {
                "field": "name",
                "like": "[concat(parameters('nsgName')[0],'*')]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.811006+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T15:12:15.648823+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny NIC's non-compliant with Internal/External Subnets",
    "displayName": "SGEC-APPE-01",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-01",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:03.9682219Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-21T15:52:14.2989751Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-01",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "subnet": {
        "allowedValues": null,
        "defaultValue": [
          "subnet-internal",
          "subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming convention from BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": [
          "spoke_type",
          "subnet"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "Array"
      },
      "tagValue": {
        "allowedValues": null,
        "defaultValue": "APPE",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The allowed tag value",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      },
      "tagValueSubnet": {
        "allowedValues": [
          "EXTERNAL",
          "INTERNAL"
        ],
        "defaultValue": [
          "EXTERNAL",
          "INTERNAL"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The allowed tag value",
          "displayName": "Tag Value for Subnet that NIC belongs",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkInterfaces",
            "field": "type"
          },
          {
            "exists": true,
            "field": "[concat('tags[', parameters('tagName')[1], ']')]"
          },
          {
            "equals": "[toUpper(parameters('tagValue'))]",
            "value": "[resourcegroup().tags[parameters('tagName')[0]]]"
          },
          {
            "anyof": [
              {
                "contains": "[parameters('subnet')[0]]",
                "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id"
              },
              {
                "contains": "[parameters('subnet')[1]]",
                "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id"
              }
            ]
          },
          {
            "anyof": [
              {
                "count": {
                  "field": "Microsoft.Network/networkInterfaces/ipConfigurations[*]",
                  "where": {
                    "anyof": [
                      {
                        "allof": [
                          {
                            "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id",
                            "like": "[concat('*',parameters('subnet')[0])]"
                          },
                          {
                            "equals": "[toUpper(parameters('tagValueSubnet')[1])]",
                            "field": "[concat('tags[', parameters('tagName')[1], ']')]"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id",
                            "like": "[concat('*',parameters('subnet')[1])]"
                          },
                          {
                            "equals": "[toUpper(parameters('tagValueSubnet')[0])]",
                            "field": "[concat('tags[', parameters('tagName')[1], ']')]"
                          }
                        ]
                      }
                    ]
                  }
                },
                "notEquals": 1
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id",
                    "notContains": "[parameters('subnet')[0]]"
                  },
                  {
                    "equals": "[toUpper(parameters('tagValueSubnet')[1])]",
                    "field": "[concat('tags[', parameters('tagName')[1], ']')]"
                  }
                ]
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].subnet.id",
                    "notContains": "[parameters('subnet')[1]]"
                  },
                  {
                    "equals": "[toUpper(parameters('tagValueSubnet')[0])]",
                    "field": "[concat('tags[', parameters('tagName')[1], ']')]"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.826630+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-21T15:52:14.242912+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any SecurityRule Creation/update if they are Non-Bussiness and not in SGEC rules Default's Internal flows",
    "displayName": "SGEC-APPE-03-INTERNAL",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-03-INTERNAL",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:04.0047219Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-20T15:12:15.7858268Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-03-INTERNAL",
    "parameters": {
      "SGEC-internal": {
        "allowedValues": null,
        "defaultValue": [
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromBastion",
            "priority": 200,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "80",
              "443"
            ],
            "direction": "Inbound",
            "name": "AllowFrontendToCore",
            "priority": 215,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "80",
              "443"
            ]
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "DenyFrontendToBackend",
            "priority": 3005,
            "protocol": "*",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromJumpbox",
            "priority": 205,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "DenyRDPSSHfromPublicIP",
            "priority": 210,
            "protocol": "TCP",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "AllowAllInbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Outbound",
            "name": "AllowAllOutbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to Add/Replace to NSG",
          "displayName": "SGEC Default Security Rules",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "ipRegions": {
        "allowedValues": null,
        "defaultValue": {
          "Bastion": [
            "10.185.0.128/26",
            "10.34.0.128/26"
          ],
          "External": [
            "10.185.128.0/19",
            "10.34.128.0/19"
          ],
          "IncludedRegions": [
            "eastus",
            "westeurope"
          ],
          "Internal": [
            "10.185.160.0/19",
            "10.34.160.0/19"
          ],
          "jumpbox": [
            "10.185.36.224/27",
            "10.34.32.64/27"
          ]
        },
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Ranges based on regions",
          "strongType": null
        },
        "type": "Object"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming  conventionfrom BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups/SecurityRules",
            "field": "type"
          },
          {
            "anyof": [
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                "greater": 2999
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                    "greater": 199
                  },
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                    "less": 1000
                  }
                ]
              }
            ]
          },
          {
            "allof": [
              {
                "anyof": [
                  {
                    "allof": [
                      {
                        "Value": "[indexof(parameters('SGEC-internal'), createObject('name', field('name'), 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes'))))]",
                        "equals": -1
                      },
                      {
                        "field": "name",
                        "notIn": [
                          "AllowFrontendToCore",
                          "DenyFrontendToBackend",
                          "AllowRDPSSHfromBastion",
                          "AllowRDPSSHfromJumpbox"
                        ]
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'DenyFrontendToBackend', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', '*','direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix'))),equals(field('name'),'DenyFrontendToBackend')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'DenyFrontendToBackend')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'DenyFrontendToBackend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'DenyFrontendToBackend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          }
                        ]
                      },
                      {
                        "equals": "DenyFrontendToBackend",
                        "field": "name"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'AllowFrontendToCore', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix'))),equals(field('name'),'AllowFrontendToCore')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowFrontendToCore')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'AllowFrontendToCore'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'AllowFrontendToCore'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          }
                        ]
                      },
                      {
                        "equals": "AllowFrontendToCore",
                        "field": "name"
                      },
                      {
                        "contains": "core",
                        "value": "[last(split(split(field('id'),'/')[8],'-'))]"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'AllowRDPSSHfromJumpbox', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Jumpbox]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowRDPSSHfromJumpbox')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Jumpbox)]"
                          }
                        ]
                      },
                      {
                        "equals": "AllowRDPSSHfromJumpbox",
                        "field": "name"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-internal'), createObject('name', 'AllowRDPSSHfromBastion', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Bastion]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowRDPSSHfromBastion')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Bastion)]"
                          }
                        ]
                      },
                      {
                        "equals": "AllowRDPSSHfromBastion",
                        "field": "name"
                      }
                    ]
                  }
                ]
              },
              {
                "contains": "[concat('networkSecurityGroups/',parameters('nsgName')[0])]",
                "field": "id"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.842256+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T15:12:15.713040+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny possible NSG that is not  authorized for current subnet external/internal",
    "displayName": "SGEC-APPE-02",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-02",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:03.9852045Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-21T15:52:14.2648183Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-02",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming convention from BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      },
      "subnet": {
        "allowedValues": null,
        "defaultValue": [
          "subnet-internal",
          "subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "subnet Naming convention from BackEnd/FrontEnd",
          "displayName": "subnet name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/virtualNetworks/subnets",
            "field": "type"
          },
          {
            "anyof": [
              {
                "field": "name",
                "like": "[concat(parameters('subnet')[0],'*')]"
              },
              {
                "field": "name",
                "like": "[concat(parameters('subnet')[1],'*')]"
              }
            ]
          },
          {
            "exists": true,
            "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id"
          },
          {
            "anyof": [
              {
                "allof": [
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                    "notcontains": "[concat('Microsoft.Network/networkSecurityGroups/',parameters('nsgName')[0])]"
                  },
                  {
                    "field": "name",
                    "like": "[concat(parameters('subnet')[0],'*')]"
                  }
                ]
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id",
                    "notcontains": "[concat('Microsoft.Network/networkSecurityGroups/',parameters('nsgName')[1])]"
                  },
                  {
                    "field": "name",
                    "like": "[concat(parameters('subnet')[1],'*')]"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.904755+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-21T15:52:14.242912+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any SecurityRule Creation/update if they are Bussiness and not respecting Default Controls on Non Production",
    "displayName": "SGEC-APPE-04-NONPROD",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-04-NONPROD",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:04.1496487Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-11-28T14:40:55.3131328Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-04-NONPROD",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "notallowedportsTCP": {
        "allowedValues": null,
        "defaultValue": [
          "80",
          "20",
          "21",
          "25",
          "5900",
          "5901",
          "5902",
          "23",
          "69",
          "5631",
          "1494",
          "2598",
          "135",
          "137",
          "138",
          "139",
          "445",
          "389"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The allowed tag value",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "Array"
      },
      "notallowedportsUDP": {
        "allowedValues": null,
        "defaultValue": [
          "69",
          "5631",
          "1494",
          "2598",
          "135",
          "137",
          "138",
          "139",
          "445",
          "389"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The allowed tag value",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "Array"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming convention from BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups/SecurityRules",
            "field": "type"
          },
          {
            "anyof": [
              {
                "contains": "[parameters('nsgName')[0]]",
                "field": "id"
              },
              {
                "contains": "[parameters('nsgName')[1]]",
                "field": "id"
              }
            ]
          },
          {
            "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
            "greaterOrEquals": 1000
          },
          {
            "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
            "lessOrEquals": 2999
          },
          {
            "anyof": [
              {
                "allof": [
                  {
                    "equals": "*",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"
                  },
                  {
                    "equals": "*",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix"
                  },
                  {
                    "equals": "*",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/protocol"
                  }
                ]
              },
              {
                "allof": [
                  {
                    "equals": "TCP",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/protocol"
                  },
                  {
                    "anyof": [
                      {
                        "count": {
                          "name": "notallowedportsTCP",
                          "value": "[parameters('notallowedportsTCP')]",
                          "where": {
                            "anyof": [
                              {
                                "equals": true,
                                "value": "[if(empty(array(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))[0]), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsTCP')), int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-')))), lessOrEquals(int(current('notallowedportsTCP')), int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-')))))))]"
                              },
                              {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')[0]), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsTCP')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'))), 4)), '-')))), lessOrEquals(int(current('notallowedportsTCP')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'))), 4)), '-')))))))]"
                                  }
                                },
                                "greater": 0
                              }
                            ]
                          }
                        },
                        "greater": 0
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                        "in": "[parameters('notallowedportsTCP')]"
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                        "in": "[parameters('notallowedportsTCP')]"
                      }
                    ]
                  }
                ]
              },
              {
                "allof": [
                  {
                    "equals": "UDP",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/protocol"
                  },
                  {
                    "anyof": [
                      {
                        "count": {
                          "name": "notallowedportsUDP",
                          "value": "[parameters('notallowedportsUDP')]",
                          "where": {
                            "anyof": [
                              {
                                "equals": true,
                                "value": "[if(empty(array(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'))[0]), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsUDP')), int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-')))), lessOrEquals(int(current('notallowedportsUDP')), int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-')))))))]"
                              },
                              {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                  "where": {
                                    "equals": true,
                                    "value": "[if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')[0]), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsUDP')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'))), 4)), '-')))), lessOrEquals(int(current('notallowedportsUDP')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'))), 4)), '-')))))))]"
                                  }
                                },
                                "greater": 0
                              }
                            ]
                          }
                        },
                        "greater": 0
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange",
                        "in": "[parameters('notallowedportsUDP')]"
                      },
                      {
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                        "in": "[parameters('notallowedportsUDP')]"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.795379+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-28T14:40:54.968807+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any NSG Creation/update if they are non-Bussiness and not respecting default security rules on Non Production",
    "displayName": "SGEC-APPE-06-NONPROD",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-06-NONPROD",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:04.1768129Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-11-28T14:40:55.9461657Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-06-NONPROD",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "notallowedportsTCP": {
        "allowedValues": null,
        "defaultValue": [
          "80",
          "20",
          "21",
          "25",
          "5900",
          "5901",
          "5902",
          "23",
          "69",
          "5631",
          "1494",
          "2598",
          "135",
          "137",
          "138",
          "139",
          "445",
          "389"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The allowed tag value",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "Array"
      },
      "notallowedportsUDP": {
        "allowedValues": null,
        "defaultValue": [
          "69",
          "5631",
          "1494",
          "2598",
          "135",
          "137",
          "138",
          "139",
          "445",
          "389"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The allowed tag value",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "Array"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming convention from BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          },
          {
            "anyof": [
              {
                "field": "name",
                "like": "[concat(parameters('nsgName')[0],'*')]"
              },
              {
                "field": "name",
                "like": "[concat(parameters('nsgName')[1],'*')]"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Allow",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].access"
                  },
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                    "greaterOrEquals": 1000
                  },
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                    "lessOrEquals": 2999
                  },
                  {
                    "anyof": [
                      {
                        "allOf": [
                          {
                            "equals": "*",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix"
                          },
                          {
                            "equals": "*",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix"
                          },
                          {
                            "equals": "*",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].protocol"
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "equals": "TCP",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].protocol"
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "notallowedportsTCP",
                                  "value": "[parameters('notallowedportsTCP')]",
                                  "where": {
                                    "anyof": [
                                      {
                                        "equals": true,
                                        "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange'), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsTCP')), int(first(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), '-')))), lessOrEquals(int(current('notallowedportsTCP')), int(last(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), '-')))))))]"
                                      },
                                      {
                                        "count": {
                                          "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]",
                                          "where": {
                                            "equals": true,
                                            "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsTCP')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), 4)), '-')))), lessOrEquals(int(current('notallowedportsTCP')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), 4)), '-')))))))]"
                                          }
                                        },
                                        "greater": 0
                                      }
                                    ]
                                  }
                                },
                                "greater": 0
                              },
                              {
                                "count": {
                                  "name": "notallowedportsTCP",
                                  "value": "[parameters('notallowedportsTCP')]",
                                  "where": {
                                    "anyof": [
                                      {
                                        "equals": true,
                                        "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsTCP')), int(first(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), '-')))), lessOrEquals(int(current('notallowedportsTCP')), int(last(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), '-')))))))]"
                                      },
                                      {
                                        "count": {
                                          "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                          "where": {
                                            "equals": true,
                                            "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsTCP')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), 4)), '-')))), lessOrEquals(int(current('notallowedportsTCP')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), 4)), '-')))))))]"
                                          }
                                        },
                                        "greater": 0
                                      }
                                    ]
                                  }
                                },
                                "greater": 0
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange",
                                "in": "[parameters('notallowedportsTCP')]"
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange",
                                "in": "[parameters('notallowedportsTCP')]"
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]",
                                "in": "[parameters('notallowedportsTCP')]"
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                "in": "[parameters('notallowedportsTCP')]"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "equals": "UDP",
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].protocol"
                          },
                          {
                            "anyof": [
                              {
                                "count": {
                                  "name": "notallowedportsUDP",
                                  "value": "[parameters('notallowedportsUDP')]",
                                  "where": {
                                    "anyof": [
                                      {
                                        "equals": true,
                                        "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange'), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsUDP')), int(first(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), '-')))), lessOrEquals(int(current('notallowedportsUDP')), int(last(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), '-')))))))]"
                                      },
                                      {
                                        "count": {
                                          "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]",
                                          "where": {
                                            "equals": true,
                                            "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsUDP')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), 4)), '-')))), lessOrEquals(int(current('notallowedportsUDP')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), 4)), '-')))))))]"
                                          }
                                        },
                                        "greater": 0
                                      }
                                    ]
                                  }
                                },
                                "greater": 0
                              },
                              {
                                "count": {
                                  "name": "notallowedportsUDP",
                                  "value": "[parameters('notallowedportsUDP')]",
                                  "where": {
                                    "anyof": [
                                      {
                                        "equals": true,
                                        "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsUDP')), int(first(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), '-')))), lessOrEquals(int(current('notallowedportsUDP')), int(last(split(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), '-')))))))]"
                                      },
                                      {
                                        "count": {
                                          "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                          "where": {
                                            "equals": true,
                                            "value": "[if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(current('notallowedportsUDP')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), 4)), '-')))), lessOrEquals(int(current('notallowedportsUDP')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), 4)), '-')))))))]"
                                          }
                                        },
                                        "greater": 0
                                      }
                                    ]
                                  }
                                },
                                "greater": 0
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange",
                                "in": "[parameters('notallowedportsUDP')]"
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange",
                                "in": "[parameters('notallowedportsUDP')]"
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]",
                                "in": "[parameters('notallowedportsUDP')]"
                              },
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                "in": "[parameters('notallowedportsUDP')]"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.904755+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-28T14:40:55.359450+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any SecurityRule Creation/update if they are Non-Bussiness and not in SGEC rules Default's External flow",
    "displayName": "SGEC-APPE-03-EXTERNAL",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-03-EXTERNAL",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-10-20T16:14:04.2793842Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-20T15:12:15.783673Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-03-EXTERNAL",
    "parameters": {
      "SGEC-external": {
        "allowedValues": null,
        "defaultValue": [
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromBastion",
            "priority": 200,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromJumpbox",
            "priority": 205,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "DenyRDPSSHfromPublicIP",
            "priority": 210,
            "protocol": "TCP",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Deny",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "DenyBackendToFrontend",
            "priority": 215,
            "protocol": "*",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "AllowAllInbound",
            "priority": 999,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Outbound",
            "name": "AllowAllOutbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to Add/Replace to NSG",
          "displayName": "SGEC Default Security Rules",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "ipRegions": {
        "allowedValues": null,
        "defaultValue": {
          "Bastion": [
            "10.185.0.128/26",
            "10.34.0.128/26"
          ],
          "External": [
            "10.185.128.0/19",
            "10.34.128.0/19"
          ],
          "IncludedRegions": [
            "eastus",
            "westeurope"
          ],
          "Internal": [
            "10.185.160.0/19",
            "10.34.160.0/19"
          ],
          "jumpbox": [
            "10.185.36.224/27",
            "10.34.32.64/27"
          ]
        },
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "Ranges based on regions",
          "strongType": null
        },
        "type": "Object"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming  conventionfrom BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups/SecurityRules",
            "field": "type"
          },
          {
            "anyof": [
              {
                "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                "greater": 2999
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                    "greater": 199
                  },
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
                    "less": 1000
                  }
                ]
              }
            ]
          },
          {
            "allof": [
              {
                "anyof": [
                  {
                    "allof": [
                      {
                        "Value": "[indexof(parameters('SGEC-external'), createObject('name', field('name'), 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes'))))]",
                        "equals": -1
                      },
                      {
                        "field": "name",
                        "notIn": [
                          "DenyBackendToFrontend",
                          "AllowRDPSSHfromBastion",
                          "AllowRDPSSHfromJumpbox"
                        ]
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromBastion', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Bastion]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowRDPSSHfromBastion')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Bastion)]"
                          }
                        ]
                      },
                      {
                        "equals": "AllowRDPSSHfromBastion",
                        "field": "name"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'AllowRDPSSHfromJumpbox', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Jumpbox]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'AllowRDPSSHfromJumpbox')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Jumpbox)]"
                          }
                        ]
                      },
                      {
                        "equals": "AllowRDPSSHfromJumpbox",
                        "field": "name"
                      }
                    ]
                  },
                  {
                    "allof": [
                      {
                        "anyof": [
                          {
                            "Value": "[indexof(parameters('SGEC-external'), createObject('name', 'DenyBackendToFrontend', 'access', field('Microsoft.Network/networkSecurityGroups/securityRules/access'),'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', '','sourceAddressPrefixes', createarray(),'destinationAddressPrefix', '','destinationAddressPrefixes',createarray()))]",
                            "equals": -1
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix'))),equals(field('name'),'DenyBackendToFrontend')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          },
                          {
                            "count": {
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "equals": false,
                                "value": "[if(and(not(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix'))),equals(field('name'),'DenyBackendToFrontend')),ipRangeContains(current(), field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),bool('true'))]"
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').Internal]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').Internal)]"
                          },
                          {
                            "count": {
                              "name": "IpRanges",
                              "value": "[parameters('ipRegions').External]",
                              "where": {
                                "count": {
                                  "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]",
                                  "where": {
                                    "equals": false,
                                    "value": "[if(and(equals(field('name'),'DenyBackendToFrontend'),not(empty(current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')))),ipRangeContains(current('IpRanges'), current('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes[*]')),bool('true'))]"
                                  }
                                },
                                "notequals": 0
                              }
                            },
                            "equals": "[length(parameters('ipRegions').External)]"
                          }
                        ]
                      },
                      {
                        "equals": "DenyBackendToFrontend",
                        "field": "name"
                      }
                    ]
                  }
                ]
              },
              {
                "contains": "[concat('networkSecurityGroups/',parameters('nsgName')[1])]",
                "field": "id"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-10-20T16:14:03.920382+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T15:12:15.727994+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only Standard RHEL version are authorized on the Cloud",
    "displayName": "VM-RH-01 - Only Standard RHEL version are authorized on the Cloud",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-05T10:32:39.1031385Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-02-01T15:33:04.4289399Z"
    },
    "mode": "All",
    "name": "VM-RH-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "notMatchInsensitively": "RedHat"
          },
          {
            "anyOf": [
              {
                "contains": "RHEL",
                "field": "Microsoft.Compute/imageOffer"
              },
              {
                "contains": "rhel",
                "field": "Microsoft.Compute/imageOffer"
              },
              {
                "contains": "redhat",
                "field": "Microsoft.Compute/imageOffer"
              },
              {
                "contains": "RedHat",
                "field": "Microsoft.Compute/imageOffer"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-05T10:32:39.027160+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-01T15:33:04.360491+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only Standard RHEL version are authorized on the Cloud",
    "displayName": "VM-RH-01-ENFORCE - Only Standard RHEL version are authorized on the Cloud",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-05T10:32:39.1461309Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VM-RH-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled",
          "Audit"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "notMatchInsensitively": "RedHat"
          },
          {
            "anyOf": [
              {
                "contains": "RHEL",
                "field": "Microsoft.Compute/imageOffer"
              },
              {
                "contains": "rhel",
                "field": "Microsoft.Compute/imageOffer"
              },
              {
                "contains": "redhat",
                "field": "Microsoft.Compute/imageOffer"
              },
              {
                "contains": "RedHat",
                "field": "Microsoft.Compute/imageOffer"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-05T10:32:39.055061+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-12-05T10:32:39.055061+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only 8.x versions of RHEL are authorized on the Cloud",
    "displayName": "VM-RH-02-ENFORCE - Only 8.x versions of RHEL are authorized on the Cloud",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-12-05T10:32:39.2533142Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VM-RH-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled",
          "Audit"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "like": "RedHat"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Compute/imageSku",
                "notLike": "8*"
              },
              {
                "count": {
                  "name": "digit",
                  "value": [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                    "6",
                    "7",
                    "9"
                  ],
                  "where": {
                    "allOf": [
                      {
                        "notEquals": -1,
                        "value": "[indexOf(first(field('Microsoft.Compute/imageSku')), current('digit'))]"
                      },
                      {
                        "greater": "[indexOf(first(field('Microsoft.Compute/imageSku')), current('digit'))]",
                        "value": "[indexOf(first(field('Microsoft.Compute/imageSku')), '8')]"
                      }
                    ]
                  }
                },
                "greater": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-12-05T10:32:39.102748+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-12-05T10:32:39.102748+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Digital Twins must use system-assigned managed identity to route data to Event Hub and Service Bus",
    "displayName": "DTW-03-ENFORCE : Azure Digital Twins must use system-assigned managed identity to route data to Event Hub and Service Bus",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DTW-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-31T10:42:57.0427057Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DTW-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DigitalTwins/digitalTwinsInstances",
            "field": "type"
          },
          {
            "field": "identity.type",
            "notContains": "SystemAssigned"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-31T10:42:56.973176+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-31T10:42:56.973176+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Digital Twins must disable public access",
    "displayName": "DTW-04 : Azure Digital Twins must disable public access",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DTW-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-31T10:42:57.2725049Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DTW-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DigitalTwins/digitalTwinsInstances",
            "field": "type"
          },
          {
            "field": "Microsoft.DigitalTwins/digitalTwinsInstances/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-31T10:42:57.177992+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-31T10:42:57.177992+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Digital Twins must disable public access",
    "displayName": "DTW-04-ENFORCE : Azure Digital Twins must disable public access",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DTW-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-31T10:42:57.3263783Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DTW-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DigitalTwins/digitalTwinsInstances",
            "field": "type"
          },
          {
            "field": "Microsoft.DigitalTwins/digitalTwinsInstances/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-31T10:42:57.177591+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-31T10:42:57.177591+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Digital Twins must use system-assigned managed identity to route data to Event Hub and Service Bus",
    "displayName": "DTW-03 : Azure Digital Twins must use system-assigned managed identity to route data to Event Hub and Service Bus",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DTW-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-01-31T10:44:28.5549296Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DTW-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DigitalTwins/digitalTwinsInstances",
            "field": "type"
          },
          {
            "field": "identity.type",
            "notContains": "SystemAssigned"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-01-31T10:44:28.476258+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-01-31T10:44:28.476258+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SAS tokens with all permissions must not be used",
    "displayName": "IOT-HUB-04: SAS tokens with all permissions must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-13T09:45:36.5151027Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "count": {
              "field": "Microsoft.Devices/IotHubs/authorizationPolicies[*]",
              "where": {
                "anyOf": [
                  {
                    "equals": "iothubowner",
                    "field": "Microsoft.Devices/IotHubs/authorizationPolicies[*].keyName"
                  },
                  {
                    "equals": "RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect",
                    "field": "Microsoft.Devices/IotHubs/authorizationPolicies[*].rights"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-13T09:45:36.394063+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-13T09:45:36.394063+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The encryption must be set to AES-256 and only AES-256 Kerberos encryption must be used",
    "displayName": "ADDS-04: The encryption must be set to AES-256 and only AES-256 Kerberos encryption must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADDS-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-26T14:46:32.7407619Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-17T15:41:10.3367135Z"
    },
    "mode": "All",
    "name": "ADDS-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "equals": "AES-256;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.kerberosTicketEncryption"
              },
              {
                "equals": "AES-256-GCM;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.channelEncryption"
              }
            ]
          },
          "existenceScope": "ResourceGroup",
          "name": "[concat(first(split(field('fullName'),'/')),'/default')]",
          "type": "Microsoft.Storage/storageAccounts/fileServices"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-26T14:46:32.641820+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-17T15:41:10.324569+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoints in ASA Clusters for Event Hubs private connection",
    "displayName": "STMA-05-B: Private endpoints in ASA Clusters for Event Hubs private connection",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-05-B-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-11T16:54:45.2866458Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-06-05T12:39:05.6575421Z"
    },
    "mode": "All",
    "name": "STMA-05-B-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.StreamAnalytics/clusters/privateEndpoints",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "SetUpComplete",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "Microsoft.EventHub/namespaces",
                    "field": "Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceId"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.EventHub/namespaces/privateEndpointConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.EventHub/namespaces/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "[concat('Microsoft.Network/privateEndpoints/', field('name'))]",
                    "field": "Microsoft.EventHub/namespaces/privateEndpointConnections[*].privateEndpoint.id"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "resourcegroup",
          "name": "[last(split(first(field('Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceId')),'/'))]",
          "resourceGroupName": "[split(first(field('Microsoft.StreamAnalytics/clusters/privateEndpoints/manualPrivateLinkServiceConnections[*].privateLinkServiceId')),'/')[4]]",
          "type": "Microsoft.EventHub/namespaces"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-11T16:54:45.223166+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-05T12:39:05.604889+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "When deploying Stream Analytics jobs, these must connect to trusted inputs and outputs",
    "displayName": "STMA-06: When deploying Stream Analytics jobs, these must connect to trusted inputs and outputs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STMA-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-11T16:54:45.3573942Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STMA-06-sgct",
    "parameters": {
      "allowedAzureFunctionAccounts": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "List of allowed Function Apps",
          "strongType": null
        },
        "type": "Array"
      },
      "allowedCosmosAccounts": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "List of allowed Cosmos DB accounts",
          "strongType": null
        },
        "type": "Array"
      },
      "allowedDBforPostgreSQLServers": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "List of allowed DBforPostgreSQL servers",
          "strongType": null
        },
        "type": "Array"
      },
      "allowedEventHubNamespaces": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "List of allowed Event Hub namespaces",
          "strongType": null
        },
        "type": "Array"
      },
      "allowedIoTHubNamespaces": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "List of allowed IoT Hubs",
          "strongType": null
        },
        "type": "Array"
      },
      "allowedSQLServers": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "List of allowed SQL servers",
          "strongType": null
        },
        "type": "Array"
      },
      "allowedStorageAccounts": {
        "allowedValues": null,
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "List of allowed storage accounts",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled",
          "Audit"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The desired effect of the policy.",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "anyOf": [
          {
            "allOf": [
              {
                "equals": "Microsoft.StreamAnalytics/streamingjobs/outputs",
                "field": "type"
              },
              {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Sql/Server/Database",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.Microsoft-Sql-Server-Database.server",
                        "notIn": "[parameters('allowedSQLServers')]"
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPS",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.DBforPostgreSQL/servers/databases",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.Microsoft-DBforPostgreSQL-servers-databases.server",
                        "notIn": "[parameters('allowedDBforPostgreSQLServers')]"
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Storage/DocumentDB",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.Microsoft-Storage-DocumentDB.accountId",
                        "notIn": "[parameters('allowedCosmosAccounts')]"
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPS"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.AzureFunction",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.Microsoft-AzureFunction.functionAppName",
                        "notIn": "[parameters('allowedAzureFunctionAccounts')]"
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPS"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Storage/Table",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.Microsoft-Storage-Table.accountName",
                        "notIn": "[parameters('allowedStorageAccounts')]"
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Storage/Blob",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.type"
                      },
                      {
                        "count": {
                          "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.Microsoft-Storage-Blob.storageAccounts[*]",
                          "where": {
                            "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.Microsoft-Storage-Blob.storageAccounts[*].accountName",
                            "notIn": "[parameters('allowedStorageAccounts')]"
                          }
                        },
                        "greater": 0
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/outputs/datasource.type",
                        "notIn": [
                          "Microsoft.EventHub/EventHub",
                          "Microsoft.Sql/Server/Database",
                          "Microsoft.Storage/DocumentDB",
                          "Microsoft.AzureFunction",
                          "Microsoft.Synapse/workspaces",
                          "Microsoft.Storage/Table",
                          "Microsoft.Storage/Blob"
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "equals": "Microsoft.StreamAnalytics/streamingjobs/inputs",
                "field": "type"
              },
              {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.EventHub/EventHub",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.Microsoft-ServiceBus-EventHub.serviceBusNamespace",
                        "notIn": "[parameters('allowedEventHubNamespaces')]"
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Devices/IotHubs",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.Microsoft-Devices-IotHubs.iotHubNamespace",
                        "notIn": "[parameters('allowedIoTHubNamespaces')]"
                      },
                      {
                        "notIn": [
                          "APPI"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Sql/Server/Database",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Reference.datasource.type"
                      },
                      {
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Reference.datasource.Microsoft-Sql-Server-Database.server",
                        "notIn": "[parameters('allowedSqlServers')]"
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPS",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Storage/Blob",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.type"
                      },
                      {
                        "count": {
                          "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.Microsoft-Storage-Blob.storageAccounts[*]",
                          "where": {
                            "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.Microsoft-Storage-Blob.storageAccounts[*].accountName",
                            "notIn": "[parameters('allowedStorageAccounts')]"
                          }
                        },
                        "greater": 0
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "Microsoft.Storage/Blob",
                        "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Reference.datasource.type"
                      },
                      {
                        "count": {
                          "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Reference.datasource.Microsoft-Storage-Blob.storageAccounts[*]",
                          "where": {
                            "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Reference.datasource.Microsoft-Storage-Blob.storageAccounts[*].accountName",
                            "notIn": "[parameters('allowedStorageAccounts')]"
                          }
                        },
                        "greater": 0
                      },
                      {
                        "notIn": [
                          "APPI",
                          "APPE",
                          "APPIO"
                        ],
                        "value": "[toUpper(subscription().tags['spoke_type'])]"
                      }
                    ]
                  },
                  {
                    "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Stream.datasource.type",
                    "notIn": [
                      "Microsoft.EventHub/EventHub",
                      "Microsoft.Devices/IotHubs",
                      "Microsoft.Storage/Blob"
                    ]
                  },
                  {
                    "field": "Microsoft.StreamAnalytics/streamingjobs/inputs/Reference.datasource.type",
                    "notIn": [
                      "Microsoft.Sql/Server/Database",
                      "Microsoft.Storage/Blob"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-11T16:54:45.255379+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-11T16:54:45.255379+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace:Security, ScanStatusLogEvents, DataSensitivityLogEvent",
    "displayName": "PVW-10-sgct : Diagnostics settings must be enabled and the following logs must be exported",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/PVW-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-13T10:52:04.2662866Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "PVW-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Purview/accounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.Insights/diagnosticSettings/storageAccountId"
              },
              {
                "Equals": 3,
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "Security",
                          "ScanStatusLogEvents",
                          "DataSensitivityLogEvent"
                        ]
                      },
                      {
                        "equals": "True",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled"
                      }
                    ]
                  }
                }
              },
              {
                "Equals": 3,
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "Security",
                          "ScanStatusLogEvents",
                          "DataSensitivityLogEvent"
                        ]
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                        "greater": 6
                      }
                    ]
                  }
                }
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-13T10:52:04.182434+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-13T10:52:04.182434+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Logic App must disable remote debugging",
    "displayName": "LGC-16-sgct : Azure Logic App must disable remote debugging",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-16-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:30:08.9139008Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LGC-16-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "equals": "true",
            "field": "Microsoft.Web/sites/siteConfig.remoteDebuggingEnabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:30:08.859292+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-18T14:30:08.859292+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Logic App must disable Websockets",
    "displayName": "LGC-08-sgct : Azure Logic App must disable Websockets",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:30:08.9509118Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-06-26T12:33:34.8982254Z"
    },
    "mode": "All",
    "name": "LGC-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "false",
            "field": "Microsoft.Web/sites/config/webSocketsEnabled"
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:30:08.867613+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-26T12:33:34.886116+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Logic App must use TLS1.2",
    "displayName": "LGC-13-sgct : Azure Logic App must use TLS1.2",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:30:08.9855115Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LGC-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/config/minTlsVersion"
              },
              {
                "field": "Microsoft.Web/sites/config/minTlsVersion",
                "notEquals": "1.2"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:30:08.899874+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-18T14:30:08.899874+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace",
    "displayName": "LGC-18-sgct : Diagnostics settings must be enabled ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:31:40.4411124Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-22T09:19:50.2903174Z"
    },
    "mode": "All",
    "name": "LGC-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "FunctionAppLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "allLogs",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                ]
              }
            },
            "equals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:31:40.351328+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-22T09:19:50.263628+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Logic App must only be accessible over HTTPS",
    "displayName": "LGC-12-sgct : Azure Logic App must only be accessible over HTTPS",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-18T14:31:40.4418313Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LGC-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/httpsOnly"
              },
              {
                "equals": "false",
                "field": "Microsoft.Web/sites/httpsOnly"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-18T14:31:40.306619+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-18T14:31:40.306619+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Automation account Hybrid Runbook Worker is forbidden",
    "displayName": "AUT-15 : Azure Automation account Hybrid Runbook Worker is forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AUT-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-17T09:56:50.448404Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AUT-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Automation/automationAccounts/hybridRunbookWorkerGroups",
        "field": "type"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-17T09:56:50.344850+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-17T09:56:50.344850+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System managed identity must be used on Azure Automation account",
    "displayName": "AUT-11 : System managed identity must be used on Azure Automation account",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AUT-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-17T09:56:50.513241Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AUT-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Automation/automationAccounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "identity.type"
              },
              {
                "field": "identity.type",
                "notEquals": "SystemAssigned"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-17T09:56:50.432983+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-17T09:56:50.432983+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This policy deploys a diagnostic setting using a category group to route logs to a Log Analytics workspace for automation account",
    "displayName": "AUT-19 : Enable logging  for Automation Account to Log Analytics",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AUT-19-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-24T15:31:40.0180451Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AUT-19-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Automation/automationAccounts",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "field": "microsoft.insights/diagnosticSettings/logs[*].category",
                        "in": [
                          "JobLogs",
                          "DSCNodeStatus",
                          "AuditEvent"
                        ]
                      }
                    ]
                  }
                },
                "equals": 3
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-24T15:31:39.891932+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-24T15:31:39.891932+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "A private endpoint specific to the sub-resources (Files) must be used",
    "displayName": "FILE-23 : A private endpoint specific to the sub-resources (Files) must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-23-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T09:20:59.6343234Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "FILE-23-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "providers/Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId"
                  },
                  {
                    "equals": "['file']",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"
                  },
                  {
                    "equals": "[split(current('Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId'),'/')[8]]",
                    "value": "[split(field('id'),'/')[8]]"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Network/privateEndpoints"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T09:20:59.570862+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T09:20:59.570862+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "A private endpoint specific to the sub-resources (Table) must be used",
    "displayName": "STO-50c : A private endpoint specific to the sub-resources (Table) must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-50c-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T09:20:59.6832418Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-50c-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/tableServices/tables",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "providers/Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId"
                  },
                  {
                    "equals": "['table']",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"
                  },
                  {
                    "equals": "[split(current('Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId'),'/')[8]]",
                    "value": "[split(field('id'),'/')[8]]"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Network/privateEndpoints"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T09:20:59.622053+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T09:20:59.622053+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "A private endpoint specific to the sub-resources (Static Site) must be used",
    "displayName": "STO-50b : A private endpoint specific to the sub-resources (Static Site) must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-50b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T09:20:59.6907529Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-50b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "contains": "providers/Microsoft.Storage/storageAccounts",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId"
                  },
                  {
                    "equals": "['web']",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"
                  },
                  {
                    "equals": "[split(current('Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId'),'/')[8]]",
                    "value": "[split(field('id'),'/')[8]]"
                  }
                ]
              }
            },
            "greater": 0
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Network/privateEndpoints"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T09:20:59.597091+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T09:20:59.597091+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In server parameters, 'audit_log_events' must be set to 'CONNECTION, DDL, DCL, ADMIN'",
    "displayName": "DB-FLEX-MYSQL-07- In server parameters, 'audit_log_events' must be set to 'CONNECTION, DDL, DCL, ADMIN'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-07-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T11:10:50.5122353Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-07-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "CONNECTION,DDL,DCL,ADMIN",
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value"
          },
          "name": "audit_log_events",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T11:10:50.453479+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T11:10:50.453479+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In server parameters, 'audit_log_exclude_users' must be set to '' (None)",
    "displayName": "DB-FLEX-MYSQL-08- In server parameters, 'audit_log_exclude_users' must be set to '' (None)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-08-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-19T11:10:50.7431205Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-08-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "",
            "field": "Microsoft.DBforMySQL/flexibleServers/configurations/value"
          },
          "name": "audit_log_exclude_users",
          "type": "Microsoft.DBforMySQL/flexibleServers/configurations"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-19T11:10:50.680493+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-19T11:10:50.680493+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing logging and monitoring, Advanced Data Security must be configured",
    "displayName": "MI-SQL-10: Advanced Data Security must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-10-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-20T13:39:41.2925575Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "MI-SQL-10-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          },
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "field": "kind",
            "notContains": "analytics"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Enabled",
            "field": "Microsoft.Sql/managedInstances/securityAlertPolicies/state"
          },
          "name": "Default",
          "type": "Microsoft.Sql/managedInstances/securityAlertPolicies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-20T13:39:41.227253+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T13:39:41.227253+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Microsoft Defender for Servers (plan 1 CSPM free tier) should be enabled in Production",
    "displayName": "VM-11: Microsoft Defender for Servers should be enabled in Production",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-11-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-20T14:27:45.9916016Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VM-11-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.Compute/virtualMachines",
              "Microsoft.ClassicCompute/virtualMachines"
            ]
          },
          {
            "anyof": [
              {
                "in": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "contains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "contains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Standard",
            "field": "Microsoft.Security/pricings/pricingTier"
          },
          "existenceScope": "subscription",
          "name": "virtualMachines",
          "type": "Microsoft.Security/pricings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-20T14:27:45.916827+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-20T14:27:45.916827+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Local accounts with Kubernetes RBAC must be used",
    "displayName": "AKS-11-sgct - Local accounts with Kubernetes RBAC must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-21T13:48:51.977032Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:55:27.1484596Z"
    },
    "mode": "All",
    "name": "AKS-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "AzureML in APPI or APPS"
        ],
        "defaultValue": [
          "AzureML in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "equals": "false",
                "field": "Microsoft.ContainerService/managedClusters/disableLocalAccounts"
              }
            ]
          },
          "type": "Microsoft.ContainerService/managedClusters"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-21T13:48:51.845777+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:55:27.100492+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For spokes tagged 'APPI', 'sg_Resource_ControlTower_Profile' tag must be set to one of the following values: 'AzureML in APPI or APPS' or 'Container4SG in APPI or APPS', ",
    "displayName": "AKS-TAG-01-ENFORCE - For spokes tagged 'APPI', 'sg_Resource_ControlTower_Profile' tag must be set to the allowed values",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-TAG-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-21T13:48:52.2109277Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:01:42.7916761Z"
    },
    "mode": "All",
    "name": "AKS-TAG-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "APPI",
          "APPS"
        ],
        "defaultValue": [
          "APPI",
          "APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagValue": {
        "allowedValues": [
          "AzureML in APPI or APPS",
          "Container4SG in APPI or APPS"
        ],
        "defaultValue": [
          "AzureML in APPI or APPS",
          "Container4SG in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "in": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-21T13:48:52.142651+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:01:42.722590+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For spokes tagged 'APPI', 'sg_Resource_ControlTower_Profile' tag must be set to one of the following values: 'AzureML in APPI or APPS' or 'Container4SG in APPI or APPS', ",
    "displayName": "AKS-TAG-01 - For spokes tagged 'APPI', 'sg_Resource_ControlTower_Profile' tag must be set to the allowed values",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-TAG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-21T13:48:52.5035509Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:42:59.4648455Z"
    },
    "mode": "All",
    "name": "AKS-TAG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "APPI",
          "APPS"
        ],
        "defaultValue": [
          "APPI",
          "APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagValue": {
        "allowedValues": [
          "AzureML in APPI or APPS",
          "Container4SG in APPI or APPS"
        ],
        "defaultValue": [
          "AzureML in APPI or APPS",
          "Container4SG in APPI or APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "in": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-21T13:48:52.377046+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:42:59.403501+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Hub must disable public acces in APPI and APPE use cases",
    "displayName": "EVH-05: Azure Event Hub must disable public acces in APPI and APPE use cases",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:53.419067Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "Microsoft.EventHub/namespaces/networkRuleSets",
                    "field": "type"
                  },
                  {
                    "field": "Microsoft.EventHub/namespaces/networkRuleSets/publicNetworkAccess",
                    "notEquals": "Disabled"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Microsoft.EventHub/namespaces",
                    "field": "type"
                  },
                  {
                    "field": "Microsoft.EventHub/namespaces/publicNetworkAccess",
                    "notEquals": "Disabled"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.338544+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.338544+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Zone Redundancy must be enabled",
    "displayName": "EVH-13: Zone Redundancy must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:53.4539039Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          },
          {
            "field": "Microsoft.EventHub/namespaces/zoneRedundant",
            "notEquals": true
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.383981+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.383981+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " Minimum TLS Version must be set to 1.2",
    "displayName": "EVH-11:  Minimum TLS Version must be set to 1.2",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:53.5877612Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          },
          {
            "field": "Microsoft.EventHub/namespaces/minimumTlsVersion",
            "notEquals": "1.2"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.484089+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.484089+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Data purge must be disabled",
    "displayName": "ADX-06: Data purge must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:53.6341792Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Kusto/clusters/enablePurge"
              },
              {
                "equals": true,
                "field": "Microsoft.Kusto/clusters/enablePurge"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.544201+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.544201+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Network ACL default action must be set to 'Deny'",
    "displayName": "STO-70: Network ACL default action must be set to 'Deny'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-70-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:53.6715613Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-70-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/publicNetworkAccess",
            "notEquals": "Disabled"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
            "notEquals": "Deny"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.606283+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.606283+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IP rules (Storage account firewall) must be set to allow traffic only from WAF Imperva",
    "displayName": "STO-64 : IP rules (Storage account firewall) must be set to allow traffic only from WAF Imperva",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-64-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:53.8314559Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-64-sgct",
    "parameters": {
      "WAFImpervaIP": {
        "allowedValues": null,
        "defaultValue": [
          "192.109.140.0/24",
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Storage/storageAccounts/publicNetworkAccess"
          },
          {
            "count": {
              "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]",
              "where": {
                "Equals": "[length(parameters('WAFImpervaIP'))]",
                "count": {
                  "name": "IpRanges",
                  "value": "[parameters('WAFImpervaIP')]",
                  "where": {
                    "equals": false,
                    "value": "[if(not(empty(current('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value'))),ipRangeContains(current('IpRanges'), current('Microsoft.Storage/storageAccounts/networkAcls.ipRules[*].value')),bool('true'))]"
                  }
                }
              }
            },
            "notEquals": "0"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.760448+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.760448+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Queries and command from others tenants must be disabled",
    "displayName": "ADX-03: Queries and command from others tenants must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:53.8872551Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Kusto/clusters/trustedExternalTenants[*]"
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.787791+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.787791+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Restrict Outbound Access must be enabled and it must list only allowed FQDNs",
    "displayName": "ADX-04: Restrict Outbound Access must be enabled and it must list only allowed FQDNs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:54.0128964Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Kusto/clusters/restrictOutboundNetworkAccess"
              },
              {
                "field": "Microsoft.Kusto/clusters/restrictOutboundNetworkAccess",
                "notEquals": "Enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.934424+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.934424+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For Azure Data Explorer databases, retention period must set according to the PSAT with a minimum of 30 days",
    "displayName": "ADX-07: Retention Period should be set to a minimum period of 30 days",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:54.060299Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters/databases",
            "field": "type"
          },
          {
            "less": 30,
            "value": "[if(empty(field('Microsoft.Kusto/clusters/databases/softDeletePeriod')),30,int(substring(string(field('Microsoft.Kusto/clusters/databases/softDeletePeriod')), 1, sub(length(field('Microsoft.Kusto/clusters/databases/softDeletePeriod')),2))))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:53.974427+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:53.974427+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Network ACL default action must be set to 'Deny'",
    "displayName": "STO-70-ENFORCE: Network ACL default action must be set to 'Deny'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-70-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:23:54.1196366Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-70-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Modify",
          "Disabled"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/publicNetworkAccess",
            "notEquals": "Disabled"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
            "notEquals": "Deny"
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "Microsoft.Storage/storageAccounts/networkAcls.defaultAction",
              "operation": "addOrReplace",
              "value": "Deny"
            }
          ],
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:23:54.008585+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:23:54.008585+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For data availability >= A3, secondary namespace for Geo-Disaster Recovery must be configured",
    "displayName": "EVH-14: For data availability >= A3, secondary namespace for Geo-Disaster Recovery must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:26.5512506Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-14-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          },
          {
            "in": [
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "exists": true,
            "field": "Microsoft.EventHub/namespaces/disasterrecoveryconfigs/partnerNamespace"
          },
          "type": "Microsoft.EventHub/namespaces/disasterrecoveryconfigs"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:26.395527+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:26.395527+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Read access to storage logging and metrics from any network is forbidden",
    "displayName": "STO-67-ENFORCE : Read access to storage logging and metrics from any network is forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-67-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:26.8494035Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-67-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "contains": "Logging",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.bypass"
              },
              {
                "contains": "Metrics",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.bypass"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:26.729157+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:26.729157+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Storage Account Service Endpoints are forbidden. Applicable to source Storage Account subnets, destination subnets are controlled by Service Endpoint policies only.",
    "displayName": "STO-71: Storage Account Service Endpoints are forbidden in APPE / APPI use cases",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-71-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:26.9270471Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-71-sgct",
    "parameters": {
      "SnowflakeID": {
        "allowedValues": [
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/xp",
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/gs",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs"
        ],
        "defaultValue": [
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/xp",
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/gs",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of Snowflake ID",
          "displayName": "Snowflake IDs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks/subnets",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "id",
            "notIn": "[parameters('SnowflakeID')]"
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*]",
              "where": {
                "equals": "Microsoft.Storage",
                "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*].service"
              }
            },
            "equals": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:26.863074+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:26.863074+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Disk encryption must be enabled for confidentiality >= C2",
    "displayName": "ADX-05: Disk encryption must be enabled for confidentiality >= C2",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:26.9768762Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "equals": "C2",
            "value": "[toUpper(subscription().tags['confidentiality'])]"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Kusto/clusters/enableDiskEncryption"
              },
              {
                "equals": false,
                "field": "Microsoft.Kusto/clusters/enableDiskEncryption"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:26.909927+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:26.909927+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace: audit category group",
    "displayName": "ADX-09: Diagnostics settings must be enabled ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:26.9841638Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:26.845459+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:26.845459+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR by adding in ADF EncryptionMethod=1 in the connection string (in the Linked Service)",
    "displayName": "ADF-16: Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADF-16-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:27.0670282Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADF-16-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories/linkedservices",
            "field": "type"
          },
          {
            "allOf": [
              {
                "equals": "Oracle",
                "field": "Microsoft.DataFactory/factories/linkedservices/type"
              },
              {
                "NotContains": "EncryptionMethod=1",
                "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:26.995501+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:26.995501+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Data purge must be disabled",
    "displayName": "ADX-06-ENFORCE: Data purge must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:27.1072691Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Kusto/clusters/enablePurge"
              },
              {
                "equals": true,
                "field": "Microsoft.Kusto/clusters/enablePurge"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:27.005108+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:27.005108+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service Endpoint Policies objects must be deployed in the same subscription they target. The widest target scope is the subscription",
    "displayName": "STO-74a: Service Endpoint Policies objects must be deployed in the same subscription scope they target",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-74a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:27.1930391Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-74a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/serviceEndpointPolicies",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Microsoft.Storage",
            "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].service"
          },
          {
            "count": {
              "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*]",
              "where": {
                "count": {
                  "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].serviceResources[*]",
                  "where": {
                    "equals": true,
                    "value": "[startsWith(string(first(field('Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].serviceResources[*]'))),concat('/subscriptions/', subscription().subscriptionId))]"
                  }
                },
                "notEquals": "[length(field('Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].serviceResources[*]'))]"
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:27.095785+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:27.095785+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Queries and command from others tenants must be disabled",
    "displayName": "ADX-03-ENFORCE: Queries and command from others tenants must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:25:27.2215841Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Kusto/clusters/trustedExternalTenants[*]"
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:25:27.117150+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:25:27.117150+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR by adding in ADF EncryptionMethod=1 in the connection string (in the Linked Service)",
    "displayName": "ADF-16-ENFORCE: Ensure SSL/TLS encryption in transit when moving data from Oracle stores through SHIR",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADF-16-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:26:59.7119036Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADF-16-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories/linkedservices",
            "field": "type"
          },
          {
            "allOf": [
              {
                "equals": "Oracle",
                "field": "Microsoft.DataFactory/factories/linkedservices/type"
              },
              {
                "NotContains": "EncryptionMethod=1",
                "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:26:59.621551+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:26:59.621551+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Encryption at rest with Microsoft-managed keys must be activated",
    "displayName": "EVH-12: Encryption at rest with Microsoft-managed keys must be activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:26:59.8260995Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          },
          {
            "exists": true,
            "field": "Microsoft.EventHub/namespaces/encryption"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:26:59.758993+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:26:59.758993+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management Log Analytics workspace: audit category group",
    "displayName": "EVH-18: Diagnostics settings must be enabled for audit category",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:27:00.0772388Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "allOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                  },
                  {
                    "equals": "audit",
                    "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                  }
                ]
              }
            },
            "equals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:26:59.963852+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:26:59.963852+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For Azure Data Explorer databases, retention period must set according to the PSAT with a minimum of 30 days",
    "displayName": "ADX-07-ENFORCE: Retention Period should be set to a minimum period of 30 days",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:27:00.1886022Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters/databases",
            "field": "type"
          },
          {
            "less": 30,
            "value": "[if(empty(field('Microsoft.Kusto/clusters/databases/softDeletePeriod')),30,int(substring(string(field('Microsoft.Kusto/clusters/databases/softDeletePeriod')), 1, sub(length(field('Microsoft.Kusto/clusters/databases/softDeletePeriod')),2))))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:27:00.100658+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:27:00.100658+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostics settings must be enabled and the following logs must be exported to the GDI management LAW",
    "displayName": "ADB-18: Diagnostics settings must be enabled and the following logs must be exported to the GDI management LAW",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADB-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:27:00.2265876Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADB-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Databricks/workspaces",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "anyOf": [
                          {
                            "equals": "accounts",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          },
                          {
                            "equals": "unityCatalog",
                            "field": "microsoft.insights/diagnosticSettings/logs[*].category"
                          }
                        ]
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      }
                    ]
                  }
                },
                "equals": 2
              },
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "equals": true,
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                  }
                },
                "equals": 2
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:27:00.032556+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:27:00.032556+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Read access to storage logging and metrics from any network is forbidden",
    "displayName": "STO-67 : Read access to storage logging and metrics from any network is forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-67-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:27:00.2293449Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-67-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "contains": "Logging",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.bypass"
              },
              {
                "contains": "Metrics",
                "field": "Microsoft.Storage/storageAccounts/networkAcls.bypass"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:27:00.145324+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:27:00.145324+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "All activity & application logs must be monitored and exported to the existing central cybersecurity LAW",
    "displayName": "DB-SQL-23: All activity & application logs must be monitored and exported to the existing central cybersecurity LAW",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-SQL-23-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:27:00.2447425Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DB-SQL-23-sgct",
    "parameters": {
      "categoryGroup": {
        "allowedValues": [
          "audit",
          "allLogs"
        ],
        "defaultValue": "audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Diagnostic category group - none, audit, or allLogs.",
          "displayName": "Category Group",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "microsoft.sql/servers/databases",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allOf": [
                      {
                        "equals": "[equals(parameters('categoryGroup'), 'audit')]",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled"
                      },
                      {
                        "equals": "audit",
                        "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:27:00.089844+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:27:00.089844+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Hub namespaces must use SAMI to connect to other ressources",
    "displayName": "EVH-04: Azure Event Hub namespaces must use SAMI to connect to other ressources",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:27:00.3217427Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:27:00.167593+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:27:00.167593+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Disk encryption must be enabled for confidentiality >= C2",
    "displayName": "ADX-05-ENFORCE: Disk encryption must be enabled for confidentiality >= C2",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:32.7126533Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "equals": "C2",
            "value": "[toUpper(subscription().tags['confidentiality'])]"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Kusto/clusters/enableDiskEncryption"
              },
              {
                "equals": false,
                "field": "Microsoft.Kusto/clusters/enableDiskEncryption"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:32.629214+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:28:32.629214+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Restrict Outbound Access must be enabled and it must list only allowed FQDNs",
    "displayName": "ADX-04-ENFORCE: Restrict Outbound Access must be enabled and it must list only allowed FQDNs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:32.7691238Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Kusto/clusters/restrictOutboundNetworkAccess"
              },
              {
                "field": "Microsoft.Kusto/clusters/restrictOutboundNetworkAccess",
                "notEquals": "Enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:32.652659+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:28:32.652659+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Hub must use Private Endpoints in APPI and APPE use cases",
    "displayName": "EVH-06: Azure  Event Hub must use Private Endpoints in APPI and APPE use cases",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:32.8197561Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-29T17:08:19.4119138Z"
    },
    "mode": "All",
    "name": "EVH-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Approved",
            "field": "Microsoft.EventHub/namespaces/privateEndpointConnections/privateLinkServiceConnectionState.status"
          },
          "type": "Microsoft.EventHub/namespaces/privateEndpointConnections"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:32.761225+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-29T17:08:19.384157+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "vNET rules must not be used",
    "displayName": "STO-65: in APPI/APPE vNET rules must not be used and public access must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-65-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:33.0826645Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-06-25T16:40:54.5698393Z"
    },
    "mode": "All",
    "name": "STO-65-sgct",
    "parameters": {
      "SnowflakeID": {
        "allowedValues": null,
        "defaultValue": [
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infrarg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/xp",
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infrarg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/gs",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infrarg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infrarg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infrarg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infrarg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
          "/subscriptions/ae0c1e4e-d49e-4115-b3ba-888d77ea97a3/resourceGroups/azure-prod/providers/Microsoft.Network/virtualNetworks/azure-prod/subnets/xp",
          "/subscriptions/ae0c1e4e-d49e-4115-b3ba-888d77ea97a3/resourceGroups/azure-prod/providers/Microsoft.Network/virtualNetworks/azure-prod/subnets/gs",
          "/subscriptions/37265438-aa4f-49f6-adc4-46271ae19193/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
          "/subscriptions/37265438-aa4f-49f6-adc4-46271ae19193/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs",
          "/subscriptions/63c9e19b-5cf1-4dcf-ace5-bf0f416f2ff7/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
          "/subscriptions/63c9e19b-5cf1-4dcf-ace5-bf0f416f2ff7/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/gs",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/xp",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/xp",
          "/subscriptions/c4163da0-f07a-42ab-a254-9ca2bf882e98/resourceGroups/deployment-infra-rg/providers/Microsoft.Network/virtualNetworks/deployment-vnet/subnets/xp",
          "/subscriptions/debd2e8d-3a70-4668-9770-fb68c5a87b60/resourceGroups/deployment-infra-rg3/providers/Microsoft.Network/virtualNetworks/deployment-vnet3/subnets/gs",
          "/subscriptions/61940d42-dbae-45a5-a08d-ca8717f2f151/resourceGroups/deployment-infra-rg2/providers/Microsoft.Network/virtualNetworks/deployment-vnet2/subnets/gs"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of Snowflake ID",
          "displayName": "Snowflake IDs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/publicNetworkAccess",
            "notEquals": "Disabled"
          },
          {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Storage/storageAccounts/networkAcls.virtualNetworkRules[*].id",
                        "notIn": "[parameters('SnowflakeID')]"
                      }
                    ]
                  }
                },
                "greater": 0
              },
              {
                "count": {
                  "field": "Microsoft.Storage/storageAccounts/networkAcls.ipRules[*]"
                },
                "greater": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:32.991994+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-25T16:40:54.542692+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "App Service Public access must be disabled",
    "displayName": "WEBA-24-ENFORCE - App Service Public access must be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/WEBA-24-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:33.2239633Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-22T13:03:28.1412591Z"
    },
    "mode": "All",
    "name": "WEBA-24-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "notEquals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.Web/sites/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:33.139085+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-22T13:03:28.102672+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System-assigned Managed Identity must be enabled on Azure Data Explorer service by default",
    "displayName": "ADX-01: System-assigned Managed Identity must be enabled on Azure Data Explorer service by default",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADX-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:33.2300275Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADX-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Kusto/clusters",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:33.140386+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:28:33.140386+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If Public Access is enabled, it must be configured to accept connections from at least one virtual network subnet service endpoint and public IPs address are forbidden",
    "displayName": "EVH-08: If public access is enabled, accept connection from one VNET and block public IP for APPIO use case",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:33.2526801Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "privateIPRanges": {
        "allowedValues": null,
        "defaultValue": [
          "10.0.0.0/8",
          "172.16.0.0/12",
          "192.168.0.0/16"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of private IP ranges",
          "displayName": "Private IPs ranges",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces/networkrulesets",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.EventHub/namespaces/networkrulesets/publicNetworkAccess"
          },
          {
            "count": {
              "field": "Microsoft.EventHub/namespaces/networkRuleSets/ipRules[*]",
              "where": {
                "count": {
                  "name": "privateIPRanges",
                  "value": "[parameters('privateIPRanges')]",
                  "where": {
                    "allOf": [
                      {
                        "equals": true,
                        "value": "[ipRangeContains(current('privateIPRanges'), first(field('Microsoft.EventHub/namespaces/networkRuleSets/ipRules[*].ipMask')))]"
                      }
                    ]
                  }
                },
                "equals": 1
              }
            },
            "notEquals": "[length(field('Microsoft.EventHub/namespaces/networkRuleSets/ipRules[*]'))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:33.140532+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:28:33.140532+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Subnets with Service Storage Endpoint must have Service Endpoint Policies for APPIO",
    "displayName": "STO-74b: Subnets with Service Storage Endpoint must have Service Endpoint Policies for APPIO",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-74b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:33.2805831Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-10T09:51:44.7562279Z"
    },
    "mode": "All",
    "name": "STO-74b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks/subnets",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*]",
              "where": {
                "equals": "Microsoft.Storage",
                "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*].service"
              }
            },
            "equals": 1
          },
          {
            "equals": false,
            "value": "[if(and(not(empty(first(field('Microsoft.Network/virtualNetworks/subnets/delegations[*].serviceName')))), contains(first(field('Microsoft.Network/virtualNetworks/subnets/delegations[*].serviceName')),'Microsoft.DBforPostgreSQL/flexibleServers')),bool('true'),bool('false'))]"
          },
          {
            "anyOf": [
              {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*]",
                  "where": {
                    "equals": true,
                    "value": "[startsWith(string(first(field('Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*].id'))),concat('/subscriptions/', subscription().subscriptionId))]"
                  }
                },
                "notEquals": "[length(field('Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*]'))]"
              },
              {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpointPolicies[*]"
                },
                "equals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:33.211721+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-10T09:51:44.756171+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Hub must disable access from all network for APPIO use case",
    "displayName": "EVH-07: Azure Event Hub must disable access from all network for APPIO use case",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVH-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-08T11:28:33.39934Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVH-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventHub/namespaces/networkrulesets",
            "field": "type"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.EventHub/namespaces/networkrulesets/publicNetworkAccess"
          },
          {
            "equals": "Allow",
            "field": "Microsoft.EventHub/namespaces/networkrulesets/defaultAction"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-08T11:28:33.303411+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-08T11:28:33.303411+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service Endpoint Policies must have SEP Definitions that target same subscription spoke",
    "displayName": "SEP-02 - Service Endpoint Policies must have SEP Definitions that target same subscription spoke",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SEP-02-OXYGEN",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-26T10:32:33.4774181Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-26T12:17:07.4215659Z"
    },
    "mode": "All",
    "name": "SEP-02-OXYGEN",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "denyAction",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/serviceEndpointPolicies",
            "field": "type"
          },
          {
            "equals": "Microsoft.Storage",
            "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].service"
          },
          {
            "anyof": [
              {
                "count": {
                  "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*]",
                  "where": {
                    "count": {
                      "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].serviceResources[*]",
                      "where": {
                        "equals": false,
                        "value": "[startsWith(string(first(field('Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].serviceResources[*]'))),concat('/subscriptions/', subscription().subscriptionId))]"
                      }
                    },
                    "greater": 0
                  }
                },
                "greater": 0
              },
              {
                "count": {
                  "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*]"
                },
                "equals": 0
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-26T10:32:33.409462+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-26T12:17:07.390141+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure IoT Hub must enable disaster recovery (by default)",
    "displayName": "IOT-HUB-12: Azure IoT Hub must enable disaster recovery (by default)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-13T09:47:07.7343358Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          },
          {
            "equals": true,
            "field": "Microsoft.Devices/IotHubs/enableDataResidency"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-13T09:47:07.681264+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-13T09:47:07.681264+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Minimum TLS version must be set to 1.2",
    "displayName": "IOT-HUB-10: Minimum TLS version must be set to 1.2",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-13T09:47:07.9352172Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-10-sgct",
    "parameters": {
      "TLSEnabledRegions": {
        "allowedValues": null,
        "defaultValue": [
          "eastus",
          "southcentralus",
          "westus2",
          "usgovarizona",
          "usgovvirginia"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of regions where TLS settings is enabled at IOT Hub level ",
          "displayName": "TLS Enabled Regions",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          },
          {
            "in": "[parameters('TLSEnabledRegions')]",
            "value": "[toLower(field('location'))]"
          },
          {
            "field": "Microsoft.Devices/IotHubs/minTlsVersion",
            "notEquals": "1.2"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-13T09:47:07.829291+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-13T09:47:07.829291+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Purview accounts must use private link",
    "displayName": "PVW-04-sgct : Azure Purview accounts must use private link",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/PVW-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-13T10:52:04.2115444Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "PVW-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTypeValue": {
        "allowedValues": null,
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Allowed spoke type for this policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Purview/accounts",
            "field": "type"
          },
          {
            "in": "[parameters('spokeTypeValue')]",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "count": {
              "field": "Microsoft.Purview/accounts/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.Purview/accounts/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-13T10:52:04.134869+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-13T10:52:04.134869+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Purview accounts must use private link",
    "displayName": "PVW-04-ENFORCE-sgct : Azure Purview accounts must use private link",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/PVW-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-13T10:52:04.1990493Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "PVW-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "spokeTypeValue": {
        "allowedValues": null,
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Allowed spoke type for this policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Purview/accounts",
            "field": "type"
          },
          {
            "in": "[parameters('spokeTypeValue')]",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "count": {
              "field": "Microsoft.Purview/accounts/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.Purview/accounts/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-13T10:52:04.122522+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-13T10:52:04.122522+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed custom roles for Role Assignment",
    "displayName": "CLR-01-maiya: Only allowed custom roles for Role Assignment",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/CLR-01-maiya-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-04-15T14:08:19.9707114Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-04-15T14:29:25.2828048Z"
    },
    "mode": "All",
    "name": "CLR-01-maiya-sgct",
    "parameters": {
      "CustomRoleId": {
        "allowedValues": null,
        "defaultValue": [
          "f909dfe3-9e6e-e369-1641-02ca59a88ce3"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Authorization/roleAssignments",
            "field": "type"
          },
          {
            "notIn": "[parameters('CustomRoleId')]",
            "value": "[last(split(field('Microsoft.Authorization/roleAssignments/roleDefinitionId'), '/'))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-04-15T14:08:19.903435+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-04-15T14:29:25.208099+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The postgreSQL must only be attached to Private endpoint on a backend subnet (APPE)",
    "displayName": "DB-FLEX-PGSQL-21 : The postgreSQL must only be attached to Private endpoint on a backend subnet",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-21-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-10-22T10:11:32.971226Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-10-22T10:57:13.6199232Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-21-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "APPE",
            "value": "[subscription().tags[parameters('tagSub')]]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Approved",
                    "field": "Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceConnectionState.status"
                  },
                  {
                    "equals": "[split(current('Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].privateLinkServiceId'),'/')[8]]",
                    "value": "[split(field('id'),'/')[8]]"
                  },
                  {
                    "contains": "subnet-internal",
                    "field": "Microsoft.Network/privateEndpoints/subnet.id"
                  }
                ]
              }
            },
            "greater": 0
          },
          "type": "Microsoft.Network/privateEndpoints"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-10-22T10:11:32.930593+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-10-22T10:57:13.609821+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "IoT Hub DPS must enable disaster recovery (by default)",
    "displayName": "DPS-18: IoT Hub DPS must enable disaster recovery (by default)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DPS-18-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-12T14:06:16.2816249Z",
      "policyManagement": {
        "communicationDate": "2024-11-05T00:00:00.6702647Z",
        "effectDate": "2024-11-12T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DPS-18-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/provisioningServices",
            "field": "type"
          },
          {
            "equals": "true",
            "field": "Microsoft.Devices/provisioningServices/enableDataResidency"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-12T14:06:16.211336+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-12T14:06:16.211336+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SAS tokens with all permissions must not be used",
    "displayName": "DPS-02: SAS tokens with all permissions must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DPS-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-12T14:06:16.2935554Z",
      "policyManagement": {
        "communicationDate": "2024-11-05T00:00:00.6702647Z",
        "effectDate": "2024-11-12T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DPS-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/provisioningServices",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Devices/ProvisioningServices/authorizationPolicies[*]",
              "where": {
                "anyOf": [
                  {
                    "equals": "provisioningserviceowner",
                    "field": "Microsoft.Devices/ProvisioningServices/authorizationPolicies[*].keyName"
                  },
                  {
                    "equals": "EnrollmentRead, EnrollmentWrite, RegistrationStatusRead, RegistrationStatusWrite, ServiceConfig, DeviceConnect",
                    "field": "Microsoft.Devices/ProvisioningServices/authorizationPolicies[*].rights"
                  },
                  {
                    "equals": "ServiceConfig, EnrollmentWrite, DeviceConnect",
                    "field": "Microsoft.Devices/ProvisioningServices/authorizationPolicies[*].rights"
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-12T14:06:16.196954+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-12T14:06:16.196954+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public network access on Azure IoT Hub should be disabled",
    "displayName": "DPS-10: Public network access on Azure IoT Hub should be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DPS-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-12T14:06:16.6172726Z",
      "policyManagement": {
        "communicationDate": "2024-11-05T00:00:00.6702647Z",
        "effectDate": "2024-11-12T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DPS-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/provisioningServices",
            "field": "type"
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.Devices/provisioningServices/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-12T14:06:16.556338+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-12T14:06:16.556338+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The number of IoT Hubs for a DPS must be limited",
    "displayName": "DPS-14: The number of IoT Hubs for a DPS must be limited",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DPS-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-12T14:07:48.1352049Z",
      "policyManagement": {
        "communicationDate": "2024-11-05T00:00:00.6702647Z",
        "effectDate": "2024-11-12T00:00:00.6702647Z"
      },
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "DPS-14-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/provisioningServices",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Devices/ProvisioningServices/iotHubs[*]"
            },
            "greater": 10
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-12T14:07:48.081017+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-12T14:07:48.081017+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SGEC-Tags-APP-ID-01: SGEC spokes must have a correct AppId : only one AppId starting with 'APP-' or 'SYS-' ",
    "displayName": "SGEC-Tags-APP-ID-01: SGEC spokes must have a correct AppId",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-Tags-APP-ID-01",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-18T17:08:14.2958176Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-12-17T16:41:13.1467143Z"
    },
    "mode": "All",
    "name": "SGEC-Tags-APP-ID-01",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Resources/subscriptions",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "greater": 13,
                "value": "[length(subscription().tags['application_id'])]"
              },
              {
                "less": 11,
                "value": "[length(subscription().tags['application_id'])]"
              },
              {
                "allOf": [
                  {
                    "notLike": "APP-*",
                    "value": "[toUpper(subscription().tags['application_id'])]"
                  },
                  {
                    "notLike": "SYS-*",
                    "value": "[toUpper(subscription().tags['application_id'])]"
                  }
                ]
              },
              {
                "contains": "00000000",
                "value": "[toUpper(subscription().tags['application_id'])]"
              },
              {
                "contains": "99999999",
                "value": "[toUpper(subscription().tags['application_id'])]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-18T17:08:14.251527+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-17T16:41:13.146405+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For spokes tagged 'APPS', 'sg_Resource_ControlTower_Profile' tag must be set to one of the following values: 'APPS'",
    "displayName": "ACR-TAG-02 - For spokes tagged 'APPS', 'sg_Resource_ControlTower_Profile' tag must be set to : 'APPS' or 'APPS-AML'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-TAG-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T14:54:05.1083327Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.5124388Z"
    },
    "mode": "All",
    "name": "ACR-TAG-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "APPS"
        ],
        "defaultValue": [
          "APPS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagValue": {
        "allowedValues": [
          "APPS",
          "APPS-AML"
        ],
        "defaultValue": [
          "APPS",
          "APPS-AML"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "in": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T14:54:05.027123+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.458814+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For spokes tagged 'APPS', 'sg_Resource_ControlTower_Profile' tag must be set to one of the following values: 'APPI'",
    "displayName": "ACR-TAG-04 - For spokes tagged 'APPS', 'sg_Resource_ControlTower_Profile' tag must be set to : 'APPI' or 'APPI-AML'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-TAG-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T14:54:05.8642329Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:38:20.9333092Z"
    },
    "mode": "All",
    "name": "ACR-TAG-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Profile",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "APPI"
        ],
        "defaultValue": [
          "APPI"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      },
      "tagValue": {
        "allowedValues": [
          "APPI",
          "APPI-AML"
        ],
        "defaultValue": [
          "APPI",
          "APPI-AML"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "in": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T14:54:05.730269+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:38:20.883170+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The network file sharing protocol must be tagged 'sg_Resource_ControlTower_Protocol'= 'NFS', 'SMB'",
    "displayName": "FILE-TAG-01: The network file sharing protocol must be tagged 'sg_Resource_ControlTower_Protocol'= 'NFS', 'SMB'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-TAG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T14:54:06.2397061Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:52:19.1941072Z"
    },
    "mode": "All",
    "name": "FILE-TAG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "sg_Resource_ControlTower_Protocol",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "NFS",
          "SMB"
        ],
        "defaultValue": [
          "NFS",
          "SMB"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "notIn": "[parameters('tagValue')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T14:54:06.042736+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:52:19.163620+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System MSI must be enabled",
    "displayName": "APIM-07-ENFORCE: System MSI must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:31:00.8167507Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:47:42.3658176Z"
    },
    "mode": "All",
    "name": "APIM-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:31:00.735878+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:47:42.299045+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable basic authentication with (API Policies)",
    "displayName": "APIM-09c-ENFORCE: Disable basic authentication with (API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-09c-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:31:02.60295Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:10:38.8396108Z"
    },
    "mode": "All",
    "name": "APIM-09c-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/apis/policies",
            "field": "type"
          },
          {
            "contains": "authentication-basic",
            "field": "Microsoft.ApiManagement/service/apis/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:31:02.501575+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:10:38.796035+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Flexible MySQL  is the only authorized server deployment",
    "displayName": "DB-FLEX-MYSQL-11-ENFORCE : Flexible MySQL  is the only authorized server deployment",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-11-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:31:04.1146665Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-11-29T10:57:22.7547074Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-11-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL",
            "field": "type"
          },
          {
            "field": "type",
            "notEquals": "*/flexibleServers"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:31:04.048475+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-11-29T10:57:22.719517+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "'Enable public IP per node' must be disabled on each node pool",
    "displayName": "AKS-16-ENFORCE-sgct - 'Enable public IP per node' must be disabled on each node pool",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-16-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:32:36.2481156Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:18:18.8372175Z"
    },
    "mode": "All",
    "name": "AKS-16-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/managedClusters/agentPools",
            "field": "type"
          },
          {
            "field": "Microsoft.ContainerService/managedClusters/agentPools/enableNodePublicIP",
            "notEquals": "false"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:32:36.143118+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:18:18.813472+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol' is 'NFS', 'Root Squash' must be selected",
    "displayName": "FILE-05-ENFORCE: If 'sg_Resource_ControlTower_Protocol' is 'NFS', 'Root Squash' must be selected",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:32:37.0019254Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:03:16.4031488Z"
    },
    "mode": "All",
    "name": "FILE-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "equals": "NFS",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/fileServices/shares/rootSquash",
            "notEquals": "rootSquash"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:32:36.940008+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:03:16.338893+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol' is 'SMB', NTLM v2 authentication mechanism must be forbidden",
    "displayName": "FILE-07-ENFORCE: If 'sg_Resource_ControlTower_Protocol' is 'SMB', NTLM v2 authentication mechanism must be forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:32:38.6205895Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:18:18.8628813Z"
    },
    "mode": "All",
    "name": "FILE-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices",
            "field": "type"
          },
          {
            "equals": "SMB",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "anyOf": [
              {
                "equals": "NTLMv2;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.authenticationMethods"
              },
              {
                "equals": "NTLMv2;Kerberos;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.authenticationMethods"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:32:38.455644+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:18:18.829090+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Admin user should be enabled for Azure Container registry on use-case 3 :  ACR for Azure ML ",
    "displayName": "ACR-27-ENFORCE-sgct - Admin user should be enabled for Azure Container registry on use-case 3 :  ACR for Azure ML",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-27-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:35:46.0307231Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:19:50.8804716Z"
    },
    "mode": "All",
    "name": "ACR-27-ENFORCE-sgct",
    "parameters": {
      "Allowedtags": {
        "allowedValues": [
          "APPS-AML",
          "APPI-AML"
        ],
        "defaultValue": [
          "APPS-AML",
          "APPI-AML"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "sg_Resource_ControlTower_Profile allowed value",
          "displayName": "sg_Resource_ControlTower_Profile allowed value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Modify"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "field": "tags.sg_Resource_ControlTower_Profile",
            "in": "[parameters('Allowedtags')]"
          },
          {
            "equals": false,
            "field": "Microsoft.ContainerRegistry/registries/adminUserEnabled"
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "Microsoft.ContainerRegistry/registries/adminUserEnabled",
              "operation": "addOrReplace",
              "value": true
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:35:45.957669+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:19:50.850737+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Maintenance settings must be set on System-managed-schedule or scheduled at least every week in user managed mode",
    "displayName": "DB-FLEX-PGSQL-11-ENFORCE : Maintenance settings must be set on System-managed-schedule or scheduled every week",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-11-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:35:46.2674483Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:38:25.998159Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-11-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.DBForPostgreSql/flexibleServers/maintenanceWindow.customWindow"
          },
          {
            "equals": 0,
            "field": "Microsoft.DBForPostgreSql/flexibleServers/maintenanceWindow.dayOfWeek"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:35:46.160848+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:38:25.975312+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "only available for NoSQL for the moment",
    "displayName": "COS-DB-06-ENFORCE: Microsoft Defender for Azure Cosmos DB must be activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/COS-DB-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:35:49.8512171Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:18:18.9737708Z"
    },
    "mode": "All",
    "name": "COS-DB-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "DeployIfNotExists"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.DocumentDB/databaseAccounts",
        "field": "type"
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "cosmosDbAccountName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "cosmosDbAccountName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2019-01-01",
                    "name": "[concat(parameters('cosmosDbAccountName'), '/Microsoft.Security/current')]",
                    "properties": {
                      "isEnabled": true
                    },
                    "type": "Microsoft.DocumentDB/databaseAccounts/providers/advancedThreatProtectionSettings"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Security/advancedThreatProtectionSettings/isEnabled"
          },
          "name": "current",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Security/advancedThreatProtectionSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:35:49.723391+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:18:18.938472+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Flexible server is the only authorized server deployment",
    "displayName": "DB-FLEX-PGSQL-15-ENFORCE : Flexible server is the only authorized server deployment",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-15-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:37:21.0610143Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-12-12T10:46:26.813479Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-15-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL",
            "field": "type"
          },
          {
            "field": "type",
            "notEquals": "*/flexibleServers"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:37:20.958722+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-12-12T10:46:26.760813+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Policy add-on for AKS must be installed",
    "displayName": "AKS-07-ENFORCE-sgct - Azure Policy add-on for AKS must be installed",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:37:21.2876339Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:16:47.0035137Z"
    },
    "mode": "All",
    "name": "AKS-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.ContainerService/managedClusters/addonProfiles.azurepolicy.enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:37:21.177472+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:16:46.963568+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The configuration must contain a CORS block (GLOBAL level)",
    "displayName": "APIM-04a-ENFORCE: The configuration must contain a CORS block (GLOBAL level)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-04a-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:37:21.6736241Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.7202335Z"
    },
    "mode": "All",
    "name": "APIM-04a-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/policies",
            "field": "type"
          },
          {
            "contains": "<origin>*</origin>",
            "field": "Microsoft.ApiManagement/service/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:37:21.599353+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.671179+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "displayName": "DB-FLEX-PGSQL-09-ENFORCE - Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-09-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:37:24.3146536Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-14T09:38:14.6958161Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-09-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "exists": "false",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/network.delegatedSubnetResourceId"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:37:24.255633+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-14T09:38:14.680426+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol'  is 'SMB', SMB protocol versions 2.1 must be forbidden",
    "displayName": "FILE-06-ENFORCE: If 'sg_Resource_ControlTower_Protocol'  is 'SMB', SMB protocol versions 2.1 must be forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:37:24.5323167Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:55:27.3224806Z"
    },
    "mode": "All",
    "name": "FILE-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices",
            "field": "type"
          },
          {
            "equals": "SMB",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "anyOf": [
              {
                "equals": "SMB2.1;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              },
              {
                "equals": "SMB2.1;SMB3.0;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              },
              {
                "equals": "SMB2.1;SMB3.0;SMB3.1.1;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              },
              {
                "equals": "SMB2.1;SMB3.1.1;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:37:24.458761+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:55:27.288006+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "displayName": "DB-FLEX-MYSQL-09-ENFORCE - Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-09-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:38:56.1835685Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:15:14.46674Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-09-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate  or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "not": {
                  "exists": "true",
                  "field": "Microsoft.DBforMySQL/flexibleServers/network.delegatedSubnetResourceId"
                }
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.DBforMySQL/flexibleServers/network.delegatedSubnetResourceId",
                    "notContains": "/subnets/subnet-internal"
                  },
                  {
                    "field": "Microsoft.DBforMySQL/flexibleServers/network.delegatedSubnetResourceId",
                    "notContains": "/subnets/subnet-external"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:38:56.116095+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:15:14.425557+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Availability' is >= A2, cluster nodes must be distributed over at least 2 availability zones (high-availability)",
    "displayName": "AKS-01-sgct - If 'Availability' is >= A2, cluster nodes must be distributed over at least 2 availability zones",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:38:56.7271713Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:53:55.7690538Z"
    },
    "mode": "All",
    "name": "AKS-01-ENFORCE-sgct",
    "parameters": {
      "confValues": {
        "allowedValues": [
          "A2",
          "A3",
          "A4"
        ],
        "defaultValue": [
          "A2",
          "A3",
          "A4"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of Availability profile tags involved in this policy",
          "displayName": "Availability profile tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": [
          "sg_Resource_ControlTower_Availability"
        ],
        "defaultValue": "sg_Resource_ControlTower_Availability",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Availability profile tag",
          "displayName": "sg_Resource_ControlTower_Availability",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('confValues')]"
          },
          {
            "less": 2,
            "value": "[length(split(string(field('Microsoft.ContainerService/managedClusters/agentPoolProfiles[*].availabilityZones')),','))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:38:56.616036+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:53:55.749527+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For all container images Azure trusted services must be enabled.",
    "displayName": "ACR-25-ENFORCE-sgct - For all container images Azure trusted services must be enabled.",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-25-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:38:59.7969395Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:46:05.2482437Z"
    },
    "mode": "All",
    "name": "ACR-25-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "equals": "disabled",
            "field": "Microsoft.ContainerRegistry/registries/policies.trustPolicy.status"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:38:59.725445+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:46:05.213955+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing access control, in all case, the SQL server admin (AAD) must be an A93, A94, A95, A96, A98 or AZYEL account",
    "displayName": "MI-SQL-02 : ENFORCE: The SQL server admin (AAD) must not be a standard account",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:38:59.9404042Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:49:11.8728414Z"
    },
    "mode": "All",
    "name": "MI-SQL-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "exists": true,
            "field": "Microsoft.Sql/managedInstances/administrators"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A93"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A94"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A95"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A96"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A98"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "AZYEL"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "AZGRE"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "AZRED"
          },
          {
            "field": "Microsoft.Sql/managedInstances/administrators.login",
            "notContains": "A89"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:38:59.819264+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:49:11.852596+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public network access must be disabled for MySQL  Flexible servers",
    "displayName": "DB-FLEX-MYSQL-02-ENFORCE - Public network access must be disabled for MySQL  Flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:32.4645874Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.1527268Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.DBforMySQL/flexibleServers/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:32.335859+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.138120+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The credentials of the service account used to access data sources must be stored in a hardened Keyvault and not locally on the SHIR",
    "displayName": "IR-04-ENFORCE: The credentials used to access data sources must be stored in a Keyvault and not locally on the SHIR",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IR-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:33.5792996Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://confluence.ids.saint-gobain.com/pages/viewpage.action?spaceKey=GPCARCH&title=Azure+Data+Factory\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IR-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories/linkedservices",
            "field": "type"
          },
          {
            "exists": "true",
            "field": "Microsoft.DataFactory/factories/linkedservices/connectVia.type"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                  },
                  {
                    "anyOf": [
                      {
                        "contains": "AccountKey=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "PWD=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "Password=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "CredString=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "pwd=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      }
                    ]
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password.type"
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password"
                  },
                  {
                    "exists": "false",
                    "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password.type"
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AzureSqlDW.typeProperties.servicePrincipalKey.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AzureSearch.typeProperties.key.type"
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.sasUri"
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.sasUri.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.servicePrincipalKey"
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.servicePrincipalKey.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.accountKey"
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/CosmosDb.typeProperties.accountKey.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "exists": "true",
                "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.encryptedCredential"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AmazonMWS.typeProperties.mwsAuthToken.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AmazonMWS.typeProperties.secretKey.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AmazonS3.typeProperties.secretAccessKey.type"
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Dynamics.typeProperties.servicePrincipalCredential"
                  },
                  {
                    "equals": "SecureString",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Dynamics.typeProperties.servicePrincipalCredential.type"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Hubspot.typeProperties.accessToken"
                  },
                  {
                    "equals": "SecureString",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Hubspot.typeProperties.accessToken.type"
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Odbc.typeProperties.credential.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/GoogleAdWords.typeProperties.developerToken.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/GoogleBigQuery.typeProperties.clientSecret.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/GoogleBigQuery.typeProperties.refreshToken.type"
              },
              {
                "allOf": [
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/type",
                    "in": [
                      "MongoDbAtlas",
                      "MongoDbV2"
                    ]
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/OData.typeProperties.servicePrincipalEmbeddedCert.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/OData.typeProperties.servicePrincipalEmbeddedCertPassword.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Sftp.typeProperties.privateKeyContent.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Sftp.typeProperties.passPhrase.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Salesforce.typeProperties.securityToken.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:33.492174+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-07-11T14:40:33.492174+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public network access must be disabled for PostgreSQL Flexible servers",
    "displayName": "DB-FLEX-PGSQL-02-ENFORCE - Public network access must be disabled for PostgreSQL Flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-PGSQL-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:40:34.1774899Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:47:42.2856516Z"
    },
    "mode": "All",
    "name": "DB-FLEX-PGSQL-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforPostgreSQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.DBforPostgreSQL/flexibleServers/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:40:34.101505+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:47:42.267818+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System assigned identity must be used on Azure ML workspace and subcomponents",
    "displayName": "AML-03-ENFORCE - System assigned identity must be used on Azure ML workspace and subcomponents",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:42:09.866673Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:35:21.1112867Z"
    },
    "mode": "All",
    "name": "AML-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:42:09.790079+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:35:21.086437+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The configuration must contain a CORS block (API level)",
    "displayName": "APIM-04c-ENFORCE: The configuration must contain a CORS block (API level)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-04c-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:42:10.1981439Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:46:09.0307032Z"
    },
    "mode": "All",
    "name": "APIM-04c-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/apis/policies",
            "field": "type"
          },
          {
            "contains": "<origin>*</origin>",
            "field": "Microsoft.ApiManagement/service/apis/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:42:10.118209+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:46:08.994967+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Microsoft Defender for Containers must be enabled in Production",
    "displayName": "AKS-06-sgct - Microsoft Defender for Containers must be enabled in Production",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:43:49.9865357Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:26:01.303781Z"
    },
    "mode": "All",
    "name": "AKS-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "anyof": [
              {
                "like": "*-PRD",
                "value": "[subscription().displayName]"
              },
              {
                "like": "*-Prod",
                "value": "[subscription().displayName]"
              },
              {
                "like": "*-PPR",
                "value": "[subscription().displayName]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "location": "westeurope",
            "properties": {
              "mode": "incremental",
              "parameters": {},
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {},
                "parameters": {},
                "resources": [
                  {
                    "apiVersion": "2023-01-01",
                    "name": "Containers",
                    "properties": {
                      "pricingTier": "Standard"
                    },
                    "type": "Microsoft.Security/pricings"
                  }
                ],
                "variables": {}
              }
            }
          },
          "deploymentScope": "subscription",
          "existenceCondition": {
            "equals": "Standard",
            "field": "Microsoft.Security/pricings/pricingTier"
          },
          "existenceScope": "subscription",
          "name": "Containers",
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"
          ],
          "type": "Microsoft.Security/pricings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:43:49.916213+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:26:01.251382+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, make sur Azure Monitor is activated",
    "displayName": "VM-RH-07-ENFORCE Azure Monitor is activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:43:50.0009825Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:46:09.1335009Z"
    },
    "mode": "All",
    "name": "VM-RH-07-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "equals": "RedHat",
            "field": "Microsoft.Compute/imagePublisher"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "vmName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {
                  "policy": {
                    "type": "string",
                    "value": "[concat('Enabled monitoring for Linux VM', ': ', parameters('vmName'))]"
                  }
                },
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "vmName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-12-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('vmName'), '/AzureMonitorLinuxAgent')]",
                    "properties": {
                      "autoUpgradeMinorVersion": true,
                      "enableAutomaticUpgrade": true,
                      "provisioningState": "Succeeded",
                      "publisher": "Microsoft.Azure.Monitor",
                      "type": "AzureMonitorLinuxAgent",
                      "typeHandlerVersion": "1.22"
                    },
                    "type": "Microsoft.Compute/virtualMachines/extensions"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "equals": "AzureMonitorLinuxAgent",
                "field": "Microsoft.Compute/virtualMachines/extensions/type"
              },
              {
                "equals": "Microsoft.Azure.Monitor",
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:43:49.806834+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:46:09.073098+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable Authenticate with client certificate (Global API Policies)",
    "displayName": "APIM-10a-ENFORCE: Disable Authenticate with client certificate (Global API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-10a-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:45:26.8861675Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:38:21.0454695Z"
    },
    "mode": "All",
    "name": "APIM-10a-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/policies",
            "field": "type"
          },
          {
            "contains": "authentication-certificate",
            "field": "Microsoft.ApiManagement/service/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:45:26.807972+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:38:20.820656+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "TLS 1.2 must be configured (namespace level)",
    "displayName": "SBUS-16-ENFORCE: TLS 1.2 must be configured (namespace level)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SBUS-16-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:45:27.3581941Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:24:28.4848385Z"
    },
    "mode": "All",
    "name": "SBUS-16-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "field": "Microsoft.ServiceBus/namespaces/minimumTlsVersion",
            "notEquals": "1.2"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:45:27.276733+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:24:28.276014+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Maintenance settings must be set on System-managed-schedule or scheduled at least every week in user managed mode",
    "displayName": "DB-FLEX-MYSQL-10-ENFORCE : Maintenance settings must be set on System-managed-schedule or scheduled every week",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-10-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:45:27.5064098Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.4528827Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-10-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.DBforMySQL/flexibleServers/maintenanceWindow.customWindow"
          },
          {
            "equals": 0,
            "field": "Microsoft.DBforMySQL/flexibleServers/maintenanceWindow.dayOfWeek"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:45:27.417361+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.391713+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol' is 'NFS', secure transfer must be disabled ",
    "displayName": "FILE-03-ENFORCE: If 'sg_Resource_ControlTower_Protocol' is 'NFS', secure transfer must be disabled ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:47:03.6794834Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:36:53.6849025Z"
    },
    "mode": "All",
    "name": "FILE-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "NFS",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "equals": "True",
            "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:47:03.590584+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:36:53.640266+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Transparent data encryption (TDE) must be enabled",
    "displayName": "MI-SQL-11-ENFORCE: Transparent data encryption (TDE) must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-11-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:47:04.2309404Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:26:01.4011168Z"
    },
    "mode": "All",
    "name": "MI-SQL-11-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances/databases",
            "field": "type"
          },
          {
            "field": "name",
            "notEquals": "master"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "equals": "enabled",
                "field": "Microsoft.Sql/managedInstances/databases/transparentDataEncryption/state"
              }
            ]
          },
          "name": "current",
          "type": "Microsoft.Sql/managedInstances/databases/transparentDataEncryption"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:47:04.121844+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:26:01.361214+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "configure CORS on used Cosmos DB account according to PSAT information (do not use wildcard)",
    "displayName": "COS-DB-05-ENFORCE: do not use wildcard on CORS",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/COS-DB-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:47:04.4286769Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:55:28.7680595Z"
    },
    "mode": "All",
    "name": "COS-DB-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DocumentDB/databaseAccounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.DocumentDB/databaseAccounts/cors[*]",
              "where": {
                "contains": "*",
                "field": "Microsoft.DocumentDB/databaseAccounts/cors[*].allowedOrigins"
              }
            },
            "notEquals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:47:04.324971+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:55:28.725271+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Windows nodes are not authorized",
    "displayName": "AKS-14-ENFORCE-sgct - Windows nodes are not authorized",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-14-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:40.6546546Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:33:48.6852321Z"
    },
    "mode": "All",
    "name": "AKS-14-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/managedClusters/agentPools",
            "field": "type"
          },
          {
            "equals": "Windows",
            "field": "Microsoft.ContainerService/managedClusters/agentPools/osType"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:40.576244+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:33:48.657356+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Should only be updated via an Azure DevOps / GitHub pipeline or via a Resource Management template",
    "displayName": "ADF-14-ENFORCE: Production factories must not have a Git repository associated with them",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADF-14-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:41.5566938Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:41:26.5274426Z"
    },
    "mode": "All",
    "name": "ADF-14-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "environment",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "prd",
          "ppr"
        ],
        "defaultValue": [
          "prd",
          "ppr"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagName'), ']')]",
            "in": "[parameters('tagValue')]"
          },
          {
            "exists": "true",
            "field": "Microsoft.DataFactory/factories/repoConfiguration.repositoryName"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:41.482505+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:41:26.490453+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only AnomalyDetector, ComputerVision, ContentModerator ,  CustomVision.Prediction,  CustomVision.Training, Face, FormRecognizer, ImmersiveReader, LUIS, OpenAI, Personalizer, SpeechServices, TextTranslation can be provisioned",
    "displayName": "ACOS-06-ENFORCE: Only some services can be provisioned",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACOS-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:42.1368541Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:10:38.2282891Z"
    },
    "mode": "All",
    "name": "ACOS-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listofservicesallowed": {
        "allowedValues": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer",
          "TextAnalytics"
        ],
        "defaultValue": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer",
          "TextAnalytics"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Azure Cognitive services allowed",
          "displayName": "servicesallowed",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.CognitiveServices/accounts",
            "field": "type"
          },
          {
            "field": "kind",
            "notIn": "[parameters('listofservicesallowed')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:42.029437+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:10:38.155362+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, make sure the agent Qualys is deployed on all VMs",
    "displayName": "VM-RH-05-ENFORCE In all use cases, make sure the agent Qualys is deployed on all VMs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:42.3364103Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:00:09.1813723Z"
    },
    "mode": "All",
    "name": "VM-RH-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "equals": "RedHat",
            "field": "Microsoft.Compute/imagePublisher"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "location": {
                  "value": "[field('location')]"
                },
                "vmName": {
                  "value": "[field('name')]"
                }
              },
              "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "outputs": {
                  "policy": {
                    "type": "string",
                    "value": "[concat('Enabled Qualys for Linux VM', ': ', parameters('vmName'))]"
                  }
                },
                "parameters": {
                  "location": {
                    "type": "string"
                  },
                  "vmName": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-12-01",
                    "location": "[parameters('location')]",
                    "name": "[concat(parameters('vmName'), '/QualysAgentLinux')]",
                    "properties": {
                      "provisioningState": "Succeeded",
                      "publisher": "Qualys",
                      "type": "QualysAgentLinux",
                      "typeHandlerVersion": "1.6"
                    },
                    "type": "Microsoft.Compute/virtualMachines/extensions"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "allOf": [
              {
                "equals": "QualysAgentLinux",
                "field": "Microsoft.Compute/virtualMachines/extensions/type"
              },
              {
                "equals": "Qualys",
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher"
              }
            ]
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:42.248139+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:00:09.153132+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable basic authentication with (Global API Policies)",
    "displayName": "APIM-09a-ENFORCE: Disable basic authentication with (Global API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-09a-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:48:42.3836858Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.5631117Z"
    },
    "mode": "All",
    "name": "APIM-09a-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/policies",
            "field": "type"
          },
          {
            "contains": "authentication-basic",
            "field": "Microsoft.ApiManagement/service/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:48:42.138876+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.536943+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The network configuration must be set to 'Azure CNI'",
    "displayName": "AKS-03-ENFORCE - The network configuration must be set to 'Azure CNI'",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:50:17.3864525Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:55:27.1165382Z"
    },
    "mode": "All",
    "name": "AKS-03-ENFORCE-sgct",
    "parameters": {
      "NetworkingValues": {
        "allowedValues": null,
        "defaultValue": "azure",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed value for networking configuration",
          "displayName": "Azure CNI value",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "Microsoft.ContainerService/managedClusters/networkProfile.networkPlugin",
            "notEquals": "[parameters('NetworkingValues')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:50:17.264955+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:55:27.084866+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Managed Service Identity that should be configured on this SQL Managed Instance.",
    "displayName": "MI-SQL-05-ENFORCE: Managed Service Identity that should be configured on this SQL Managed Instance.",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:50:17.7494531Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:49:11.9361839Z"
    },
    "mode": "All",
    "name": "MI-SQL-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "notEquals": "SystemAssigned",
            "value": "[field('identity.type')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:50:17.639960+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:49:11.883851+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable Authenticate with client certificate (API Policies)",
    "displayName": "APIM-10c-ENFORCE: Disable Authenticate with client certificate (API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-10c-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:51:52.9562561Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:46:05.2494631Z"
    },
    "mode": "All",
    "name": "APIM-10c-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/apis/policies",
            "field": "type"
          },
          {
            "contains": "authentication-certificate",
            "field": "Microsoft.ApiManagement/service/apis/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:51:52.859867+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:46:05.213955+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use-cases, Retention policy must be activated",
    "displayName": "ACR-04-ENFORCE - In all use-cases, Retention policy must be activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:51:53.1240256Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.3485936Z"
    },
    "mode": "All",
    "name": "ACR-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "NotEquals": "enabled",
            "field": "Microsoft.ContainerRegistry/registries/policies.retentionPolicy.status"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:51:53.000551+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.278756+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "TLS 1.2 must be selected on the SQL server",
    "displayName": "MI-SQL-14-ENFORCE: TLS 1.2 must be selected on the SQL server",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-14-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-11T14:51:53.3764537Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:35:15.8629195Z"
    },
    "mode": "All",
    "name": "MI-SQL-14-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Deny",
          "disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": false,
                "field": "Microsoft.Sql/managedInstances/minimalTlsVersion"
              },
              {
                "field": "Microsoft.Sql/managedInstances/minimalTlsVersion",
                "less": "1.2"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-11T14:51:53.281743+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:35:15.822821+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Maintenance settings must be set on System-managed-schedule or scheduled at least every week in user managed mode",
    "displayName": "DB-FLEX-MYSQL-10 : Maintenance settings must be set on System-managed-schedule or scheduled every week",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:53:32.2707238Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:32:15.8057337Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activer ou dsactiver l'excution de la stratgie",
          "displayName": "Effet",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "equals": "Enabled",
                "field": "Microsoft.DBforMySQL/flexibleServers/maintenanceWindow.customWindow"
              },
              {
                "field": "Microsoft.DBforMySQL/flexibleServers/maintenanceWindow.customWindow",
                "notEquals": "Enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:53:32.162408+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:32:15.775219+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, make sure the agent Qualys is deployed on all VMs",
    "displayName": "VM-RH-05 In all use cases, make sure the agent Qualys is deployed on all VMs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:55:07.3918277Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:18:18.7550515Z"
    },
    "mode": "All",
    "name": "VM-RH-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "equals": "RedHat",
            "field": "Microsoft.Compute/imagePublisher"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "equals": "QualysAgentLinux",
                "field": "Microsoft.Compute/virtualMachines/extensions/type"
              },
              {
                "equals": "Qualys",
                "field": "Microsoft.Compute/virtualMachines/extensions/publisher"
              },
              {
                "equals": "Succeeded",
                "field": "Microsoft.Compute/virtualMachines/extensions/provisioningState"
              }
            ]
          },
          "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:55:07.335070+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:18:18.735332+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "In all use cases, make sure diagnostic settings are activated",
    "displayName": "VM-RH-06 :  Diagnostic settings must be activated",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VM-RH-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:56:44.3577904Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:39:58.6733376Z"
    },
    "mode": "All",
    "name": "VM-RH-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "equals": "RedHat",
            "field": "Microsoft.Compute/imagePublisher"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:56:44.242127+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:39:58.638563+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable Authenticate with client certificate (Global API Policies)",
    "displayName": "APIM-10a: Disable Authenticate with client certificate (Global API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-10a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:58:20.1160583Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:44:36.667411Z"
    },
    "mode": "All",
    "name": "APIM-10a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ApiManagement/service",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "field": "Microsoft.ApiManagement/service/policies/value",
            "notContains": "authentication-certificate"
          },
          "type": "Microsoft.ApiManagement/service/policies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:58:20.039795+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:44:36.644138+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable basic authentication with (Global API Policies)",
    "displayName": "APIM-09a: Disable basic authentication with (Global API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-09a-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:59:55.8595643Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:35:20.8993388Z"
    },
    "mode": "All",
    "name": "APIM-09a-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ApiManagement/service",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "field": "Microsoft.ApiManagement/service/policies/value",
            "notcontains": "authentication-basic"
          },
          "type": "Microsoft.ApiManagement/service/policies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:59:55.759373+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:35:20.867575+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "'Enable public IP per node' must be disabled on each node pool",
    "displayName": "AKS-16-sgct - 'Enable public IP per node' must be disabled on each node pool",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-16-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:59:56.1824909Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:55:27.203548Z"
    },
    "mode": "All",
    "name": "AKS-16-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters/agentPools",
            "field": "type"
          },
          {
            "field": "Microsoft.ContainerService/managedClusters/agentPools/enableNodePublicIP",
            "notEquals": "false"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:59:56.071845+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:55:27.178621+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "TLS 1.2 must be configured (namespace level)",
    "displayName": "SBUS-16: TLS 1.2 must be configured (namespace level)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SBUS-16-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T12:59:56.8625257Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:43:03.8628353Z"
    },
    "mode": "All",
    "name": "SBUS-16-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ServiceBus/namespaces",
            "field": "type"
          },
          {
            "field": "Microsoft.ServiceBus/namespaces/minimumTlsVersion",
            "notEquals": "1.2"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T12:59:56.790601+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:43:03.808908+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing data protection strategy, vulnerability assessment must be configured",
    "displayName": "MI-SQL-12: vulnerability assessment must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:03:07.4072701Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:39:53.5405147Z"
    },
    "mode": "All",
    "name": "MI-SQL-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          },
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "field": "kind",
            "notContains": "analytics"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "True",
            "field": "Microsoft.Sql/managedInstances/vulnerabilityAssessments/recurringScans.isEnabled"
          },
          "name": "default",
          "type": "Microsoft.Sql/managedInstances/vulnerabilityAssessments"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:03:07.323433+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:39:53.514918+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Protocol'  is 'SMB', SMB protocol versions 2.1 must be forbidden",
    "displayName": "FILE-06: If 'sg_Resource_ControlTower_Protocol'  is 'SMB', SMB protocol versions 2.1 must be forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:04:45.3204058Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:43:03.9178246Z"
    },
    "mode": "All",
    "name": "FILE-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices",
            "field": "type"
          },
          {
            "equals": "SMB",
            "value": "[toUpper(field(concat('tags[sg_Resource_ControlTower_Protocol]')))]"
          },
          {
            "anyOf": [
              {
                "equals": "SMB2.1;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              },
              {
                "equals": "SMB2.1;SMB3.0;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              },
              {
                "equals": "SMB2.1;SMB3.0;SMB3.1.1;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              },
              {
                "equals": "SMB2.1;SMB3.1.1;",
                "field": "Microsoft.Storage/storageAccounts/fileServices/protocolSettings.smb.versions"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:04:45.261752+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:43:03.887041+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Windows nodes are not authorized",
    "displayName": "AKS-14-sgct - Windows nodes are not authorized",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-14-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:07:49.7370775Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:36:48.4727657Z"
    },
    "mode": "All",
    "name": "AKS-14-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/managedClusters/agentPools",
            "field": "type"
          },
          {
            "equals": "Windows",
            "field": "Microsoft.ContainerService/managedClusters/agentPools/osType"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:07:49.575805+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:36:48.438927+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'sg_Resource_ControlTower_Availability' is >= A2, cluster nodes must be distributed over at least 2 availability zones (high-availability)",
    "displayName": "AKS-01-sgct - If 'Availability' is >= A2, cluster nodes must be distributed over at least 2 availability zones",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:07:50.2828438Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:44:32.0696612Z"
    },
    "mode": "All",
    "name": "AKS-01-sgct",
    "parameters": {
      "confValues": {
        "allowedValues": [
          "A2",
          "A3",
          "A4"
        ],
        "defaultValue": [
          "A2",
          "A3",
          "A4"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of Availability profile tags involved in this policy",
          "displayName": "Availability profile tag value",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagConf": {
        "allowedValues": [
          "sg_Resource_ControlTower_Availability"
        ],
        "defaultValue": "sg_Resource_ControlTower_Availability",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Availability profile tag",
          "displayName": "sg_Resource_ControlTower_Availability",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerService/ManagedClusters",
            "field": "type"
          },
          {
            "field": "[concat('tags[', parameters('tagConf'), ']')]",
            "in": "[parameters('confValues')]"
          },
          {
            "less": 2,
            "value": "[length(split(string(field('Microsoft.ContainerService/managedClusters/agentPoolProfiles[*].availabilityZones')),','))]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:07:50.185162+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:44:32.050898+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "displayName": "DB-FLEX-MYSQL-09 - Connectivity method must be set to 'Private access (VNet Integration)' for flexible servers",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/DB-FLEX-MYSQL-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:09:27.2683979Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:33:42.7765931Z"
    },
    "mode": "All",
    "name": "DB-FLEX-MYSQL-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DBforMySQL/flexibleServers",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "not": {
                  "exists": "true",
                  "field": "Microsoft.DBforMySQL/flexibleServers/network.delegatedSubnetResourceId"
                }
              },
              {
                "allof": [
                  {
                    "field": "Microsoft.DBforMySQL/flexibleServers/network.delegatedSubnetResourceId",
                    "notContains": "/subnets/subnet-internal"
                  },
                  {
                    "field": "Microsoft.DBforMySQL/flexibleServers/network.delegatedSubnetResourceId",
                    "notContains": "/subnets/subnet-external"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:09:27.186030+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:33:42.737938+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For all container images Azure trusted services must be enabled.",
    "displayName": "ACR-25-sgct - For all container images Azure trusted services must be enabled.",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-25-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:09:27.3887783Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:12:10.4346679Z"
    },
    "mode": "All",
    "name": "ACR-25-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ContainerRegistry/registries",
            "field": "type"
          },
          {
            "equals": "disabled",
            "field": "Microsoft.ContainerRegistry/registries/policies.trustPolicy.status"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:09:27.310977+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:12:10.380851+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostic settings must be enabled (90 days of retention)",
    "displayName": "ACS-04: Diagnostic settings must be enabled (90 days of retention)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACS-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:09:28.1202495Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:26:01.4218284Z"
    },
    "mode": "All",
    "name": "ACS-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Search/searchServices",
            "field": "type"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
                      },
                      {
                        "anyOf": [
                          {
                            "equals": "0",
                            "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days"
                          },
                          {
                            "greaterOrEquals": "[padLeft(90, 3, '0')]",
                            "value": "[padLeft(current('Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days'), 3, '0')]"
                          }
                        ]
                      },
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      }
                    ]
                  },
                  {
                    "allOf": [
                      {
                        "equals": "true",
                        "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                      },
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled",
                            "notEquals": "true"
                          },
                          {
                            "exists": false,
                            "field": "Microsoft.Insights/diagnosticSettings/storageAccountId"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "greaterOrEquals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:09:28.014131+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:26:01.392016+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostic settings must be enabled and the following logs must be exported to a relevant storage: 'Kubernetes API Server Kubernetes', 'Audit Admin Logs'",
    "displayName": "AKS-10-sgct - Diagnostic settings must be enabled and the appropriated logs must be exported to a relevant storage",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AKS-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:11:07.7276112Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:46:09.1919929Z"
    },
    "mode": "All",
    "name": "AKS-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disable"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ContainerService/ManagedClusters",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "exists": true,
                "field": "Microsoft.Insights/diagnosticSettings/storageAccountId"
              },
              {
                "Equals": 2,
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "kube-audit-admin",
                          "kube-apiserver"
                        ]
                      },
                      {
                        "equals": "True",
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Enabled"
                      }
                    ]
                  }
                }
              },
              {
                "Equals": 2,
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "allof": [
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].Category",
                        "in": [
                          "kube-audit-admin",
                          "kube-apiserver"
                        ]
                      },
                      {
                        "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                        "greater": 6
                      }
                    ]
                  }
                }
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:11:07.639919+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:46:09.135598+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "By reviewing logging and monitoring, Advanced Data Security must be configured",
    "displayName": "MI-SQL-10: Advanced Data Security must be configured",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:11:08.4565347Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:04:50.2379611Z"
    },
    "mode": "All",
    "name": "MI-SQL-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "equals": "PRD",
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "like": "*-PRD",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "equals": "PRD",
                "value": "[split(toUpper(subscription().displayName), '-')[2]]"
              }
            ]
          },
          {
            "equals": "Microsoft.Sql/managedInstances",
            "field": "type"
          },
          {
            "field": "kind",
            "notContains": "analytics"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "Enabled",
            "field": "Microsoft.Sql/managedInstances/securityAlertPolicies/state"
          },
          "name": "Default",
          "type": "Microsoft.Sql/managedInstances/securityAlertPolicies"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:11:08.374300+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:04:50.205223+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System assigned identity must be usedon Azure ML workspace and subcomponents",
    "displayName": "AML-03 - System assigned identity must be usedon Azure ML workspace and subcomponents",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:12:47.8757725Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:47:38.5077999Z"
    },
    "mode": "All",
    "name": "AML-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "notEquals": "SystemAssigned",
                "value": "[field('identity.type')]"
              },
              {
                "exists": false,
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:12:47.781406+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:47:38.470769+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "API - Disable basic authentication with (API Policies)",
    "displayName": "APIM-09c: Disable basic authentication with (API Policies)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APIM-09c-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:12:48.5839263Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:29:05.4312992Z"
    },
    "mode": "All",
    "name": "APIM-09c-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service/apis/policies",
            "field": "type"
          },
          {
            "contains": "authentication-basic",
            "field": "Microsoft.ApiManagement/service/apis/policies/value"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:12:48.500130+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:29:05.389640+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Transparent data encryption (TDE) must be enabled",
    "displayName": "MI-SQL-11: Transparent data encryption (TDE) must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MI-SQL-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:12:49.1091509Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:55:28.9774186Z"
    },
    "mode": "All",
    "name": "MI-SQL-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "string"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/managedInstances/databases",
            "field": "type"
          },
          {
            "field": "name",
            "notEquals": "master"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "equals": "enabled",
                "field": "Microsoft.Sql/managedInstances/databases/transparentDataEncryption/state"
              }
            ]
          },
          "name": "current",
          "type": "Microsoft.Sql/managedInstances/databases/transparentDataEncryption"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:12:49.015789+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:55:28.944039+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "All activity logs must be monitored and exported to a LAW (Log Analytics Workspace).",
    "displayName": "ACR-21 - All activity logs must be monitored and exported to a LAW (Log Analytics Workspace).",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ACR-21-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T13:14:27.3755187Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:55:27.2710614Z"
    },
    "mode": "All",
    "name": "ACR-21-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Deny"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.ContainerRegistry/registries",
        "field": "type"
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "true",
                    "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
                  },
                  {
                    "equals": "true",
                    "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                  },
                  {
                    "exists": true,
                    "field": "Microsoft.Insights/diagnosticSettings/workspaceId"
                  }
                ]
              }
            },
            "greaterOrEquals": 1
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T13:14:27.282835+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:55:27.194257+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "The credentials of the service account used to access data sources must be stored in a hardened Keyvault and not locally on the SHIR",
    "displayName": "IR-04: The credentials used to access data sources must be stored in a hardened Keyvault and not locally on the SHIR",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/IR-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-17T15:51:27.4989431Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://confluence.ids.saint-gobain.com/pages/viewpage.action?spaceKey=GPCARCH&title=Azure+Data+Factory\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IR-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories/linkedservices",
            "field": "type"
          },
          {
            "exists": "true",
            "field": "Microsoft.DataFactory/factories/linkedservices/connectVia.type"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                  },
                  {
                    "anyOf": [
                      {
                        "contains": "AccountKey=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "PWD=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "Password=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "CredString=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      },
                      {
                        "contains": "pwd=",
                        "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString"
                      }
                    ]
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password.type"
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password"
                  },
                  {
                    "exists": "false",
                    "field": "Microsoft.DataFactory/factories/linkedservices/SqlServer.typeProperties.password.type"
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AzureSqlDW.typeProperties.servicePrincipalKey.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AzureSearch.typeProperties.key.type"
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.sasUri"
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.sasUri.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.servicePrincipalKey"
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureBlobStorage.typeProperties.servicePrincipalKey.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/AzureStorage.typeProperties.accountKey"
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/CosmosDb.typeProperties.accountKey.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "exists": "true",
                "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.encryptedCredential"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AmazonMWS.typeProperties.mwsAuthToken.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AmazonMWS.typeProperties.secretKey.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/AmazonS3.typeProperties.secretAccessKey.type"
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Dynamics.typeProperties.servicePrincipalCredential"
                  },
                  {
                    "equals": "SecureString",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Dynamics.typeProperties.servicePrincipalCredential.type"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "exists": "true",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Hubspot.typeProperties.accessToken"
                  },
                  {
                    "equals": "SecureString",
                    "field": "Microsoft.DataFactory/factories/linkedservices/Hubspot.typeProperties.accessToken.type"
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Odbc.typeProperties.credential.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/GoogleAdWords.typeProperties.developerToken.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/GoogleBigQuery.typeProperties.clientSecret.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/GoogleBigQuery.typeProperties.refreshToken.type"
              },
              {
                "allOf": [
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/type",
                    "in": [
                      "MongoDbAtlas",
                      "MongoDbV2"
                    ]
                  },
                  {
                    "field": "Microsoft.DataFactory/factories/linkedservices/typeProperties.connectionString.type",
                    "notEquals": "AzureKeyVaultSecret"
                  }
                ]
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/OData.typeProperties.servicePrincipalEmbeddedCert.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/OData.typeProperties.servicePrincipalEmbeddedCertPassword.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Sftp.typeProperties.privateKeyContent.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Sftp.typeProperties.passPhrase.type"
              },
              {
                "equals": "SecureString",
                "field": "Microsoft.DataFactory/factories/linkedservices/Salesforce.typeProperties.securityToken.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-17T15:51:27.204254+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-07-17T15:51:27.204254+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "NFS must not be used in azure files",
    "displayName": "FILE-11: NFS must not be used in azure files",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-11-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-24T12:59:48.327781Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:03:16.5888552Z"
    },
    "mode": "All",
    "name": "FILE-11-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "equals": "NFS",
            "field": "Microsoft.Storage/storageAccounts/fileServices/shares/enabledProtocols"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-24T12:59:48.252445+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:03:16.463890+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "NFS must not be used in azure files",
    "displayName": "FILE-11-ENFORCE: NFS must not be used in azure files",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-11-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-24T12:59:48.5901225Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:30:37.5562189Z"
    },
    "mode": "All",
    "name": "FILE-11-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "equals": "NFS",
            "field": "Microsoft.Storage/storageAccounts/fileServices/shares/enabledProtocols"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-24T12:59:48.346229+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:30:37.474438+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Diagnostic settings must be enabled (90 days of retention)",
    "displayName": "EVG-01: Diagnostic settings must be enabled (90 days of retention)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/EVG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-03T10:37:58.4345599Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-09-17T08:14:14.9802793Z"
    },
    "mode": "All",
    "name": "EVG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.EventGrid/systemTopics",
              "Microsoft.EventGrid/topics",
              "Microsoft.EventGrid/domains"
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                  "where": {
                    "equals": "true",
                    "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
                  }
                },
                "greaterOrEquals": 1
              },
              {
                "exists": true,
                "field": "Microsoft.Insights/diagnosticSettings/workspaceId"
              },
              {
                "contains": "Microsoft.OperationalInsights/workspaces",
                "field": "Microsoft.Insights/diagnosticSettings/workspaceId"
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-03T10:37:58.324441+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:14:14.943546+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Add/Replace NSG-Securty Rules for SGEC Default for subnet external",
    "displayName": "SGEC-APPE-07",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-07",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T08:03:42.475507Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:10:38.8151973Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-07",
    "parameters": {
      "SGEC": {
        "allowedValues": null,
        "defaultValue": [
          {
            "access": "Allow",
            "description": "Allow RDP and SSH from Bastion to VMs in FEs",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromBastion",
            "priority": 200,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [
              "10.185.0.128/26",
              "10.34.0.128/26",
              "10.203.0.128/26"
            ],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "22",
              "3389"
            ]
          },
          {
            "access": "Allow",
            "description": "Allow RDP and SSH from Jumphost to VMs in FEs",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "AllowRDPSSHfromJumpbox",
            "priority": 205,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [
              "10.203.32.15",
              "10.203.32.17",
              "10.185.36.246",
              "10.185.36.247",
              "10.34.32.90",
              "10.34.32.72"
            ],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "22",
              "3389"
            ]
          },
          {
            "access": "Deny",
            "description": "Deny specifically RDP and SSH from everything else",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "name": "DenyRDPSSHfromAny",
            "priority": 210,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "22",
              "3389"
            ]
          },
          {
            "access": "Deny",
            "description": "Deny backend to frontend communication",
            "destinationAddressPrefix": "",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "DenyBackendToFrontend",
            "priority": 215,
            "protocol": "*",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "description": "Allow everything else inbound. Palo Alto will control these flows.",
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Inbound",
            "name": "AllowAllInbound",
            "priority": 999,
            "protocol": "*",
            "sourceAddressPrefix": "*",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          },
          {
            "access": "Allow",
            "description": "Allow everything else outbound. Palo Alto will control these flows.",
            "destinationAddressPrefix": "*",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "*",
            "destinationPortRanges": [],
            "direction": "Outbound",
            "name": "AllowAllOutbound",
            "priority": 4096,
            "protocol": "*",
            "sourceAddressPrefix": "VirtualNetwork",
            "sourceAddressPrefixes": [],
            "sourcePortRange": "*",
            "sourcePortRanges": []
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to Add/Replace to NSG",
          "displayName": "SGEC Default Security Rules",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Modify",
          "Disabled"
        ],
        "defaultValue": "Modify",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": "nsg-subnet-external",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming convention from FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "String"
      },
      "subnet": {
        "allowedValues": null,
        "defaultValue": "subnet-subnet-external",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Front Subnet Naming convention",
          "displayName": "Front Subnet Name",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "spoke_type",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Resource Profile",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": null,
        "defaultValue": "APPE",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The allowed tag value",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          },
          {
            "equals": "[toUpper(parameters('tagValue'))]",
            "field": "[concat('tags[', parameters('tagName'), ']')]"
          },
          {
            "count": {
              "name": "securityRule",
              "value": "[parameters('SGEC')]",
              "where": {
                "count": {
                  "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
                  "where": {
                    "allof": [
                      {
                        "equals": "[current('securityRule').name]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].name"
                      },
                      {
                        "equals": "[current('securityRule').priority]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority"
                      },
                      {
                        "equals": "[current('securityRule').protocol]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].protocol"
                      },
                      {
                        "equals": "[current('securityRule').direction]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].direction"
                      },
                      {
                        "equals": "[if(empty(current('securityRule').destinationAddressPrefix),'',current('securityRule').destinationAddressPrefix)]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix"
                      },
                      {
                        "equals": "[if(empty(current('securityRule').sourceAddressPrefix),'',current('securityRule').sourceAddressPrefix)]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix"
                      },
                      {
                        "equals": "[if(empty(current('securityRule').sourcePortRange),'',current('securityRule').sourcePortRange)]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange"
                      },
                      {
                        "equals": "[if(empty(current('securityRule').destinationPortRange),'',current('securityRule').destinationPortRange)]",
                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange"
                      },
                      {
                        "allof": [
                          {
                            "equals": true,
                            "value": "[if(equals(length(current('securityRule').sourceAddressPrefixes),length(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]'))), bool('true'),bool('false'))]"
                          },
                          {
                            "anyof": [
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]",
                                "in": "[current('securityRule').sourceAddressPrefixes]"
                              },
                              {
                                "equals": true,
                                "value": "[if(equals(empty(current('securityRule').sourceAddressPrefixes),empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes[*]'))), bool('true'),bool('false'))]"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "equals": true,
                            "value": "[if(equals(length(current('securityRule').destinationAddressPrefixes),length(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]'))), bool('true'),bool('false'))]"
                          },
                          {
                            "anyof": [
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]",
                                "in": "[current('securityRule').destinationAddressPrefixes]"
                              },
                              {
                                "equals": true,
                                "value": "[if(equals(empty(current('securityRule').destinationAddressPrefixes),empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes[*]'))), bool('true'),bool('false'))]"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "equals": true,
                            "value": "[if(equals(length(current('securityRule').sourcePortRanges),length(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), bool('true'),bool('false'))]"
                          },
                          {
                            "anyof": [
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]",
                                "in": "[current('securityRule').sourcePortRanges]"
                              },
                              {
                                "equals": true,
                                "value": "[if(equals(empty(current('securityRule').sourcePortRanges),empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), bool('true'),bool('false'))]"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "allof": [
                          {
                            "equals": true,
                            "value": "[if(equals(length(current('securityRule').destinationPortRanges),length(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), bool('true'),bool('false'))]"
                          },
                          {
                            "anyof": [
                              {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                "in": "[current('securityRule').destinationPortRanges]"
                              },
                              {
                                "equals": true,
                                "value": "[if(equals(empty(current('securityRule').destinationPortRanges),empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), bool('true'),bool('false'))]"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "equals": 1
              }
            },
            "notequals": "[length(parameters('SGEC'))]"
          },
          {
            "anyof": [
              {
                "field": "Microsoft.Network/networkSecurityGroups/subnets[*].id",
                "like": "[concat(parameters('subnet'),'*')]"
              },
              {
                "field": "name",
                "like": "[concat(parameters('nsgName'),'*')]"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "operations": [
            {
              "field": "Microsoft.Network/networkSecurityGroups/securityRules",
              "operation": "addOrReplace",
              "value": [
                {
                  "name": "[parameters('SGEC')[0].name]",
                  "properties": {
                    "access": "[parameters('SGEC')[0].access]",
                    "destinationAddressPrefix": "[parameters('SGEC')[0].destinationAddressPrefix]",
                    "destinationAddressPrefixes": "[parameters('SGEC')[0].destinationAddressPrefixes]",
                    "destinationPortRange": "[parameters('SGEC')[0].destinationPortRange]",
                    "destinationPortRanges": "[parameters('SGEC')[0].destinationPortRanges]",
                    "direction": "[parameters('SGEC')[0].direction]",
                    "priority": "[parameters('SGEC')[0].priority]",
                    "protocol": "[parameters('SGEC')[0].protocol]",
                    "sourceAddressPrefix": "[parameters('SGEC')[0].sourceAddressPrefix]",
                    "sourceAddressPrefixes": "[parameters('SGEC')[0].sourceAddressPrefixes]",
                    "sourcePortRange": "[parameters('SGEC')[0].sourcePortRange]",
                    "sourcePortRanges": "[parameters('SGEC')[0].sourcePortRanges]"
                  }
                },
                {
                  "name": "[parameters('SGEC')[1].name]",
                  "properties": {
                    "access": "[parameters('SGEC')[1].access]",
                    "destinationAddressPrefix": "[parameters('SGEC')[1].destinationAddressPrefix]",
                    "destinationAddressPrefixes": "[parameters('SGEC')[1].destinationAddressPrefixes]",
                    "destinationPortRange": "[parameters('SGEC')[1].destinationPortRange]",
                    "destinationPortRanges": "[parameters('SGEC')[1].destinationPortRanges]",
                    "direction": "[parameters('SGEC')[1].direction]",
                    "priority": "[parameters('SGEC')[1].priority]",
                    "protocol": "[parameters('SGEC')[1].protocol]",
                    "sourceAddressPrefix": "[parameters('SGEC')[1].sourceAddressPrefix]",
                    "sourceAddressPrefixes": "[parameters('SGEC')[1].sourceAddressPrefixes]",
                    "sourcePortRange": "[parameters('SGEC')[1].sourcePortRange]",
                    "sourcePortRanges": "[parameters('SGEC')[1].sourcePortRanges]"
                  }
                },
                {
                  "name": "[parameters('SGEC')[2].name]",
                  "properties": {
                    "access": "[parameters('SGEC')[2].access]",
                    "destinationAddressPrefix": "[parameters('SGEC')[2].destinationAddressPrefix]",
                    "destinationAddressPrefixes": "[parameters('SGEC')[2].destinationAddressPrefixes]",
                    "destinationPortRange": "[parameters('SGEC')[2].destinationPortRange]",
                    "destinationPortRanges": "[parameters('SGEC')[2].destinationPortRanges]",
                    "direction": "[parameters('SGEC')[2].direction]",
                    "priority": "[parameters('SGEC')[2].priority]",
                    "protocol": "[parameters('SGEC')[2].protocol]",
                    "sourceAddressPrefix": "[parameters('SGEC')[2].sourceAddressPrefix]",
                    "sourceAddressPrefixes": "[parameters('SGEC')[2].sourceAddressPrefixes]",
                    "sourcePortRange": "[parameters('SGEC')[2].sourcePortRange]",
                    "sourcePortRanges": "[parameters('SGEC')[2].sourcePortRanges]"
                  }
                },
                {
                  "name": "[parameters('SGEC')[3].name]",
                  "properties": {
                    "access": "[parameters('SGEC')[3].access]",
                    "destinationAddressPrefix": "[parameters('SGEC')[3].destinationAddressPrefix]",
                    "destinationAddressPrefixes": "[parameters('SGEC')[3].destinationAddressPrefixes]",
                    "destinationPortRange": "[parameters('SGEC')[3].destinationPortRange]",
                    "destinationPortRanges": "[parameters('SGEC')[3].destinationPortRanges]",
                    "direction": "[parameters('SGEC')[3].direction]",
                    "priority": "[parameters('SGEC')[3].priority]",
                    "protocol": "[parameters('SGEC')[3].protocol]",
                    "sourceAddressPrefix": "[parameters('SGEC')[3].sourceAddressPrefix]",
                    "sourceAddressPrefixes": "[parameters('SGEC')[3].sourceAddressPrefixes]",
                    "sourcePortRange": "[parameters('SGEC')[3].sourcePortRange]",
                    "sourcePortRanges": "[parameters('SGEC')[3].sourcePortRanges]"
                  }
                },
                {
                  "name": "[parameters('SGEC')[4].name]",
                  "properties": {
                    "access": "[parameters('SGEC')[4].access]",
                    "destinationAddressPrefix": "[parameters('SGEC')[4].destinationAddressPrefix]",
                    "destinationAddressPrefixes": "[parameters('SGEC')[4].destinationAddressPrefixes]",
                    "destinationPortRange": "[parameters('SGEC')[4].destinationPortRange]",
                    "destinationPortRanges": "[parameters('SGEC')[4].destinationPortRanges]",
                    "direction": "[parameters('SGEC')[4].direction]",
                    "priority": "[parameters('SGEC')[4].priority]",
                    "protocol": "[parameters('SGEC')[4].protocol]",
                    "sourceAddressPrefix": "[parameters('SGEC')[4].sourceAddressPrefix]",
                    "sourceAddressPrefixes": "[parameters('SGEC')[4].sourceAddressPrefixes]",
                    "sourcePortRange": "[parameters('SGEC')[4].sourcePortRange]",
                    "sourcePortRanges": "[parameters('SGEC')[4].sourcePortRanges]"
                  }
                },
                {
                  "name": "[parameters('SGEC')[5].name]",
                  "properties": {
                    "access": "[parameters('SGEC')[5].access]",
                    "destinationAddressPrefix": "[parameters('SGEC')[5].destinationAddressPrefix]",
                    "destinationAddressPrefixes": "[parameters('SGEC')[5].destinationAddressPrefixes]",
                    "destinationPortRange": "[parameters('SGEC')[5].destinationPortRange]",
                    "destinationPortRanges": "[parameters('SGEC')[5].destinationPortRanges]",
                    "direction": "[parameters('SGEC')[5].direction]",
                    "priority": "[parameters('SGEC')[5].priority]",
                    "protocol": "[parameters('SGEC')[5].protocol]",
                    "sourceAddressPrefix": "[parameters('SGEC')[5].sourceAddressPrefix]",
                    "sourceAddressPrefixes": "[parameters('SGEC')[5].sourceAddressPrefixes]",
                    "sourcePortRange": "[parameters('SGEC')[5].sourcePortRange]",
                    "sourcePortRanges": "[parameters('SGEC')[5].sourcePortRanges]"
                  }
                }
              ]
            }
          ],
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T08:03:42.328453+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:10:38.717902+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "local authentification must be enabled",
    "displayName": "APPINS-05: local authentification must be enabled for app Insights",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/APPINS-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-31T12:57:13.5137068Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:47:38.4759903Z"
    },
    "mode": "All",
    "name": "APPINS-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Insights/components",
            "field": "type"
          },
          {
            "field": "Microsoft.Insights/components/DisableLocalAuth",
            "notEquals": "false"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-31T12:57:13.429984+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:47:38.455144+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any NSG Creation/update if they are non-Bussiness and not Allowed",
    "displayName": "SGEC-APPE-06-PROD",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-06-PROD",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-28T14:22:47.4854652Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-24T14:54:03.7099041Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-06-PROD",
    "parameters": {
      "Aproved-NSGFlows": {
        "allowedValues": null,
        "defaultValue": [
          {
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "priority": 1500,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [
              "10.185.0.128/26",
              "10.34.0.128/26",
              "10.203.0.128/26"
            ],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "22",
              "3389"
            ],
            "subscriptionId": "6942f408-2d96-4173-972c-86a02d4c2739",
            "targetNSGId": "internal"
          },
          {
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "priority": 2000,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [
              "10.203.32.15",
              "10.203.32.17",
              "10.185.36.246",
              "10.185.36.247",
              "10.34.32.90",
              "10.34.32.72"
            ],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "22",
              "3389"
            ],
            "subscriptionId": "6942f408-2d96-4173-972c-86a02d4c2739",
            "targetNSGId": "external"
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to be excluded from Deny",
          "displayName": "Security Rules allowed by Security in Business Range",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming convention from BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups",
            "field": "type"
          },
          {
            "anyof": [
              {
                "field": "name",
                "like": "[concat(parameters('nsgName')[0],'*')]"
              },
              {
                "field": "name",
                "like": "[concat(parameters('nsgName')[1],'*')]"
              }
            ]
          },
          {
            "count": {
              "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
              "where": {
                "allOf": [
                  {
                    "equals": "Allow",
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].access"
                  },
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                    "greaterOrEquals": 1000
                  },
                  {
                    "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].priority",
                    "lessOrEquals": 2999
                  },
                  {
                    "Value": "[indexof(parameters('Aproved-NSGFlows'), createObject('targetNSGId', split(split(field('id'),'/')[8],'-')[2], 'subscriptionId', split(field('id'),'/')[2],'protocol', toUpper(current('Microsoft.Network/networkSecurityGroups/securityRules[*].protocol')),'direction', current('Microsoft.Network/networkSecurityGroups/securityRules[*].direction'),'priority', current('Microsoft.Network/networkSecurityGroups/securityRules[*].priority'),'sourcePortRange', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')),'destinationPortRange',if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')),'sourcePortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges')),'destinationPortRanges', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges')),'sourceAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'',current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes')),createarray(),current('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationAddressPrefixes'))))]",
                    "equals": -1
                  }
                ]
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-28T14:22:47.399530+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-24T14:54:03.707419+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Deny any SecurityRule Creation/update if they are Bussiness and not Allowed",
    "displayName": "SGEC-APPE-04-PROD",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SGEC-APPE-04-PROD",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-11-28T14:22:47.5470064Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-05-24T14:54:03.6403288Z"
    },
    "mode": "All",
    "name": "SGEC-APPE-04-PROD",
    "parameters": {
      "Aproved-NSGFlows": {
        "allowedValues": null,
        "defaultValue": [
          {
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "priority": 1500,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [
              "10.185.0.128/26",
              "10.34.0.128/26",
              "10.203.0.128/26"
            ],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "22",
              "3389"
            ],
            "subscriptionId": "6942f408-2d96-4173-972c-86a02d4c2739",
            "targetNSGId": "internal"
          },
          {
            "destinationAddressPrefix": "VirtualNetwork",
            "destinationAddressPrefixes": [],
            "destinationPortRange": "",
            "destinationPortRanges": [
              "22",
              "3389"
            ],
            "direction": "Inbound",
            "priority": 2000,
            "protocol": "TCP",
            "sourceAddressPrefix": "",
            "sourceAddressPrefixes": [
              "10.203.32.15",
              "10.203.32.17",
              "10.185.36.246",
              "10.185.36.247",
              "10.34.32.90",
              "10.34.32.72"
            ],
            "sourcePortRange": "",
            "sourcePortRanges": [
              "22",
              "3389"
            ],
            "subscriptionId": "6942f408-2d96-4173-972c-86a02d4c2739",
            "targetNSGId": "external"
          }
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of Security Rules to be excluded from Deny",
          "displayName": "Security Rules allowed by Security in Business Range",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "nsgName": {
        "allowedValues": null,
        "defaultValue": [
          "nsg-subnet-internal",
          "nsg-subnet-external"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Nsg Naming convention from BackEnd/FrontEnd Subnet",
          "displayName": "Nsg name",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allof": [
          {
            "equals": "Microsoft.Network/networkSecurityGroups/SecurityRules",
            "field": "type"
          },
          {
            "anyof": [
              {
                "contains": "[parameters('nsgName')[0]]",
                "field": "id"
              },
              {
                "contains": "[parameters('nsgName')[1]]",
                "field": "id"
              }
            ]
          },
          {
            "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
            "greaterOrEquals": 1000
          },
          {
            "field": "Microsoft.Network/networkSecurityGroups/securityRules/priority",
            "lessOrEquals": 2999
          },
          {
            "Value": "[indexof(parameters('Aproved-NSGFlows'), createObject('targetNSGId', split(split(field('id'),'/')[8],'-')[2], 'subscriptionId', split(field('id'),'/')[2],'protocol', toUpper(field('Microsoft.Network/networkSecurityGroups/securityRules/protocol')),'direction', field('Microsoft.Network/networkSecurityGroups/securityRules/direction'),'priority', field('Microsoft.Network/networkSecurityGroups/securityRules/priority'),'sourcePortRange', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')),'destinationPortRange',if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')),'sourcePortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges')),'destinationPortRanges', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges')),'sourceAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix')),'sourceAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes')),'destinationAddressPrefix', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'',field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefix')),'destinationAddressPrefixes', if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes')),createarray(),field('Microsoft.Network/networkSecurityGroups/securityRules/destinationAddressPrefixes'))))]",
            "equals": -1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-11-28T14:22:47.290180+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-05-24T14:54:03.628767+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public access must be disabled on the compute instance - No public IP adress must be set",
    "displayName": "AML-13 : Public access must be disabled on the compute instance - No public IP adress must be set",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-27T13:23:39.0571698Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AML-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces/computes",
            "field": "type"
          },
          {
            "field": "Microsoft.MachineLearningServices/workspaces/computes/connectivityEndpoints.publicIpAddress",
            "notEquals": ""
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-27T13:23:38.980849+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-27T13:23:38.980849+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SSH access must be disabled on the compute instance",
    "displayName": "AML-12 - SSH access must be disabled on the compute instance",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-12-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-02-27T13:23:39.1656038Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AML-12-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces/computes",
            "field": "type"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.MachineLearningServices/workspaces/computes/sshSettings.sshPublicAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-02-27T13:23:39.046491+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-02-27T13:23:39.046491+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "SMB must not be used in azure files",
    "displayName": "FILE-17: SMB must not be used in azure files in APPI Oxygen use case",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-17-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-14T15:11:05.363058Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-27T15:00:05.116805Z"
    },
    "mode": "All",
    "name": "FILE-17-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "field": "type"
          },
          {
            "equals": "SMB",
            "field": "Microsoft.Storage/storageAccounts/fileServices/shares/enabledProtocols"
          },
          {
            "equals": "NFS",
            "field": "[concat('tags[', 'storage_type', ']')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-14T15:11:05.229591+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-27T15:00:05.109816+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only Premium SKU must be allowed",
    "displayName": "FILE-20: Only Premium SKU must be allowed",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-20-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-14T15:11:05.8233086Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-27T15:00:04.7809362Z"
    },
    "mode": "All",
    "name": "FILE-20-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/sku.tier",
            "notEquals": "Premium"
          },
          {
            "equals": "NFS",
            "field": "[concat('tags[', 'storage_type', ']')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-14T15:11:05.721647+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-27T15:00:04.792308+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Secure transfer on storage account must be disabled",
    "displayName": "STO-76: Secure transfer on storage account must be disabled in Oxygen use case",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-76-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-14T15:11:05.9555102Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-27T15:00:05.2617818Z"
    },
    "mode": "All",
    "name": "STO-76-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "NFS",
            "field": "[concat('tags[', 'storage_type', ']')]"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
            "notEquals": false
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-14T15:11:05.893756+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-27T15:00:05.259281+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Access key must be disabled",
    "displayName": "FILE-15-maiya: Access key must be disabled in APPI Oxygen use case",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/FILE-15-maiya-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-14T15:11:06.0379338Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-27T15:00:05.2313585Z"
    },
    "mode": "All",
    "name": "FILE-15-maiya-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": true,
            "field": "Microsoft.Storage/storageAccounts/allowSharedKeyAccess"
          },
          {
            "equals": "NFS",
            "field": "[concat('tags[', 'storage_type', ']')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-14T15:11:05.967985+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-27T15:00:05.225344+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Zone Redundancy must be enabled in APPI Oxygen use case",
    "displayName": "STO-75: Zone Redundancy must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-75-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-14T15:11:06.1381396Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-27T15:00:04.6731405Z"
    },
    "mode": "All",
    "name": "STO-75-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "NFS",
            "field": "[concat('tags[', 'storage_type', ']')]"
          },
          {
            "field": "Microsoft.Storage/storageAccounts/sku.name",
            "notIn": [
              "Standard_ZRS",
              "Premium_ZRS"
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-14T15:11:06.058495+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-27T15:00:04.674957+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoint must be set",
    "displayName": "VAULT-23 - Private endpoint must be set",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/VAULT-23-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-03-22T14:39:13.3196341Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "VAULT-23-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.KeyVault/vaults",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.KeyVault/vaults/privateEndpointConnections"
              },
              {
                "count": {
                  "field": "Microsoft.KeyVault/vaults/privateEndpointConnections[*]",
                  "where": {
                    "equals": "Approved",
                    "field": "Microsoft.KeyVault/vaults/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
                  }
                },
                "less": 1
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-03-22T14:39:13.152014+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-22T14:39:13.152014+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If public access is used, Azure Logic App main site must only accept traffic from selected Vnet, Imperva and SG proxy IPs",
    "displayName": "LGC-21-sgct : Azure Logic App main site must only accept traffic from selected Vnet, Imperva and SG proxy IPs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-21-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-30T13:09:49.289826Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-29T14:20:18.9729214Z"
    },
    "mode": "All",
    "name": "LGC-21-sgct",
    "parameters": {
      "SGProxiesIP": {
        "allowedValues": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "194.9.96.0/20",
          "24.206.110.32/32",
          "24.206.110.33/32",
          "24.206.114.30/32",
          "24.206.114.31/32",
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.123.34/32",
          "24.206.123.35/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.206.82.53/32",
          "24.206.82.54/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.206.97.44/32",
          "24.206.97.45/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.99.30/32",
          "24.206.99.31/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.141.40/32",
          "24.239.141.41/32",
          "24.239.144.30/32",
          "24.239.144.31/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.139.30/32",
          "24.239.139.31/32",
          "24.206.107.32/32",
          "24.206.107.33/32",
          "192.109.140.0/24"
        ],
        "defaultValue": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "194.9.96.0/20",
          "24.206.110.32/32",
          "24.206.110.33/32",
          "24.206.114.30/32",
          "24.206.114.31/32",
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.123.34/32",
          "24.206.123.35/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.206.82.53/32",
          "24.206.82.54/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.206.97.44/32",
          "24.206.97.45/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.99.30/32",
          "24.206.99.31/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.141.40/32",
          "24.239.141.41/32",
          "24.239.144.30/32",
          "24.239.144.31/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.139.30/32",
          "24.239.139.31/32",
          "24.206.107.32/32",
          "24.206.107.33/32",
          "192.109.140.0/24"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of SG Proxies IP (ZScaler and NetScopeIP) addresses ranges",
          "displayName": "SG Proxies IPs",
          "strongType": null
        },
        "type": "array"
      },
      "WAFImpervaIP": {
        "allowedValues": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "defaultValue": [
          "199.83.128.0/21",
          "198.143.32.0/19",
          "149.126.72.0/21",
          "103.28.248.0/22",
          "45.64.64.0/22",
          "185.11.124.0/22",
          "192.230.64.0/18",
          "107.154.0.0/16",
          "45.60.0.0/16",
          "45.223.0.0/16",
          "131.125.128.0/17"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of WAF Imperva IP addresses ranges",
          "displayName": "WAF Imperva Ips",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/publicNetworkAccess"
              },
              {
                "field": "Microsoft.Web/sites/publicNetworkAccess",
                "notEquals": "Disabled"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "anyOf": [
                  {
                    "equals": "Deny",
                    "field": "Microsoft.Web/sites/config/IpSecurityRestrictionsDefaultAction"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*]",
                      "where": {
                        "allOf": [
                          {
                            "equals": "Any",
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress"
                          },
                          {
                            "equals": "Deny",
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].action"
                          },
                          {
                            "equals": "Deny all",
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].name"
                          },
                          {
                            "equals": "Deny all access",
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].description"
                          }
                        ]
                      }
                    },
                    "equals": 1
                  }
                ]
              },
              {
                "count": {
                  "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*]",
                  "where": {
                    "allOf": [
                      {
                        "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress",
                        "notEquals": "Any"
                      },
                      {
                        "Equals": 0,
                        "count": {
                          "name": "WAFIPs",
                          "value": "[parameters('WAFImpervaIP')]",
                          "where": {
                            "Equals": true,
                            "value": "[ipRangeContains(current('WAFIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                          }
                        }
                      },
                      {
                        "Equals": 0,
                        "count": {
                          "name": "SGProxiesIPs",
                          "value": "[parameters('SGProxiesIP')]",
                          "where": {
                            "Equals": true,
                            "value": "[ipRangeContains(current('SGProxiesIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                          }
                        }
                      },
                      {
                        "equals": "Allow",
                        "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].action"
                      }
                    ]
                  }
                },
                "equals": 0
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-30T13:09:49.214016+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-29T14:20:18.951001+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "CORS origins must match those described in DPSAT and allow all ( * ) rules are forbidden",
    "displayName": "LGC-09-sgct : CORS origins must match those described in DPSAT and allow all ( * ) rules are forbidden",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-30T13:09:49.9818866Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "LGC-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "DeployIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "forbiddenOrigins": {
        "allowedValues": [
          "*"
        ],
        "defaultValue": [
          "*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "List of urls forbidden for CORS",
          "displayName": "Forbidden CORS origins",
          "strongType": null
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
              "where": {
                "field": "Microsoft.Web/sites/config/web.cors.allowedOrigins[*]",
                "in": "[parameters('forbiddenOrigins')]"
              }
            },
            "equals": 0
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-30T13:09:49.913753+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-07-30T13:09:49.913753+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If public access is used, Azure Logic App main site must only accept traffic from selected Vnet, Imperva and SG proxy IPs",
    "displayName": "LGC-22-sgct : Azure Logic App main site must only accept traffic from selected Vnet, Imperva and SG proxy IPs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/LGC-22-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-07-30T14:39:42.9975694Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/sites/CORP-cybersecurity/Policies%20and%20rules/Forms/AllItems.aspx?id=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures%2FAzure%20Hardening%20Guides%5FLZv1%2Ezip&parent=%2Fsites%2FCORP%2Dcybersecurity%2FPolicies%20and%20rules%2FPolicies%20%26%20Procedures\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-29T14:20:19.2904895Z"
    },
    "mode": "All",
    "name": "LGC-22-sgct",
    "parameters": {
      "GitHubRunnersIP": {
        "allowedValues": [
          "192.109.140.0/24"
        ],
        "defaultValue": [
          "192.109.140.0/24"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of GitHub Runners IP addresses ranges",
          "displayName": "GitHub Runners IPs",
          "strongType": null
        },
        "type": "array"
      },
      "SGProxiesIP": {
        "allowedValues": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "194.9.96.0/20",
          "24.206.110.32/32",
          "24.206.110.33/32",
          "24.206.114.30/32",
          "24.206.114.31/32",
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.123.34/32",
          "24.206.123.35/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.206.82.53/32",
          "24.206.82.54/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.206.97.44/32",
          "24.206.97.45/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.99.30/32",
          "24.206.99.31/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.141.40/32",
          "24.239.141.41/32",
          "24.239.144.30/32",
          "24.239.144.31/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.139.30/32",
          "24.239.139.31/32",
          "24.206.107.32/32",
          "24.206.107.33/32"
        ],
        "defaultValue": [
          "1.234.57.0/24",
          "89.167.131.0/24",
          "154.113.23.0/24",
          "211.144.19.0/24",
          "8.25.203.0/24",
          "94.188.131.0/24",
          "165.225.0.0/17",
          "213.52.102.0/24",
          "27.251.211.238/32",
          "104.129.192.0/20",
          "165.225.192.0/18",
          "213.152.228.0/24",
          "58.220.95.0/24",
          "124.248.141.0/24",
          "185.46.212.0/22",
          "216.218.133.192/26",
          "64.74.126.64/26",
          "136.226.0.0/16",
          "197.98.201.0/24",
          "216.52.207.64/26",
          "70.39.159.0/24",
          "137.83.128.0/18",
          "199.168.148.0/22",
          "72.52.96.0/26",
          "147.161.128.0/17",
          "209.51.184.0/26",
          "167.103.0.0/16",
          "170.85.0.0/16",
          "194.9.112.0/22",
          "194.9.116.0/24",
          "194.9.96.0/20",
          "24.206.110.32/32",
          "24.206.110.33/32",
          "24.206.114.30/32",
          "24.206.114.31/32",
          "24.206.115.32/32",
          "24.206.115.33/32",
          "24.206.123.34/32",
          "24.206.123.35/32",
          "24.206.76.50/32",
          "24.206.76.51/32",
          "24.206.78.46/32",
          "24.206.78.47/32",
          "24.206.82.53/32",
          "24.206.82.54/32",
          "24.206.89.94/32",
          "24.206.89.95/32",
          "24.206.97.44/32",
          "24.206.97.45/32",
          "24.206.98.12/32",
          "24.206.98.13/32",
          "24.206.99.30/32",
          "24.206.99.31/32",
          "24.239.129.30/32",
          "24.239.129.31/32",
          "24.239.131.32/32",
          "24.239.131.33/32",
          "24.239.134.32/32",
          "24.239.134.33/32",
          "24.239.135.28/32",
          "24.239.135.29/32",
          "24.239.140.32/32",
          "24.239.140.33/32",
          "24.239.141.40/32",
          "24.239.141.41/32",
          "24.239.144.30/32",
          "24.239.144.31/32",
          "24.239.160.32/32",
          "24.239.160.33/32",
          "24.239.164.28/32",
          "24.239.164.29/32",
          "24.239.166.30/32",
          "24.239.166.31/32",
          "24.239.139.30/32",
          "24.239.139.31/32",
          "24.206.107.32/32",
          "24.206.107.33/32"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of SG Proxies IP (ZScaler and NetScopeIP) addresses ranges",
          "displayName": "SG Proxies IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Web/sites",
            "field": "type"
          },
          {
            "field": "kind",
            "like": "functionapp,workflowapp"
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.Web/sites/publicNetworkAccess"
              },
              {
                "field": "Microsoft.Web/sites/publicNetworkAccess",
                "notEquals": "Disabled"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": false,
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictionsUseMain"
                  },
                  {
                    "anyOf": [
                      {
                        "equals": "Deny",
                        "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictionsDefaultAction"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                          "where": {
                            "allOf": [
                              {
                                "equals": "Any",
                                "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress"
                              },
                              {
                                "equals": "Deny",
                                "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                              },
                              {
                                "equals": "Deny all",
                                "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].name"
                              },
                              {
                                "equals": "Deny all access",
                                "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].description"
                              }
                            ]
                          }
                        },
                        "equals": 1
                      }
                    ]
                  },
                  {
                    "count": {
                      "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*]",
                      "where": {
                        "allOf": [
                          {
                            "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress",
                            "notEquals": "Any"
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "SGProxiesIPs",
                              "value": "[parameters('SGProxiesIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('SGProxiesIPs'), current('Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "GitHubRunnersIPs",
                              "value": "[parameters('GitHubRunnersIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('GitHubRunnersIPs'), current('Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "equals": "Allow",
                            "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictions[*].action"
                          }
                        ]
                      }
                    },
                    "equals": 0
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": true,
                    "field": "Microsoft.Web/sites/config/scmIpSecurityRestrictionsUseMain"
                  },
                  {
                    "anyOf": [
                      {
                        "equals": "Deny",
                        "field": "Microsoft.Web/sites/config/IpSecurityRestrictionsDefaultAction"
                      },
                      {
                        "count": {
                          "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*]",
                          "where": {
                            "allOf": [
                              {
                                "equals": "Any",
                                "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress"
                              },
                              {
                                "equals": "Deny",
                                "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].action"
                              },
                              {
                                "equals": "Deny all",
                                "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].name"
                              },
                              {
                                "equals": "Deny all access",
                                "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].description"
                              }
                            ]
                          }
                        },
                        "equals": 1
                      }
                    ]
                  },
                  {
                    "count": {
                      "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*]",
                      "where": {
                        "allOf": [
                          {
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress",
                            "notEquals": "Any"
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "SGProxiesIPs",
                              "value": "[parameters('SGProxiesIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('SGProxiesIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "Equals": 0,
                            "count": {
                              "name": "GitHubRunnersIPs",
                              "value": "[parameters('GitHubRunnersIP')]",
                              "where": {
                                "Equals": true,
                                "value": "[ipRangeContains(current('GitHubRunnersIPs'), current('Microsoft.Web/sites/config/IpSecurityRestrictions[*].ipAddress'))]"
                              }
                            }
                          },
                          {
                            "equals": "Allow",
                            "field": "Microsoft.Web/sites/config/IpSecurityRestrictions[*].action"
                          }
                        ]
                      }
                    },
                    "equals": 0
                  }
                ]
              }
            ]
          },
          "type": "Microsoft.Web/sites/config"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-07-30T14:39:42.907945+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-29T14:20:19.232081+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "ILBs in APPE must have FrontendIPs and BackEndPool in the same subnet",
    "displayName": "ILB-13 : ILBs in APPE must have FrontendIPs and BackEndPool in the same subnet",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ILB-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-08-28T08:14:38.3965481Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-08-29T10:47:21.2372357Z"
    },
    "mode": "All",
    "name": "ILB-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "intArray": {
        "allowedValues": [
          [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            46,
            47,
            48,
            49,
            50
          ]
        ],
        "defaultValue": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50
        ],
        "metadata": null,
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/loadBalancers",
            "field": "type"
          },
          {
            "equals": "APPE",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "count": {
                  "field": "Microsoft.Network/virtualNetworks/subnets[*]",
                  "where": {
                    "allOf": [
                      {
                        "anyOf": [
                          {
                            "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                            "like": "subnet-external*"
                          },
                          {
                            "field": "Microsoft.Network/virtualNetworks/subnets[*].name",
                            "like": "subnet-internal*"
                          }
                        ]
                      },
                      {
                        "count": {
                          "name": "intArray",
                          "value": "[parameters('intArray')]",
                          "where": {
                            "anyOf": [
                              {
                                "less": "[current('intArray')]",
                                "value": "[sub(length(array(field('Microsoft.Network/loadBalancers/frontendIPConfigurations[*].subnet.id'))),1)]"
                              },
                              {
                                "contains": "[current('Microsoft.Network/virtualNetworks/subnets[*].name')]",
                                "value": "[if(empty(skip(array(field('Microsoft.Network/loadBalancers/frontendIPConfigurations[*].subnet.id')),current('intArray'))),'empty',first(skip(array(field('Microsoft.Network/loadBalancers/frontendIPConfigurations[*].subnet.id')),current('intArray'))))]"
                              }
                            ]
                          }
                        },
                        "equals": "[length(parameters('intArray'))]"
                      },
                      {
                        "count": {
                          "name": "intArray",
                          "value": "[parameters('intArray')]",
                          "where": {
                            "anyOf": [
                              {
                                "less": "[current('intArray')]",
                                "value": "[sub(length(array(field('Microsoft.Network/loadBalancers/backendAddressPools[*].loadBalancerBackendAddresses[*].ipAddress'))),1)]"
                              },
                              {
                                "count": {
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].addressPrefixes[*]",
                                  "where": {
                                    "equals": true,
                                    "value": "[ipRangeContains(current('Microsoft.Network/virtualNetworks/subnets[*].addressPrefixes[*]'), first(skip(array(field('Microsoft.Network/loadBalancers/backendAddressPools[*].loadBalancerBackendAddresses[*].ipAddress')),current('intArray'))))]"
                                  }
                                },
                                "notEquals": 0
                              }
                            ]
                          }
                        },
                        "equals": "[length(parameters('intArray'))]"
                      },
                      {
                        "count": {
                          "name": "intArray",
                          "value": "[parameters('intArray')]",
                          "where": {
                            "anyOf": [
                              {
                                "less": "[current('intArray')]",
                                "value": "[sub(length(array(field('Microsoft.Network/loadBalancers/backendAddressPools[*].loadBalancerBackendAddresses[*].networkInterfaceIPConfiguration.id'))),1)]"
                              },
                              {
                                "count": {
                                  "field": "Microsoft.Network/virtualNetworks/subnets[*].ipConfigurations[*]",
                                  "where": {
                                    "contains": "[current('Microsoft.Network/virtualNetworks/subnets[*].ipConfigurations[*].id')]",
                                    "value": "[if(empty(skip(array(field('Microsoft.Network/loadBalancers/backendAddressPools[*].loadBalancerBackendAddresses[*].networkInterfaceIPConfiguration.id')),current('intArray'))),'empty',first(skip(array(field('Microsoft.Network/loadBalancers/backendAddressPools[*].loadBalancerBackendAddresses[*].networkInterfaceIPConfiguration.id')),current('intArray'))))]"
                                  }
                                },
                                "notEquals": 0
                              }
                            ]
                          }
                        },
                        "equals": "[length(parameters('intArray'))]"
                      }
                    ]
                  }
                },
                "notEquals": 0
              }
            ]
          },
          "existenceScope": "subscription",
          "type": "Microsoft.Network/virtualNetworks"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-08-28T08:14:38.209622+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-29T10:47:20.991281+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Standard Load Balancer SKU must be used",
    "displayName": "ILB-03 : Standard Load Balancer SKU must be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ILB-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-08-28T08:14:38.5399505Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ILB-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/loadBalancers",
            "field": "type"
          },
          {
            "field": "Microsoft.Network/loadBalancers/sku.name",
            "notEquals": "Standard"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-08-28T08:14:38.470194+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-08-28T08:14:38.470194+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service Endpoint Policies cant be deleted directly when compliant",
    "displayName": "SEP-01 - Service Endpoint Policies cant be deleted directly when compliant",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/SEP-01-OXYGEN",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-26T10:48:27.9412712Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "Indexed",
    "name": "SEP-01-OXYGEN",
    "parameters": {
      "effect": {
        "allowedValues": null,
        "defaultValue": "denyAction",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/serviceEndpointPolicies",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*]",
              "where": {
                "count": {
                  "field": "Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].serviceResources[*]",
                  "where": {
                    "equals": true,
                    "value": "[startsWith(string(first(field('Microsoft.Network/serviceEndpointPolicies/serviceEndpointPolicyDefinitions[*].serviceResources[*]'))),concat('/subscriptions/', subscription().subscriptionId))]"
                  }
                },
                "greater": 0
              }
            },
            "greater": 0
          }
        ]
      },
      "then": {
        "details": {
          "actionNames": [
            "delete"
          ],
          "cascadeBehaviors": {
            "resourceGroup": "allow"
          }
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-26T10:48:27.877776+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-26T10:48:27.877776+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Anonymous access is not authorized in LZv2",
    "displayName": "STO-07b - Anonymous access is not authorized in LZv2",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/STO-07b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-11-19T09:36:50.7545879Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "STO-07b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The effect determines what happens when the policy rule is evaluated to match",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "field": "id",
            "notContains": "/resourceGroups/databricks-rg-"
          },
          {
            "not": {
              "equals": "false",
              "field": "Microsoft.Storage/storageAccounts/allowBlobPublicAccess"
            }
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-11-19T09:36:50.682254+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-19T09:36:50.682254+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System Managed Identities must be used for Azure resources to access Azure Map",
    "displayName": "MAPS-05: System Managed Identities must be used for Azure resources to access Azure Map",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MAPS-05-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-10T14:01:50.6186257Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "MAPS-05-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Maps/accounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "identity.type",
                "notEquals": "SystemAssigned"
              },
              {
                "exists": false,
                "field": "identity.type"
              },
              {
                "equals": "None",
                "field": "identity.type"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-10T14:01:50.563332+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-10T14:01:50.563332+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Maps Datastore must not be used",
    "displayName": "MAPS-06: Azure Maps Datastore must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MAPS-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-10T14:01:51.1712733Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "MAPS-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Maps/accounts",
            "field": "type"
          },
          {
            "count": {
              "field": "Microsoft.Maps/accounts/linkedResources[*]"
            },
            "greater": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-10T14:01:51.105923+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-10T14:01:51.105923+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Shared Key Authentication is forbidden and must not be used",
    "displayName": "MAPS-02: Shared Key Authentication is forbidden and must not be used",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/MAPS-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-10T14:01:51.7597428Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "MAPS-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Maps/accounts",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Maps/accounts/disableLocalAuth",
                "notEquals": true
              },
              {
                "exists": false,
                "field": "Microsoft.Maps/accounts/disableLocalAuth"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-10T14:01:51.668868+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-10T14:01:51.668868+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "If 'confidentiality' is >= C2, 'High business impact workspace' option must be selected",
    "displayName": "AML-01b - If 'confidentiality' is >= C2, 'High business impact workspace' option must be selected",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-01b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-16T09:07:44.4010663Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AML-01b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces",
            "field": "type"
          },
          {
            "equals": "C2",
            "value": "[toUpper(subscription().tags['confidentiality'])]"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.MachineLearningServices/workspaces/hbiWorkspace"
              },
              {
                "equals": "false",
                "field": "Microsoft.MachineLearningServices/workspaces/hbiWorkspace"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-16T09:07:44.327090+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T09:07:44.327090+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public access must be disabled on the compute instance - No public IP adress must be set",
    "displayName": "AML-13b : Public access must be disabled on the compute instance - No public IP adress must be set",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/AML-13b-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-16T09:07:44.6007443Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "AML-13b-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.MachineLearningServices/workspaces/computes",
            "field": "type"
          },
          {
            "allOf": [
              {
                "exists": "true",
                "field": "Microsoft.MachineLearningServices/workspaces/computes/connectivityEndpoints.publicIpAddress"
              },
              {
                "field": "Microsoft.MachineLearningServices/workspaces/computes/connectivityEndpoints.publicIpAddress",
                "notEquals": ""
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-16T09:07:44.407771+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-16T09:07:44.407771+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enable source control on development data factories by using a Git repository (versioning, tracking capabilities)",
    "displayName": "ADF-13: Enable source control on development data factories by using a Git repository",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec/providers/Microsoft.Authorization/policyDefinitions/ADF-13-new-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-18T17:20:39.2584136Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "ADF-13-new-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.DataFactory/factories",
            "field": "type"
          },
          {
            "allOf": [
              {
                "notIn": [
                  "PRD",
                  "PPR"
                ],
                "value": "[toUpper(subscription().tags['environment'])]"
              },
              {
                "notContains": "-PRD-",
                "value": "[toUpper(subscription().displayName)]"
              },
              {
                "notContains": "-PPR-",
                "value": "[toUpper(subscription().displayName)]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.DataFactory/factories/repoConfiguration.repositoryName"
              },
              {
                "equals": "",
                "field": "Microsoft.DataFactory/factories/repoConfiguration.repositoryName"
              },
              {
                "field": "Microsoft.DataFactory/factories/repoConfiguration.type",
                "notEquals": "FactoryVSTSConfiguration"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-18T17:20:39.177200+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-18T17:20:39.177200+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed services for 1502z-gdi-labmigrationfactory-dev-westeurope",
    "displayName": "Migrate-02 : Only allowed services for 1502z-gdi-labmigrationfactory-dev-westeurope",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Migrate-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T16:13:56.5833509Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:35:21.0875829Z"
    },
    "mode": "Indexed",
    "name": "Migrate-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResourceTypesAllowed": {
        "allowedValues": [
          "Microsoft.DataMigration/*",
          "Microsoft.Network/virtualNetworks/subnets/join/action",
          "Microsoft.Network/virtualNetworks/write",
          "Microsoft.Network/virtualNetworks/read",
          "Microsoft.Network/networkInterfaces",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "defaultValue": [
          "Microsoft.DataMigration/*",
          "Microsoft.Network/virtualNetworks/subnets/join/action",
          "Microsoft.Network/virtualNetworks/write",
          "Microsoft.Network/virtualNetworks/read",
          "Microsoft.Network/networkInterfaces",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed.",
          "displayName": "Allowed resource types",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "dms_tag",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Subscription DMS Tag",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "DMS"
        ],
        "defaultValue": [
          "DMS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "In": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "count": {
              "name": "allowedType",
              "value": "[parameters('listOfResourceTypesAllowed')]",
              "where": {
                "field": "type",
                "like": "[current('allowedType')]"
              }
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T16:13:56.539596+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:35:21.023836+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "VNET peering is not authorized in Sandbox",
    "displayName": "Sandbox-01-ENFORCE : VNET peering is not authorized in Sandbox MG",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Sandbox-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T16:13:56.6783183Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:16:46.756619Z"
    },
    "mode": "All",
    "name": "Sandbox-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
        "field": "type"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T16:13:56.633350+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:16:46.729178+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed services for prod subscriptions",
    "displayName": "Migrate-01-ENFORCE : Only allowed services on Migration Tools management group",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Migrate-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T16:13:56.671366Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:55:28.8855729Z"
    },
    "mode": "Indexed",
    "name": "Migrate-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResourceTypesAllowed": {
        "allowedValues": [
          "Microsoft.Migrate/MigrateProjects",
          "Microsoft.Migrate/MigrateProjects/Solutions",
          "Microsoft.Migrate/assessmentprojects",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "defaultValue": [
          "Microsoft.Migrate/MigrateProjects",
          "Microsoft.Migrate/MigrateProjects/Solutions",
          "Microsoft.Migrate/assessmentprojects",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed.",
          "displayName": "Allowed resource types",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "count": {
          "name": "allowedType",
          "value": "[parameters('listOfResourceTypesAllowed')]",
          "where": {
            "field": "type",
            "like": "[current('allowedType')]"
          }
        },
        "equals": 0
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T16:13:56.617722+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:55:28.850279+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed services for 1502z-gdi-labmigrationfactory-dev-westeurope",
    "displayName": "Migrate-02-ENFORCE : Only allowed services for 1502z-gdi-labmigrationfactory-dev-westeurope",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Migrate-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T16:13:56.7032792Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:09:06.3919309Z"
    },
    "mode": "Indexed",
    "name": "Migrate-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResourceTypesAllowed": {
        "allowedValues": [
          "Microsoft.DataMigration/*",
          "Microsoft.Network/virtualNetworks/subnets/join/action",
          "Microsoft.Network/virtualNetworks/write",
          "Microsoft.Network/virtualNetworks/read",
          "Microsoft.Network/networkInterfaces",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "defaultValue": [
          "Microsoft.DataMigration/*",
          "Microsoft.Network/virtualNetworks/subnets/join/action",
          "Microsoft.Network/virtualNetworks/write",
          "Microsoft.Network/virtualNetworks/read",
          "Microsoft.Network/networkInterfaces",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed.",
          "displayName": "Allowed resource types",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      },
      "tagSub": {
        "allowedValues": null,
        "defaultValue": "dms_tag",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Subscription DMS Tag",
          "strongType": null
        },
        "type": "String"
      },
      "tagSubValue": {
        "allowedValues": [
          "DMS"
        ],
        "defaultValue": [
          "DMS"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "In": "[parameters('tagSubValue')]",
            "value": "[subscription().tags[parameters('tagSub')]]"
          },
          {
            "count": {
              "name": "allowedType",
              "value": "[parameters('listOfResourceTypesAllowed')]",
              "where": {
                "field": "type",
                "like": "[current('allowedType')]"
              }
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T16:13:56.664598+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:09:06.351773+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "VNET peering is not authorized in Sandbox",
    "displayName": "Sandbox-01 : VNET peering is not authorized in Sandbox",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Sandbox-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T16:13:56.7552297Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:19:51.0038178Z"
    },
    "mode": "All",
    "name": "Sandbox-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
        "field": "type"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T16:13:56.711474+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:19:50.881918+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed services for prod subscriptions",
    "displayName": "Migrate-01 : Only allowed services on Migration Tools management group",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Migrate-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-06T16:13:56.8408476Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:46:05.2636603Z"
    },
    "mode": "Indexed",
    "name": "Migrate-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResourceTypesAllowed": {
        "allowedValues": [
          "Microsoft.Migrate/MigrateProjects",
          "Microsoft.Migrate/MigrateProjects/Solutions",
          "Microsoft.Migrate/assessmentprojects",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "defaultValue": [
          "Microsoft.Migrate/MigrateProjects",
          "Microsoft.Migrate/MigrateProjects/Solutions",
          "Microsoft.Migrate/assessmentprojects",
          "Microsoft.OffAzure/MasterSites",
          "Microsoft.OffAzure/ServerSites",
          "Microsoft.OffAzure/MasterSites/SqlSites",
          "Microsoft.OffAzure/MasterSites/WebAppSites",
          "Microsoft.OffAzure/VMwareSites",
          "Microsoft.KeyVault/vaults",
          "Microsoft.KeyVault/vaults/secrets",
          "Microsoft.KeyVault/vaults/providers/locks",
          "Microsoft.RecoveryServices/vaults",
          "Microsoft.RecoveryServices/vaults/replicationPolicies",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationProtectionContainerMappings",
          "Microsoft.RecoveryServices/vaults/replicationFabrics/replicationProtectionContainers/replicationMigrationItems",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.ServiceBus/namespaces/providers/locks",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Storage/storageAccounts/providers/locks",
          "Microsoft.OperationalInsights/workspaces",
          "Microsoft.OperationsManagement/solutions"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed.",
          "displayName": "Allowed resource types",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "count": {
          "name": "allowedType",
          "value": "[parameters('listOfResourceTypesAllowed')]",
          "where": {
            "field": "type",
            "like": "[current('allowedType')]"
          }
        },
        "equals": 0
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-06T16:13:56.789600+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:46:05.213955+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "All activity & application logs must be monitored and exported to the existing central cybersecurity LAW",
    "displayName": "ACA-05-ENFORCE: All activity & application logs must be monitored and exported to the existing central cybersecurity LAW",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/ACA-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T15:21:24.6579696Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-21T11:06:12.3602184Z"
    },
    "mode": "All",
    "name": "ACA-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.App/managedEnvironments",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.App/managedEnvironments/appLogsConfiguration.destination"
              },
              {
                "field": "Microsoft.App/managedEnvironments/appLogsConfiguration.destination",
                "notEquals": "azure-monitor, log-analytics"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T15:21:24.635043+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-21T11:06:12.340658+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For Azure Container Apps tagged availability A2 or higher , 'Zone redundancy' feature must be enabled",
    "displayName": "ACA-02-ENFORCE: For Azure Container Apps tagged availability A2 or higher , 'Zone redundancy' feature must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/ACA-02-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T15:21:25.0637255Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:42:59.5339368Z"
    },
    "mode": "All",
    "name": "ACA-02-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "tagName": {
        "allowedValues": null,
        "defaultValue": "availability",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Name of the tag",
          "displayName": "Tag Sub Name",
          "strongType": null
        },
        "type": "String"
      },
      "tagValue": {
        "allowedValues": [
          "A2",
          "A3",
          "A4"
        ],
        "defaultValue": [
          "A2",
          "A3",
          "A4"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed tag",
          "displayName": "Tag Value",
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.App/managedEnvironments",
            "field": "type"
          },
          {
            "in": "[parameters('tagValue')]",
            "value": "[toUpper(subscription().tags[parameters('tagName')])]"
          },
          {
            "field": "Microsoft.App/managedEnvironments/zoneRedundant",
            "notEquals": true
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T15:21:25.025679+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:42:59.466004+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "'InternalOnly' setting must be set to true on all Azure Container Environnements (Networking : internal-only access)",
    "displayName": "ACA-03-ENFORCE: 'InternalOnly' setting must be set to true on all Azure Container Environnements",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/ACA-03-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-07T15:21:25.2003064Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:21:23.2415935Z"
    },
    "mode": "All",
    "name": "ACA-03-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.App/managedEnvironments",
            "field": "type"
          },
          {
            "field": "Microsoft.App/managedEnvironments/vnetConfiguration.internal",
            "notEquals": true
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-07T15:21:25.135058+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:21:23.200621+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only RedHat, Microsoft Server and Desktop images are allowed",
    "displayName": "VM-IMAGE-01: Only RedHat, Microsoft Server and Desktop images are allowed",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/VM-IMAGE-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-04-22T09:03:05.4938797Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-06-10T12:20:20.8894171Z"
    },
    "mode": "All",
    "name": "VM-IMAGE-01-sgct",
    "parameters": {
      "AllowedPublishers": {
        "allowedValues": null,
        "defaultValue": [
          "RedHat",
          "MicrosoftWindowsServer",
          "AzureDatabricks"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of allowed publishers for VM's ",
          "displayName": "WAF Imperva IPs",
          "strongType": null
        },
        "type": "array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Compute/imagePublisher",
                "notIn": "[parameters('AllowedPublishers')]"
              },
              {
                "allOf": [
                  {
                    "equals": "RedHat",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSku",
                        "notLike": "8*"
                      },
                      {
                        "count": {
                          "name": "digit",
                          "value": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "9"
                          ],
                          "where": {
                            "allOf": [
                              {
                                "notEquals": -1,
                                "value": "[indexOf(first(field('Microsoft.Compute/imageSku')), current('digit'))]"
                              },
                              {
                                "greater": "[indexOf(first(field('Microsoft.Compute/imageSku')), current('digit'))]",
                                "value": "[indexOf(first(field('Microsoft.Compute/imageSku')), '8')]"
                              }
                            ]
                          }
                        },
                        "greater": 0
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "allOf": [
                      {
                        "equals": "false",
                        "value": "[startsWith(field('Microsoft.Compute/imageSku'), '2019')]"
                      },
                      {
                        "equals": "false",
                        "value": "[startsWith(field('Microsoft.Compute/imageSku'), '2022')]"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-04-22T09:03:05.467742+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-10T12:20:20.851267+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Internal Virtual network must be used for Azure APIM",
    "displayName": "APIM-17: Internal Virtual network must be used for Azure APIM",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/APIM-17-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T12:18:02.5323171Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "APIM-17-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "exists": "false",
                "field": "Microsoft.ApiManagement/service/virtualNetworkType"
              },
              {
                "field": "Microsoft.ApiManagement/service/virtualNetworkType",
                "notEquals": "Internal"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T12:18:02.514321+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T12:18:02.514321+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public IP adresses are not allowed on VMs ",
    "displayName": "Business-06-ENFORCE : Public IP adresses are not allowed on VMs",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Business-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T15:46:30.643719Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:32:09.9174005Z"
    },
    "mode": "All",
    "name": "Business-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/networkInterfaces",
            "field": "type"
          },
          {
            "not": {
              "field": "Microsoft.Network/networkInterfaces/ipconfigurations[*].publicIpAddress.id",
              "notLike": "*"
            }
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T15:46:30.600148+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:32:09.871784+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Storage account accepts only https connection",
    "displayName": "Business-04-ENFORCE : Storage account accepts only https connection",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Business-04-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T15:46:30.7504019Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:04:50.3252781Z"
    },
    "mode": "All",
    "name": "Business-04-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Modify",
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The effect determines what happens when the policy rule is evaluated to match",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Storage/storageAccounts",
            "field": "type"
          },
          {
            "equals": "false",
            "field": "Microsoft.Storage/storageAccounts/isNfsV3Enabled"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "less": "2019-04-01",
                    "value": "[requestContext().apiVersion]"
                  },
                  {
                    "exists": "false",
                    "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
                  }
                ]
              },
              {
                "equals": "false",
                "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "conflictEffect": "Audit",
          "operations": [
            {
              "field": "Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly",
              "operation": "addOrReplace",
              "value": true
            }
          ],
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
          ]
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T15:46:30.631399+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:04:50.283303+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "VNET peering with a vnet non authorized (not in SGT Hub)",
    "displayName": "Business-07-ENFORCE : VNET peering with a vnet non authorized",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Business-07-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T15:46:30.9672194Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:12:10.4359526Z"
    },
    "mode": "All",
    "name": "Business-07-ENFORCE-sgct",
    "parameters": {
      "HubList": {
        "allowedValues": [
          "/subscriptions/5252d0de-0227-4f7f-a90a-c48ed86691c9/*",
          "/subscriptions/3fe1460a-2689-4e59-a08e-46a55d891daa/*",
          "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/*",
          "/subscriptions/4b359daf-cdce-4ec8-9fc5-ee824a24f819/*",
          "/subscriptions/a558d3c7-a48f-48e1-9140-6337c7fbdb5d/*",
          "/subscriptions/3b890c4a-a1a4-4385-83fd-7f3bf03915ae/*"
        ],
        "defaultValue": [
          "/subscriptions/5252d0de-0227-4f7f-a90a-c48ed86691c9/*",
          "/subscriptions/3fe1460a-2689-4e59-a08e-46a55d891daa/*",
          "/subscriptions/4f990712-a89a-442a-a869-d2d3bec64927/*",
          "/subscriptions/4b359daf-cdce-4ec8-9fc5-ee824a24f819/*",
          "/subscriptions/a558d3c7-a48f-48e1-9140-6337c7fbdb5d/*",
          "/subscriptions/3b890c4a-a1a4-4385-83fd-7f3bf03915ae/*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "list of hubs indicators",
          "displayName": "Hubs List",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "field": "type"
          },
          {
            "count": {
              "name": "allowedHub",
              "value": "[parameters('HubList')]",
              "where": {
                "field": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id",
                "like": "[current('allowedHub')]"
              }
            },
            "equals": 0
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T15:46:30.740743+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:12:10.412105+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": " Allow only Ecrypted Database",
    "displayName": "Business-01-ENFORCE : Allow only Ecrypted Database",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/Business-01-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-10T15:46:31.097072Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:52:19.2320885Z"
    },
    "mode": "All",
    "name": "Business-01-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The effect determines what happens when the policy rule is evaluated to match",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "field": "type"
          },
          {
            "equals": "disabled",
            "field": "Microsoft.Sql/servers/databases/transparentDataEncryption/status"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-10T15:46:30.787607+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:52:19.210501+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For data availability >= A2 soft delete and purge protection must be enabled ",
    "displayName": "AAC-08-ENFORCE: For data availability >= A2 soft delete and purge protection must be enabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/AAC-08-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-26T13:01:11.7284059Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:36:48.5684631Z"
    },
    "mode": "All",
    "name": "AAC-08-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AppConfiguration/configurationStores",
            "field": "type"
          },
          {
            "In": [
              "A2",
              "A3",
              "A4"
            ],
            "value": "[toUpper(subscription().tags['availability'])]"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.AppConfiguration/configurationStores/enablePurgeProtection",
                "notEquals": true
              },
              {
                "field": "Microsoft.AppConfiguration/configurationStores/softDeleteRetentionInDays",
                "lessOrEquals": 6
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-26T13:01:11.686886+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:36:48.532686+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "For data  availability >= A4 use geo-replication to replicate your data to a different location ",
    "displayName": "AAC-09-ENFORCE: For data availability >= A4 use geo-replication to replicate your data to a different location",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/AAC-09-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-07-26T13:01:11.9406393Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:03:16.5268663Z"
    },
    "mode": "All",
    "name": "AAC-09-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "DeployIfNotExists"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.AppConfiguration/configurationStores",
            "field": "type"
          },
          {
            "equals": "A4",
            "value": "[toUpper(subscription().tags['availability'])]"
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "appName": {
                  "value": "[field('name')]"
                },
                "location": {
                  "value": "[field('location')]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "appName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2023-03-01",
                    "location": "East US 2",
                    "name": "[concat(parameters('appName'), '/AppConfigurationReplica')]",
                    "type": "Microsoft.AppConfiguration/configurationStores/replicas"
                  }
                ]
              }
            }
          },
          "roleDefinitionIds": [
            "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
          ],
          "type": "Microsoft.AppConfiguration/configurationStores/replicas"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-07-26T13:01:11.890012+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:03:16.463890+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only 'ESU' and 'Machine - Azure ARC' are authorized inside ARC management group",
    "displayName": "ARC-01-sgct: Only 'ESU' and 'Machine - Azure ARC' are authorized inside ARC management group",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/ARC-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-02T12:29:24.5864139Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-07T16:12:18.3111304Z"
    },
    "mode": "Indexed",
    "name": "ARC-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResourceTypesAllowed": {
        "allowedValues": null,
        "defaultValue": [
          "Microsoft.HybridCompute/machines",
          "Microsoft.HybridCompute/licenses",
          "Microsoft.HybridCompute/machines/extensions",
          "Microsoft.Resources/resourceGroups",
          "Microsoft.Resources/deployments",
          "Microsoft.HybridCompute/machines/licenseProfiles",
          "Microsoft.ResourceGraph/queries",
          "Microsoft.AzureArcData/sqlServerInstances"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed.",
          "displayName": "allowed resource types",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "Notin": "[parameters('listOfResourceTypesAllowed')]",
        "field": "type"
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-02T12:29:24.562290+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-07T16:12:18.228468+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only extensions validated by security must be used",
    "displayName": "VM-14-ENFORCE - Only extensions validated by security must be used ",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/VM-14-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-08T14:41:55.861638Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-03-14T14:26:38.2997393Z"
    },
    "mode": "All",
    "name": "VM-14-ENFORCE-sgct",
    "parameters": {
      "approvedExtensions": {
        "allowedValues": [
          "LinuxDiagnostic",
          "RunCommandLinux",
          "OmsAgentForLinux",
          "MicrosoftMonitoringAgent",
          "DependencyAgentWindows",
          "DependencyAgentLinux",
          "IaaSDiagnostics",
          "NetworkWatcherAgentLinux",
          "KeyVaultForWindows",
          "AzureBackupWindowsWorkload",
          "MDE.Windows",
          "SqlIaaSAgent",
          "MDE.Linux",
          "CustomScriptExtension",
          "JsonADDomainExtension",
          "QualysAgent",
          "CustomScript",
          "QualysAgentLinux",
          "AzureMonitorWindowsAgent",
          "AzureMonitorLinuxAgent",
          "AzurePerformanceDiagnostics",
          "AzureBackupLinuxWorkload"
        ],
        "defaultValue": [
          "LinuxDiagnostic",
          "RunCommandLinux",
          "OmsAgentForLinux",
          "MicrosoftMonitoringAgent",
          "DependencyAgentWindows",
          "DependencyAgentLinux",
          "IaaSDiagnostics",
          "NetworkWatcherAgentLinux",
          "KeyVaultForWindows",
          "AzureBackupWindowsWorkload",
          "MDE.Windows",
          "SqlIaaSAgent",
          "MDE.Linux",
          "CustomScriptExtension",
          "JsonADDomainExtension",
          "QualysAgent",
          "CustomScript",
          "QualysAgentLinux",
          "AzureMonitorWindowsAgent",
          "AzureMonitorLinuxAgent",
          "AzurePerformanceDiagnostics",
          "AzureBackupLinuxWorkload"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of approved extension types that can be installed. Example: AzureDiskEncryption",
          "displayName": "Approved extensions",
          "strongType": null
        },
        "type": "Array"
      },
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Compute/virtualMachines/extensions",
            "field": "type"
          },
          {
            "field": "Microsoft.Compute/virtualMachines/extensions/type",
            "notIn": "[parameters('approvedExtensions')]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-08T14:41:55.818513+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-03-14T14:26:38.286947+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "On all use case, Audit diagnostic setting for selected resource types",
    "displayName": "DIAG-01: Audit diagnostic setting for selected resource types",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/DIAG-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-09T08:57:22.1835016Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-20T09:46:09.2203533Z"
    },
    "mode": "All",
    "name": "DIAG-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResources": {
        "allowedValues": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Sql/servers/databases",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/*",
          "Microsoft.Web/sites",
          "Microsoft.Sql/managedInstances",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines",
          "Microsoft.Insights/components"
        ],
        "defaultValue": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Sql/servers/databases",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/*",
          "Microsoft.Web/sites",
          "Microsoft.Sql/managedInstances",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines",
          "Microsoft.Insights/components"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of all resources who needs to have lock",
          "displayName": null,
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": "[parameters('listOfResources')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "equals": "true",
            "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-09T08:57:22.146764+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-20T09:46:09.182479+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "On all use case, Audit diagnostic setting for selected resource types and retention of 90 days",
    "displayName": "DIAG-02: Audit diagnostic setting for selected resource types and retention of 90 days",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/DIAG-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-09T08:57:22.2538332Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:04:50.4973756Z"
    },
    "mode": "All",
    "name": "DIAG-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "listOfResources": {
        "allowedValues": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Sql/servers/databases",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/*",
          "Microsoft.Web/sites",
          "Microsoft.Sql/managedInstances",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines"
        ],
        "defaultValue": [
          "Microsoft.AppConfiguration/configurationStores",
          "Microsoft.App/ContainerApps",
          "Microsoft.App/managedEnvironments",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.ContainerRegistry/registries",
          "Microsoft.Search/searchServices",
          "Microsoft.Databricks/workspaces",
          "Microsoft.DataFactory/factories",
          "Microsoft.ContainerService/ManagedClusters",
          "Microsoft.MachineLearningServices/workspaces",
          "Microsoft.ApiManagement/service",
          "Microsoft.Synapse/workspaces",
          "Microsoft.DocumentDB/databaseAccounts",
          "Microsoft.DBforMySQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/flexibleServers",
          "Microsoft.DBforPostgreSQL/servers",
          "Microsoft.DBforMySQL/servers",
          "Microsoft.Sql/servers/databases",
          "Microsoft.DataMigration/services",
          "Microsoft.EventGrid/*",
          "Microsoft.Web/sites",
          "Microsoft.Sql/managedInstances",
          "Microsoft.ServiceBus/namespaces",
          "Microsoft.Storage/storageAccounts",
          "Microsoft.Compute/virtualMachines",
          "Microsoft.ClassicCompute/virtualMachines"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of all resources who needs to have lock",
          "displayName": null,
          "strongType": null
        },
        "type": "array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": "[parameters('listOfResources')]"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "allOf": [
              {
                "equals": "true",
                "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.enabled"
              },
              {
                "field": "Microsoft.Insights/diagnosticSettings/logs[*].retentionPolicy.days",
                "greaterOrEquals": 89
              },
              {
                "equals": "true",
                "field": "Microsoft.Insights/diagnosticSettings/logs.enabled"
              }
            ]
          },
          "type": "Microsoft.Insights/diagnosticSettings"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-09T08:57:22.209244+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:04:50.455189+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Applications can ingest and query data through internet to the Application Insights",
    "displayName": "APPINS-06-ENFORCE: Applications can ingest and query data through internet to the Application Insights",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/APPINS-06-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-31T12:57:13.08628Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:24:28.3117759Z"
    },
    "mode": "All",
    "name": "APPINS-06-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Insights/components",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Insights/components/publicNetworkAccessForIngestion",
                "notEquals": "enabled"
              },
              {
                "field": "Microsoft.Insights/components/publicNetworkAccessForQuery",
                "notEquals": "enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-31T12:57:13.065585+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:24:28.260387+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Applications can ingest and query data through internet to the Application Insights",
    "displayName": "APPINS-06: Applications can ingest and query data through internet to the Application Insights",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/APPINS-06-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-31T12:57:13.5458072Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T13:26:01.4431693Z"
    },
    "mode": "All",
    "name": "APPINS-06-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Insights/components",
            "field": "type"
          },
          {
            "anyOf": [
              {
                "field": "Microsoft.Insights/components/publicNetworkAccessForIngestion",
                "notEquals": "enabled"
              },
              {
                "field": "Microsoft.Insights/components/publicNetworkAccessForQuery",
                "notEquals": "enabled"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-31T12:57:13.517077+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T13:26:01.392016+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "local authentification must be enabled",
    "displayName": "APPINS-05-ENFORCE: local authentification must be enabled for app Insights",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/APPINS-05-ENFORCE-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2023-08-31T12:57:13.9111438Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2023-10-19T14:06:28.5605979Z"
    },
    "mode": "All",
    "name": "APPINS-05-ENFORCE-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Deny",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Insights/components",
            "field": "type"
          },
          {
            "field": "Microsoft.Insights/components/DisableLocalAuth",
            "notEquals": "false"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2023-08-31T12:57:13.878143+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2023-10-19T14:06:28.524896+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Public network access on Azure IoT Hub should be disabled",
    "displayName": "IOT-HUB-07: Public network access on Azure IoT Hub should be disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-05T08:09:18.6205766Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "Microsoft.Devices/IotHubs/publicNetworkAccess",
            "notEquals": "Disabled"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-05T08:09:18.580824+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-05T08:09:18.580824+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Private endpoint should be enabled for IoT Hub",
    "displayName": "IOT-HUB-08: Private endpoint should be enabled for IoT Hub",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/IOT-HUB-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-05T08:09:18.6771956Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "IOT-HUB-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Devices/IotHubs",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "count": {
              "field": "Microsoft.Devices/IotHubs/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.Devices/IotHubs/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-05T08:09:18.652556+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-06-05T08:09:18.652556+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed and validates services must be deployed on APPIO",
    "displayName": "SVC-WL-03: Only allowed and validates services must be deployed on APPIO",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/SVC-WL-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T12:24:25.6261704Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-18T16:07:33.4763862Z"
    },
    "mode": "All",
    "name": "SVC-WL-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "excludedSubscriptions": {
        "allowedValues": [],
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "excludedSubscriptions",
          "displayName": "excludedSubscriptions",
          "strongType": null
        },
        "type": "Array"
      },
      "listOfAllowedServices_APPIO": {
        "allowedValues": [
          "Microsoft.Advisor/*",
          "Microsoft.AlertsManagement/*",
          "Microsoft.AnalysisServices/*",
          "Microsoft.Authorization/*",
          "Microsoft.CertificateRegistration/*",
          "Microsoft.Consumption/*",
          "Microsoft.CostManagement/*",
          "Microsoft.Dashboard/*",
          "Microsoft.DigitalTwins/*",
          "Microsoft.DBforPostgreSQL/*",
          "Microsoft.Devices/*",
          "Microsoft.EventGrid/*",
          "Microsoft.EventHub/*",
          "Microsoft.Insights/*",
          "Microsoft.KeyVault/*",
          "Microsoft.Kusto/*",
          "Microsoft.Maintenance/*",
          "Microsoft.ManagedIdentity/*",
          "Microsoft.Network/*",
          "Microsoft.OperationalInsights/*",
          "Microsoft.Resources/*",
          "Microsoft.Security/*",
          "Microsoft.ServiceBus/*",
          "Microsoft.Sql/servers",
          "Microsoft.Sql/servers/*",
          "Microsoft.Sql/virtualclusters",
          "Microsoft.Sql/virtualclusters/*",
          "Microsoft.Storage/*",
          "Microsoft.StreamAnalytics/*",
          "Microsoft.Web/*"
        ],
        "defaultValue": [
          "Microsoft.Advisor/*",
          "Microsoft.AlertsManagement/*",
          "Microsoft.AnalysisServices/*",
          "Microsoft.Authorization/*",
          "Microsoft.CertificateRegistration/*",
          "Microsoft.Consumption/*",
          "Microsoft.CostManagement/*",
          "Microsoft.Dashboard/*",
          "Microsoft.DigitalTwins/*",
          "Microsoft.DBforPostgreSQL/*",
          "Microsoft.Devices/*",
          "Microsoft.EventGrid/*",
          "Microsoft.EventHub/*",
          "Microsoft.Insights/*",
          "Microsoft.KeyVault/*",
          "Microsoft.Kusto/*",
          "Microsoft.Maintenance/*",
          "Microsoft.ManagedIdentity/*",
          "Microsoft.Network/*",
          "Microsoft.OperationalInsights/*",
          "Microsoft.Resources/*",
          "Microsoft.Security/*",
          "Microsoft.ServiceBus/*",
          "Microsoft.Sql/servers",
          "Microsoft.Sql/servers/*",
          "Microsoft.Sql/virtualclusters",
          "Microsoft.Sql/virtualclusters/*",
          "Microsoft.Storage/*",
          "Microsoft.StreamAnalytics/*",
          "Microsoft.Web/*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed on APPIO Spoke on LZv2",
          "displayName": "Allowed Services on APPIO",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      },
      "listOfExcludedServices_APPIO": {
        "allowedValues": [
          "Microsoft.Storage/storageAccounts/fileServices/*",
          "Microsoft.Storage/storageAccounts/fileServices/shares/*"
        ],
        "defaultValue": [
          "Microsoft.Storage/storageAccounts/fileServices/*",
          "Microsoft.Storage/storageAccounts/fileServices/shares/*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that cannot be deployed on APPIO Spoke on LZv2",
          "displayName": "Non Allowed Services on APPIO",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "type",
                "in": "[parameters('listOfExcludedServices_APPIO')]"
              },
              {
                "count": {
                  "name": "allowedService",
                  "value": "[parameters('listOfAllowedServices_APPIO')]",
                  "where": {
                    "field": "type",
                    "like": "[current('allowedService')]"
                  }
                },
                "equals": 0
              }
            ]
          },
          {
            "equals": "APPIO",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "notIn": "[parameters('excludedSubscriptions')]",
            "value": "[subscription().subscriptionId]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T12:24:25.646675+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-18T16:07:33.448960+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed and validates services must be deployed on APPE",
    "displayName": "SVC-WL-02: Only allowed and validates services must be deployed on APPE",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/SVC-WL-02-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T12:24:25.7257184Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-25T10:58:54.4408156Z"
    },
    "mode": "All",
    "name": "SVC-WL-02-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "excludedSubscriptions": {
        "allowedValues": [],
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "excludedSubscriptions",
          "displayName": "excludedSubscriptions",
          "strongType": null
        },
        "type": "Array"
      },
      "listOfAllowedCognitiveServices": {
        "allowedValues": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer"
        ],
        "defaultValue": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of kinds that can be deployed for cognitive services ",
          "displayName": "Allowed cognitive services kinds",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      },
      "listOfAllowedServices_APPE": {
        "allowedValues": [
          "Microsoft.Advisor/*",
          "Microsoft.AlertsManagement/*",
          "Microsoft.App/*",
          "Microsoft.Authorization/*",
          "Microsoft.Automation/*",
          "Microsoft.CertificateRegistration/*",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.Compute/*",
          "Microsoft.Consumption/*",
          "Microsoft.CostManagement/*",
          "Microsoft.DigitalTwins/*",
          "Microsoft.DBforPostgreSQL/*",
          "Microsoft.DBforMySQL/*",
          "Microsoft.Devices/*",
          "Microsoft.EventGrid/*",
          "Microsoft.EventHub/*",
          "Microsoft.Insights/*",
          "Microsoft.KeyVault/*",
          "Microsoft.Kubernetes/*",
          "Microsoft.KubernetesConfiguration/*",
          "Microsoft.Kusto/*",
          "Microsoft.Maintenance/*",
          "Microsoft.ManagedIdentity/*",
          "Microsoft.Network/*",
          "Microsoft.OperationalInsights/*",
          "Microsoft.OperationsManagement/*",
          "Microsoft.Portal/*",
          "Microsoft.RecoveryServices/*",
          "Microsoft.Resources/*",
          "Microsoft.Security/*",
          "Microsoft.ServiceBus/*",
          "Microsoft.Sql/servers",
          "Microsoft.Sql/servers/*",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Sql/managedInstances/*",
          "Microsoft.Sql/virtualclusters",
          "Microsoft.Sql/virtualclusters/*",
          "Microsoft.sqlvirtualmachine/*",
          "Microsoft.Storage/*",
          "Microsoft.StreamAnalytics/*",
          "Microsoft.Support/*",
          "Microsoft.Visualstudio/*",
          "Microsoft.Web/*",
          "Microsoft.WorkloadMonitor/*"
        ],
        "defaultValue": [
          "Microsoft.Advisor/*",
          "Microsoft.AlertsManagement/*",
          "Microsoft.App/*",
          "Microsoft.Authorization/*",
          "Microsoft.Automation/*",
          "Microsoft.CertificateRegistration/*",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.Compute/*",
          "Microsoft.Consumption/*",
          "Microsoft.CostManagement/*",
          "Microsoft.DigitalTwins/*",
          "Microsoft.DBforPostgreSQL/*",
          "Microsoft.DBforMySQL/*",
          "Microsoft.Devices/*",
          "Microsoft.EventGrid/*",
          "Microsoft.EventHub/*",
          "Microsoft.Insights/*",
          "Microsoft.KeyVault/*",
          "Microsoft.Kubernetes/*",
          "Microsoft.KubernetesConfiguration/*",
          "Microsoft.Kusto/*",
          "Microsoft.Maintenance/*",
          "Microsoft.ManagedIdentity/*",
          "Microsoft.Network/*",
          "Microsoft.OperationalInsights/*",
          "Microsoft.OperationsManagement/*",
          "Microsoft.Portal/*",
          "Microsoft.RecoveryServices/*",
          "Microsoft.Resources/*",
          "Microsoft.Security/*",
          "Microsoft.ServiceBus/*",
          "Microsoft.Sql/servers",
          "Microsoft.Sql/servers/*",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Sql/managedInstances/*",
          "Microsoft.Sql/virtualclusters",
          "Microsoft.Sql/virtualclusters/*",
          "Microsoft.sqlvirtualmachine/*",
          "Microsoft.Storage/*",
          "Microsoft.StreamAnalytics/*",
          "Microsoft.Support/*",
          "Microsoft.Visualstudio/*",
          "Microsoft.Web/*",
          "Microsoft.WorkloadMonitor/*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed on APPE Spoke on LZv2",
          "displayName": "Allowed Services on APPE",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "allOf": [
                  {
                    "field": "type",
                    "notEquals": "Microsoft.CognitiveServices/accounts"
                  },
                  {
                    "count": {
                      "name": "allowedService",
                      "value": "[parameters('listOfAllowedServices_APPE')]",
                      "where": {
                        "field": "type",
                        "like": "[current('allowedService')]"
                      }
                    },
                    "equals": 0
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Microsoft.CognitiveServices/accounts",
                    "field": "type"
                  },
                  {
                    "count": {
                      "name": "allowedKind",
                      "value": "[parameters('listOfAllowedCognitiveServices')]",
                      "where": {
                        "field": "kind",
                        "like": "[current('allowedKind')]"
                      }
                    },
                    "equals": 0
                  }
                ]
              }
            ]
          },
          {
            "equals": "APPE",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "notIn": "[parameters('excludedSubscriptions')]",
            "value": "[subscription().subscriptionId]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T12:24:25.746502+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-25T10:58:54.413655+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Only allowed and validates services must be deployed on APPI",
    "displayName": "SVC-WL-01: Only allowed and validates services must be deployed on APPI",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/SVC-WL-01-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-06-25T12:24:26.2254925Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "updatedOn": "2024-11-25T10:58:54.3539238Z"
    },
    "mode": "All",
    "name": "SVC-WL-01-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      },
      "excludedSubscriptions": {
        "allowedValues": [],
        "defaultValue": [],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "excludedSubscriptions",
          "displayName": "excludedSubscriptions",
          "strongType": null
        },
        "type": "Array"
      },
      "listOfAllowedCognitiveServices": {
        "allowedValues": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer"
        ],
        "defaultValue": [
          "SpeechServices",
          "ComputerVision",
          "CustomVision.Training",
          "CustomVision.Prediction",
          "TextTranslation",
          "Face",
          "FormRecognizer",
          "OpenAI",
          "AnomalyDetector",
          "ContentModerator",
          "ImmersiveReader",
          "LUIS",
          "Personalizer"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of kinds that can be deployed for cognitive services ",
          "displayName": "Allowed cognitive services kinds",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      },
      "listOfAllowedServices_APPI": {
        "allowedValues": [
          "Microsoft.Advisor/*",
          "Microsoft.AlertsManagement/*",
          "Microsoft.ApiManagement/*",
          "Microsoft.AppConfiguration/*",
          "Microsoft.App/*",
          "Microsoft.Authorization/*",
          "Microsoft.Automation/*",
          "Microsoft.Batch/*",
          "Microsoft.CertificateRegistration/*",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.Compute/*",
          "Microsoft.Consumption/*",
          "Microsoft.ContainerRegistry/*",
          "Microsoft.ContainerService/*",
          "Microsoft.CostManagement/*",
          "Microsoft.Dashboard/*",
          "Microsoft.Databricks/*",
          "Microsoft.DataFactory/*",
          "Microsoft.DigitalTwins/*",
          "Microsoft.DBforPostgreSQL/*",
          "Microsoft.DBforMySQL/*",
          "Microsoft.Devices/*",
          "Microsoft.DocumentDB/*",
          "Microsoft.EventGrid/*",
          "Microsoft.EventHub/*",
          "Microsoft.Insights/*",
          "Microsoft.KeyVault/*",
          "Microsoft.Kubernetes/*",
          "Microsoft.KubernetesConfiguration/*",
          "Microsoft.Kusto/*",
          "Microsoft.MachineLearningServices/*",
          "Microsoft.Maintenance/*",
          "Microsoft.ManagedIdentity/*",
          "Microsoft.Network/*",
          "Microsoft.OperationalInsights/*",
          "Microsoft.OperationsManagement/*",
          "Microsoft.Portal/*",
          "Microsoft.Purview/*",
          "Microsoft.RecoveryServices/*",
          "Microsoft.Resources/*",
          "Microsoft.Search/*",
          "Microsoft.Security/*",
          "Microsoft.ServiceBus/*",
          "Microsoft.Sql/servers",
          "Microsoft.Sql/servers/*",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Sql/managedInstances/*",
          "Microsoft.Sql/virtualclusters",
          "Microsoft.Sql/virtualclusters/*",
          "Microsoft.sqlvirtualmachine/*",
          "Microsoft.Storage/*",
          "Microsoft.StreamAnalytics/*",
          "Microsoft.Support/*",
          "Microsoft.Synapse/*",
          "Microsoft.Visualstudio/*",
          "Microsoft.Web/*",
          "Microsoft.WorkloadMonitor/*"
        ],
        "defaultValue": [
          "Microsoft.Advisor/*",
          "Microsoft.AlertsManagement/*",
          "Microsoft.ApiManagement/*",
          "Microsoft.AppConfiguration/*",
          "Microsoft.App/*",
          "Microsoft.Authorization/*",
          "Microsoft.Automation/*",
          "Microsoft.Batch/*",
          "Microsoft.CertificateRegistration/*",
          "Microsoft.CognitiveServices/accounts",
          "Microsoft.Compute/*",
          "Microsoft.Consumption/*",
          "Microsoft.ContainerRegistry/*",
          "Microsoft.ContainerService/*",
          "Microsoft.CostManagement/*",
          "Microsoft.Dashboard/*",
          "Microsoft.Databricks/*",
          "Microsoft.DataFactory/*",
          "Microsoft.DigitalTwins/*",
          "Microsoft.DBforPostgreSQL/*",
          "Microsoft.DBforMySQL/*",
          "Microsoft.Devices/*",
          "Microsoft.DocumentDB/*",
          "Microsoft.EventGrid/*",
          "Microsoft.EventHub/*",
          "Microsoft.Insights/*",
          "Microsoft.KeyVault/*",
          "Microsoft.Kubernetes/*",
          "Microsoft.KubernetesConfiguration/*",
          "Microsoft.Kusto/*",
          "Microsoft.MachineLearningServices/*",
          "Microsoft.Maintenance/*",
          "Microsoft.ManagedIdentity/*",
          "Microsoft.Network/*",
          "Microsoft.OperationalInsights/*",
          "Microsoft.OperationsManagement/*",
          "Microsoft.Portal/*",
          "Microsoft.Purview/*",
          "Microsoft.RecoveryServices/*",
          "Microsoft.Resources/*",
          "Microsoft.Search/*",
          "Microsoft.Security/*",
          "Microsoft.ServiceBus/*",
          "Microsoft.Sql/servers",
          "Microsoft.Sql/servers/*",
          "Microsoft.Sql/managedInstances",
          "Microsoft.Sql/managedInstances/*",
          "Microsoft.Sql/virtualclusters",
          "Microsoft.Sql/virtualclusters/*",
          "Microsoft.sqlvirtualmachine/*",
          "Microsoft.Storage/*",
          "Microsoft.StreamAnalytics/*",
          "Microsoft.Support/*",
          "Microsoft.Synapse/*",
          "Microsoft.Visualstudio/*",
          "Microsoft.Web/*",
          "Microsoft.WorkloadMonitor/*"
        ],
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "The list of resource types that can be deployed on APPI Spoke on LZv2",
          "displayName": "Allowed Services on APPI",
          "strongType": "resourceTypes"
        },
        "type": "Array"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyof": [
              {
                "allOf": [
                  {
                    "field": "type",
                    "notEquals": "Microsoft.CognitiveServices/accounts"
                  },
                  {
                    "count": {
                      "name": "allowedService",
                      "value": "[parameters('listOfAllowedServices_APPI')]",
                      "where": {
                        "field": "type",
                        "like": "[current('allowedService')]"
                      }
                    },
                    "equals": 0
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Microsoft.CognitiveServices/accounts",
                    "field": "type"
                  },
                  {
                    "count": {
                      "name": "allowedKind",
                      "value": "[parameters('listOfAllowedCognitiveServices')]",
                      "where": {
                        "field": "kind",
                        "like": "[current('allowedKind')]"
                      }
                    },
                    "equals": 0
                  }
                ]
              }
            ]
          },
          {
            "equals": "APPI",
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "notIn": "[parameters('excludedSubscriptions')]",
            "value": "[subscription().subscriptionId]"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-06-25T12:24:26.214873+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-11-25T10:58:54.335409+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Grid Domains must use private endpoints",
    "displayName": "EVG-10: Azure Event Grid Domains must use private endpoints",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-10-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:34:11.8094469Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-10-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/domains",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "kind",
            "notEquals": "AzureArc"
          },
          {
            "count": {
              "field": "Microsoft.EventGrid/domains/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.EventGrid/domains/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:34:11.751618+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:34:11.751618+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Grid Topics must have local authentication methods disabled",
    "displayName": "EVG-07: Azure Event Grid Topics must have local authentication methods disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-07-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:34:11.9593048Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-07-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/topics",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": false,
            "field": "Microsoft.EventGrid/topics/disableLocalAuth"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:34:11.911268+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:34:11.911268+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Grid Topics must disable public network access",
    "displayName": "EVG-03: Azure Event Grid Topics must disable public network access",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-03-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:34:12.0466222Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-03-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/topics",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.EventGrid/topics/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:34:12.002696+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:34:12.002696+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "System Topics, Topics and Domains are the only Event Grid products allowed",
    "displayName": "EVG-15: System Topics, Topics and Domains are the only Event Grid products allowed",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-15-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:34:12.3914677Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-15-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "like": "Microsoft.EventGrid/*"
          },
          {
            "field": "type",
            "notIn": [
              "Microsoft.EventGrid/systemTopics",
              "Microsoft.EventGrid/topics",
              "Microsoft.EventGrid/domains"
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:34:12.335319+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:34:12.335319+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Grid Topics must use private endpoints",
    "displayName": "EVG-09: Azure Event Grid Topics must use private endpoints",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-09-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:35:45.9984271Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-09-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/topics",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "field": "kind",
            "notEquals": "AzureArc"
          },
          {
            "count": {
              "field": "Microsoft.EventGrid/topics/privateEndpointConnections[*]",
              "where": {
                "equals": "Approved",
                "field": "Microsoft.EventGrid/topics/privateEndpointConnections[*].privateLinkServiceConnectionState.status"
              }
            },
            "less": 1
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:35:45.907152+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:35:45.907152+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Grid Domains must have local authentication methods disabled",
    "displayName": "EVG-08: Azure Event Grid Domains must have local authentication methods disabled",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:35:46.0752579Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/domains",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": false,
            "field": "Microsoft.EventGrid/domains/disableLocalAuth"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:35:46.035088+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:35:46.035088+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Grid Topics/Domains must use the latest TLS version (1.2)",
    "displayName": "EVG-13: Azure Event Grid Topics/Domains must use the latest TLS version (1.2)",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-13-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:35:46.1364331Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-13-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "field": "type",
            "in": [
              "Microsoft.EventGrid/topics",
              "Microsoft.EventGrid/domains"
            ]
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "exists": true,
                    "field": "Microsoft.EventGrid/topics/minimumTlsVersionAllowed"
                  },
                  {
                    "field": "Microsoft.EventGrid/topics/minimumTlsVersionAllowed",
                    "notEquals": 1.2
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "exists": true,
                    "field": "Microsoft.EventGrid/domains/minimumTlsVersionAllowed"
                  },
                  {
                    "field": "Microsoft.EventGrid/domains/minimumTlsVersionAllowed",
                    "notEquals": 1.2
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:35:46.100345+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:35:46.100345+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Azure Event Grid Domains must disable public network access",
    "displayName": "EVG-04: Azure Event Grid Domains must disable public network access",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/EVG-04-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T08:35:46.2113504Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "EVG-04-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny",
          "Disabled"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.EventGrid/domains",
            "field": "type"
          },
          {
            "in": [
              "APPI",
              "APPE"
            ],
            "value": "[toUpper(subscription().tags['spoke_type'])]"
          },
          {
            "equals": "Enabled",
            "field": "Microsoft.EventGrid/domains/publicNetworkAccess"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T08:35:46.180698+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T08:35:46.180698+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Custom Azure Bing Web Search API must not be allowed",
    "displayName": "BING-08: Custom Azure Bing Web Search API must not be allowed",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/BING-08-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-12-10T14:01:50.6597838Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "BING-08-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "Audit",
          "Deny"
        ],
        "defaultValue": "Audit",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Activate or deactivate the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.Bing/accounts",
            "field": "type"
          },
          {
            "equals": "Bing.CustomSearch",
            "field": "kind"
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-12-10T14:01:50.637112+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-12-10T14:01:50.637112+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Service Endpoints must not be enabled for APIM. Instead, IP address range of dependent service must be added and kept up-to-date",
    "displayName": "APIM-22: Service Endpoints must not be enabled for APIM. Instead, IP address range of dependent service must be added",
    "id": "/providers/Microsoft.Management/managementGroups/mg-sgec-bsns/providers/Microsoft.Authorization/policyDefinitions/APIM-22-sgct",
    "metadata": {
      "createdBy": "edaed872-b764-4b59-abc4-b12080060dc5",
      "createdOn": "2024-09-17T14:18:22.2465577Z",
      "securityCenter": {
        "RemediationDescription": "Check hardening Guides to see remediation: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>: <a href=\"https://saintgobain.sharepoint.com/:f:/r/sites/CORP-cybersecurity/Public%20Cloud%20Security/Service%20Enablement/Hardening%20Guides%20-%20Land%20Zone%20v1?csf=1&web=1&e=lPwSku\">Hardening Guides</a>",
        "Severity": "Medium"
      },
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "All",
    "name": "APIM-22-sgct",
    "parameters": {
      "effect": {
        "allowedValues": [
          "AuditIfNotExists",
          "Disabled"
        ],
        "defaultValue": "AuditIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enforce or Audit the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "equals": "Microsoft.ApiManagement/service",
            "field": "type"
          },
          {
            "exists": true,
            "field": "Microsoft.ApiManagement/service/virtualNetworkConfiguration"
          }
        ]
      },
      "then": {
        "details": {
          "existenceCondition": {
            "count": {
              "field": "Microsoft.Network/virtualNetworks/subnets[*]",
              "where": {
                "allOf": [
                  {
                    "equals": true,
                    "value": "[equals(current('Microsoft.Network/virtualNetworks/subnets[*].id'), field('Microsoft.ApiManagement/service/virtualNetworkConfiguration.subnetResourceId'))]"
                  },
                  {
                    "count": {
                      "field": "Microsoft.Network/virtualNetworks/subnets[*].serviceEndpoints[*]"
                    },
                    "greaterOrEquals": 1
                  }
                ]
              }
            },
            "equals": 0
          },
          "type": "Microsoft.Network/virtualNetworks"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-17T14:18:22.217945+00:00",
      "createdBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-17T14:18:22.217945+00:00",
      "lastModifiedBy": "a1e6c820-84c5-4baa-9f0e-1a75655a903e",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  },
  {
    "description": "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally include virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupIncludeTag.",
    "displayName": "Configure backup on virtual machines with a given tag to a new recovery services vault with a default policy",
    "id": "/subscriptions/531ae696-2bec-406c-86e9-20230f3dcd02/providers/Microsoft.Authorization/policyDefinitions/rsv-vm-policy-sgs-atu-prd-weu-core",
    "metadata": {
      "category": "VM Backup Policy",
      "createdBy": "2faa1e92-2482-4659-83f6-281910a04d11",
      "createdOn": "2024-09-24T08:52:41.3978365Z",
      "source": "core",
      "spoke": "1593z-sgds-analyticsuat-prd-westeurope",
      "updatedBy": null,
      "updatedOn": null
    },
    "mode": "Indexed",
    "name": "rsv-vm-policy-sgs-atu-prd-weu-core",
    "parameters": {
      "backupPolicyId": {
        "allowedValues": null,
        "defaultValue": "",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "The id of the default backup policy to be applied to the VM.",
          "strongType": null
        },
        "type": "String"
      },
      "backupPolicyTag": {
        "allowedValues": null,
        "defaultValue": "",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "The VM tag key that defines the backup policy that the VM is using.",
          "strongType": null
        },
        "type": "String"
      },
      "coreBackupPolicyKeyword": {
        "allowedValues": null,
        "defaultValue": "",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": null,
          "displayName": "The keyword used to configure the VM with the default backup policy.",
          "strongType": null
        },
        "type": "String"
      },
      "effect": {
        "allowedValues": [
          "auditIfNotExists",
          "AuditIfNotExists",
          "deployIfNotExists",
          "DeployIfNotExists",
          "disabled",
          "Disabled"
        ],
        "defaultValue": "DeployIfNotExists",
        "metadata": {
          "additionalProperties": null,
          "assignPermissions": null,
          "description": "Enable or disable the execution of the policy",
          "displayName": "Effect",
          "strongType": null
        },
        "type": "String"
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "equals": "[parameters('coreBackupPolicyKeyword')]",
                "field": "[concat('tags[', parameters('backupPolicyTag'), ']')]"
              },
              {
                "exists": "false",
                "field": "[concat('tags[', parameters('backupPolicyTag'), ']')]"
              }
            ]
          },
          {
            "equals": "Microsoft.Compute/virtualMachines",
            "field": "type"
          },
          {
            "field": "id",
            "notContains": "/resourceGroups/databricks-rg-"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "notEquals": "azureopenshift"
          },
          {
            "field": "Microsoft.Compute/imagePublisher",
            "notEquals": "AzureDatabricks"
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "WindowsServer",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSKU",
                    "in": [
                      "2008-R2-SP1",
                      "2008-R2-SP1-smalldisk",
                      "2012-Datacenter",
                      "2012-Datacenter-smalldisk",
                      "2012-R2-Datacenter",
                      "2012-R2-Datacenter-smalldisk",
                      "2016-Datacenter",
                      "2016-datacenter-gensecond",
                      "2016-Datacenter-Server-Core",
                      "2016-Datacenter-Server-Core-smalldisk",
                      "2016-Datacenter-smalldisk",
                      "2016-Datacenter-with-Containers",
                      "2016-Datacenter-with-RDSH",
                      "2019-Datacenter",
                      "2019-Datacenter-Core",
                      "2019-Datacenter-Core-smalldisk",
                      "2019-Datacenter-Core-with-Containers",
                      "2019-Datacenter-Core-with-Containers-smalldisk",
                      "2019-Datacenter-smalldisk",
                      "2019-Datacenter-with-Containers",
                      "2019-Datacenter-with-Containers-smalldisk",
                      "2019-Datacenter-zhcn",
                      "2019-datacenter-gensecond",
                      "2022-datacenter-g2",
                      "2022-datacenter",
                      "2022-datacenter-azure-edition",
                      "2022-datacenter-azure-edition-smalldisk",
                      "2022-datacenter-azure-edition-core",
                      "2022-datacenter-azure-edition-core-smalldisk",
                      "2022-datacenter-smalldisk-g2",
                      "2022-datacenter-smalldisk",
                      "2022-datacenter-core-g2",
                      "2022-datacenter-core",
                      "2022-datacenter-core-smalldisk-g2",
                      "2022-datacenter-core-smalldisk"
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "WindowsServerSemiAnnual",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSKU",
                    "in": [
                      "Datacenter-Core-1709-smalldisk",
                      "Datacenter-Core-1709-with-Containers-smalldisk",
                      "Datacenter-Core-1803-with-Containers-smalldisk"
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsServerHPCPack",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "WindowsServerHPCPack",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftSQLServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2019"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2016"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2016-BYOL"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2012R2"
                      },
                      {
                        "field": "Microsoft.Compute/imageOffer",
                        "like": "*-WS2012R2-BYOL"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftRServer",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "MLServer-WS2016",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftVisualStudio",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "VisualStudio",
                      "Windows"
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftDynamicsAX",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "Dynamics",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "equals": "Pre-Req-AX7-Onebox-U8",
                    "field": "Microsoft.Compute/imageSKU"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "microsoft-ads",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "windows-data-science-vm",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsDesktop",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "Windows-10",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "MicrosoftWindowsDesktop",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "Windows-11",
                    "field": "Microsoft.Compute/imageOffer"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "RedHat",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "RHEL",
                      "RHEL-SAP-HANA"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "6.*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "7*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "8*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "SUSE",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "SLES",
                      "SLES-HPC",
                      "SLES-HPC-Priority",
                      "SLES-SAP",
                      "SLES-SAP-BYOS",
                      "SLES-Priority",
                      "SLES-BYOS",
                      "SLES-SAPCAL",
                      "SLES-Standard"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "12*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Canonical",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "contains": "ubuntu",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "14.04*LTS"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "16.04*LTS"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "18.04*LTS"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "*20_04-lts"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "20_04-lts*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "22_04-lts-gen2"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "Oracle",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "Oracle-Linux",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "6.*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "7.*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "OpenLogic",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "field": "Microsoft.Compute/imageOffer",
                    "in": [
                      "CentOS",
                      "Centos-LVM",
                      "CentOS-SRIOV"
                    ]
                  },
                  {
                    "anyOf": [
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "6.*"
                      },
                      {
                        "field": "Microsoft.Compute/imageSKU",
                        "like": "7*"
                      }
                    ]
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "equals": "cloudera",
                    "field": "Microsoft.Compute/imagePublisher"
                  },
                  {
                    "equals": "cloudera-centos-os",
                    "field": "Microsoft.Compute/imageOffer"
                  },
                  {
                    "field": "Microsoft.Compute/imageSKU",
                    "like": "7*"
                  }
                ]
              }
            ]
          }
        ]
      },
      "then": {
        "details": {
          "deployment": {
            "properties": {
              "mode": "incremental",
              "parameters": {
                "backupPolicyId": {
                  "value": "[parameters('backupPolicyId')]"
                },
                "fabricName": {
                  "value": "Azure"
                },
                "protectedItems": {
                  "value": "[concat('vm;iaasvmcontainerv2;', resourceGroup().name, ';' ,field('name'))]"
                },
                "protectionContainers": {
                  "value": "[concat('iaasvmcontainer;iaasvmcontainerv2;', resourceGroup().name, ';' ,field('name'))]"
                },
                "sourceResourceId": {
                  "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Compute/virtualMachines/',field('name'))]"
                }
              },
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "backupPolicyId": {
                    "type": "String"
                  },
                  "fabricName": {
                    "type": "String"
                  },
                  "protectedItems": {
                    "type": "String"
                  },
                  "protectionContainers": {
                    "type": "String"
                  },
                  "sourceResourceId": {
                    "type": "String"
                  }
                },
                "resources": [
                  {
                    "apiVersion": "2017-05-10",
                    "name": "[concat('DeployProtection-',uniqueString(parameters('protectedItems')))]",
                    "properties": {
                      "mode": "Incremental",
                      "parameters": {
                        "backupPolicyId": {
                          "value": "[parameters('backupPolicyId')]"
                        },
                        "fabricName": {
                          "value": "[parameters('fabricName')]"
                        },
                        "protectedItems": {
                          "value": "[parameters('protectedItems')]"
                        },
                        "protectionContainers": {
                          "value": "[parameters('protectionContainers')]"
                        },
                        "sourceResourceId": {
                          "value": "[parameters('sourceResourceId')]"
                        }
                      },
                      "template": {
                        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                        "contentVersion": "1.0.0.0",
                        "parameters": {
                          "backupPolicyId": {
                            "type": "String"
                          },
                          "fabricName": {
                            "type": "String"
                          },
                          "protectedItems": {
                            "type": "String"
                          },
                          "protectionContainers": {
                            "type": "String"
                          },
                          "sourceResourceId": {
                            "type": "String"
                          }
                        },
                        "resources": [
                          {
                            "apiVersion": "2016-06-01",
                            "name": "[concat(first(skip(split(parameters('backupPolicyId'), '/'), 8)), '/', parameters('fabricName'), '/',parameters('protectionContainers'), '/', parameters('protectedItems'))]",
                            "properties": {
                              "policyId": "[parameters('backupPolicyId')]",
                              "protectedItemType": "Microsoft.Compute/virtualMachines",
                              "sourceResourceId": "[parameters('sourceResourceId')]"
                            },
                            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems"
                          }
                        ]
                      }
                    },
                    "resourceGroup": "[first(skip(split(parameters('backupPolicyId'), '/'), 4))]",
                    "subscriptionId": "[first(skip(split(parameters('backupPolicyId'), '/'), 2))]",
                    "type": "Microsoft.Resources/deployments"
                  }
                ]
              }
            }
          },
          "existenceCondition": {
            "contains": "[parameters('backupPolicyId')]",
            "field": "Microsoft.RecoveryServices/backupProtectedItems/policyId"
          },
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
            "/providers/microsoft.authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b"
          ],
          "type": "Microsoft.RecoveryServices/backupprotecteditems"
        },
        "effect": "[parameters('effect')]"
      }
    },
    "policyType": "Custom",
    "systemData": {
      "createdAt": "2024-09-24T08:52:41.335602+00:00",
      "createdBy": "7cfeaa60-88cf-4dc8-899d-0ef275587d3f",
      "createdByType": "Application",
      "lastModifiedAt": "2024-09-24T08:52:41.335602+00:00",
      "lastModifiedBy": "7cfeaa60-88cf-4dc8-899d-0ef275587d3f",
      "lastModifiedByType": "Application"
    },
    "type": "Microsoft.Authorization/policyDefinitions"
  }
]
