name: 'Bicep Deploy'

on:
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ vars.CLIENT_ID }}  
  ARM_USE_OIDC: true
  ARM_SUBSCRIPTION_ID: ${{ vars.SUBSCRIPTION_ID }} 
  ARM_TENANT_ID: ${{ vars.TENANT_ID }}

permissions:
  contents: write
  pages: write
  id-token: write  
  deployments: write

jobs:
  bicep_whatif:
    name: 'Bicep What-if'
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}
    strategy: 
      fail-fast: false
      matrix:
          environment:
              - dev
              #- utv

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
         client-id: '${{ env.ARM_CLIENT_ID }}'
         subscription-id: '${{ env.ARM_SUBSCRIPTION_ID }}'
         tenant-id: '${{ env.ARM_TENANT_ID }}'

    - name: Bicep what-if
      uses: azure/powershell@v2
      with:
        inlineScript: ./frontdoor01/deploy.ps1 ${{ matrix.environment }} what-if
        azPSVersion: "latest"

  bicep_release:
    name: 'Bicep Release'
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
          environment:
              - dev
              
    environment: ${{ matrix.environment }}
    needs: [bicep_whatif]
    if: github.ref == 'refs/heads/main' && github.event_name != 'schedule'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
         client-id: '${{ env.ARM_CLIENT_ID }}'
         subscription-id: '${{ env.ARM_SUBSCRIPTION_ID }}'
         tenant-id: '${{ env.ARM_TENANT_ID }}'

    - name: Bicep release
      uses: azure/powershell@v2
      with:
        inlineScript: ./frontdoor01/deploy.ps1 ${{ matrix.environment }} create
        azPSVersion: "latest"